{{ define "aro-dnsmasq-pre.sh" }}
#!/bin/bash
set -euo pipefail

# This bash script is a part of the ARO DnsMasq configuration
# It's deployed as part of the 99-aro-dns-* machine config
# See https://github.com/Azure/ARO-RP

# This file can be rerun and the effect is idempotent, output might change if the DHCP configuration changes

TMPSELFRESOLV=$(mktemp)
TMPNETRESOLV=$(mktemp)

echo "# Generated for dnsmasq.service - should point to self" > $TMPSELFRESOLV
echo "# Generated for dnsmasq.service - should contain DHCP configured DNS" > $TMPNETRESOLV

if nmcli device show br-ex; then
    echo "OVN mode - br-ex device exists"
    #getting DNS search strings
    SEARCH_RAW=$(nmcli --get IP4.DOMAIN device show br-ex)
    #getting DNS servers
    NAMESERVER_RAW=$(nmcli --get IP4.DNS device show br-ex | tr -s " | " "\n")
    LOCAL_IPS_RAW=$(nmcli --get IP4.ADDRESS device show br-ex)
else
    NETDEV=$(nmcli --get device connection show --active | head -n 1) #there should be only one active device
    echo "OVS SDN mode - br-ex not found, using device $NETDEV"
    SEARCH_RAW=$(nmcli --get IP4.DOMAIN device show $NETDEV)
    NAMESERVER_RAW=$(nmcli --get IP4.DNS device show $NETDEV | tr -s " | " "\n")
    LOCAL_IPS_RAW=$(nmcli --get IP4.ADDRESS device show $NETDEV)
fi

#search line
echo "search $SEARCH_RAW" | tr '\n' ' ' >> $TMPNETRESOLV
echo "" >> $TMPNETRESOLV
echo "search $SEARCH_RAW" | tr '\n' ' ' >> $TMPSELFRESOLV
echo "" >> $TMPSELFRESOLV

#nameservers as separate lines
echo "$NAMESERVER_RAW" | while read -r line
do
    echo "nameserver $line" >> $TMPNETRESOLV
done
# device IPs are returned in address/mask format
echo "$LOCAL_IPS_RAW" | while read -r line
do
    echo "nameserver $line" | cut -d'/' -f 1 >> $TMPSELFRESOLV
done

# done, copying files to destination locations and cleaning up
/bin/cp $TMPNETRESOLV /etc/resolv.conf.dnsmasq
chmod 0744 /etc/resolv.conf.dnsmasq
/bin/cp $TMPSELFRESOLV /etc/resolv.conf
/usr/sbin/restorecon /etc/resolv.conf
/bin/rm $TMPNETRESOLV
/bin/rm $TMPSELFRESOLV
{{ end }}