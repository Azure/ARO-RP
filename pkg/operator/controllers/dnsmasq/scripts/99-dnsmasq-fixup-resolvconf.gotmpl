{{ define "99-dnsmasq-fixup-resolvconf" }}
#!/bin/bash
# This is a NetworkManager dispatcher script to restart dnsmasq
# in the event of a network interface change (e. g. host servicing event https://learn.microsoft.com/en-us/azure/developer/intro/hosting-apps-on-azure)
# this will restart dnsmasq, reapplying our /etc/resolv.conf file and overwriting any modifications made by NetworkManager

set -o pipefail \
    -o errexit \
    -o nounset

declare -r facility_daemon="daemon"
# shellcheck disable=SC2034
declare -r priority_info="${facility_daemon}.info"
# shellcheck disable=SC2034
declare -r priority_err="${facility_daemon}.err"

main() {
    local -r interface=$1
    local -r operation=$2

    local -r act_on_operations="(up|connectivity-change|dhcp4-change|dhcp6-change)"
    if [[ $interface == enP* || $interface == eth0 ]] && [[ $operation =~ $act_on_operations ]]; then
        log "$operation occured on $interface"
        log_dns_files
        local -r dnsmasq_pre_script="/usr/local/bin/aro-dnsmasq-pre.sh"
        log "Running $dnsmasq_pre_script now"
        local dnsmasq_prescript_output
        if ! dnsmasq_prescript_output="$($dnsmasq_pre_script false)"; then
            log "$dnsmasq_pre_script failed with
            $dnsmasq_prescript_output" priority_err
            exit 1
        fi

        log "$dnsmasq_pre_script succeeded with
        $dnsmasq_prescript_output"
        log_dns_files
    fi
}

# log
# args:
#   1) msg - string; The message to log
#   2) priority - nameref, optional; defaults to daemon.info
log() {
    local -r msg="$1"
    local -n priority="${2:-priority_info}"

    local -r pid="$0"
    local -r log_tag='99-DNSMASQ-RESTART SCRIPT'

    /usr/bin/logger -i "$pid" \
           --priority "$priority" \
           --tag "$log_tag" \
           "$msg"
}

# log_dns_files
# logs dns configuration information relevant to SRE while troubleshooting
log_dns_files() {
    local -r resolvconf="/etc/resolv.conf"
    local -r resolvconf_dnsmasq="/etc/resolv.conf.dnsmasq"
    local -r resolvconf_contents="$(cat $resolvconf)"
    local -r resolvconf_metadata="$(ls -lZ $resolvconf)"
    local -r resolvconf_dnsmasq_contents="$(cat $resolvconf_dnsmasq)"
    local -r resolvconf_dnsmasq_metadata="$(ls -lZ $resolvconf_dnsmasq)"

    # linebreaks are for formatting the log message
    log "$resolvconf file metadata: $resolvconf_metadata
$resolvconf contents:
\"$resolvconf_contents\"

$resolvconf_dnsmasq file metadata: $resolvconf_dnsmasq_metadata
$resolvconf_dnsmasq contents:
\"$resolvconf_dnsmasq_contents\""
}

cat() {
    # shellcheck disable=SC2068
    /usr/bin/cat $@
}

ls() {
    # shellcheck disable=SC2068
    /usr/bin/ls $@
}

main "$@"

{{ end }}