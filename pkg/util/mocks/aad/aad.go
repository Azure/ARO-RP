// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/ARO-RP/pkg/util/aad (interfaces: TokenClient)

// Package mock_aad is a generated GoMock package.
package mock_aad

import (
	context "context"
	reflect "reflect"

	adal "github.com/Azure/go-autorest/autorest/adal"
	gomock "github.com/golang/mock/gomock"
	logrus "github.com/sirupsen/logrus"
)

// MockTokenClient is a mock of TokenClient interface.
type MockTokenClient struct {
	ctrl     *gomock.Controller
	recorder *MockTokenClientMockRecorder
}

// MockTokenClientMockRecorder is the mock recorder for MockTokenClient.
type MockTokenClientMockRecorder struct {
	mock *MockTokenClient
}

// NewMockTokenClient creates a new mock instance.
func NewMockTokenClient(ctrl *gomock.Controller) *MockTokenClient {
	mock := &MockTokenClient{ctrl: ctrl}
	mock.recorder = &MockTokenClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenClient) EXPECT() *MockTokenClientMockRecorder {
	return m.recorder
}

// GetToken mocks base method.
func (m *MockTokenClient) GetToken(arg0 context.Context, arg1 *logrus.Entry, arg2, arg3, arg4, arg5, arg6 string) (*adal.ServicePrincipalToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken", arg0, arg1, arg2, arg3, arg4, arg5, arg6)
	ret0, _ := ret[0].(*adal.ServicePrincipalToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetToken indicates an expected call of GetToken.
func (mr *MockTokenClientMockRecorder) GetToken(arg0, arg1, arg2, arg3, arg4, arg5, arg6 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockTokenClient)(nil).GetToken), arg0, arg1, arg2, arg3, arg4, arg5, arg6)
}
