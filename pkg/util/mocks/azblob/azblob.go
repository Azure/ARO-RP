// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/ARO-RP/pkg/util/azblob (interfaces: Manager)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/azblob/azblob.go github.com/Azure/ARO-RP/pkg/util/azblob Manager
//

// Package mock_azblob is a generated GoMock package.
package mock_azblob

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"

	armstorage "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"

	azblob "github.com/Azure/ARO-RP/pkg/util/azureclient/azuresdk/azblob"
)

// MockManager is a mock of Manager interface.
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
}

// MockManagerMockRecorder is the mock recorder for MockManager.
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance.
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// GetBlobClient mocks base method.
func (m *MockManager) GetBlobClient(arg0 string) (azblob.BlobsClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlobClient", arg0)
	ret0, _ := ret[0].(azblob.BlobsClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlobClient indicates an expected call of GetBlobClient.
func (mr *MockManagerMockRecorder) GetBlobClient(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlobClient", reflect.TypeOf((*MockManager)(nil).GetBlobClient), arg0)
}

// GetContainerProperties mocks base method.
func (m *MockManager) GetContainerProperties(arg0 context.Context, arg1, arg2, arg3 string) (armstorage.AccountsClientGetPropertiesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContainerProperties", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armstorage.AccountsClientGetPropertiesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContainerProperties indicates an expected call of GetContainerProperties.
func (mr *MockManagerMockRecorder) GetContainerProperties(arg0, arg1, arg2, arg3 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContainerProperties", reflect.TypeOf((*MockManager)(nil).GetContainerProperties), arg0, arg1, arg2, arg3)
}
