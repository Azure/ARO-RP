// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/ARO-RP/pkg/util/azureclient/mgmt/containerservice (interfaces: ManagedClustersClient)

// Package mock_containerservice is a generated GoMock package.
package mock_containerservice

import (
	context "context"
	reflect "reflect"

	containerservice "github.com/Azure/azure-sdk-for-go/services/containerservice/mgmt/2021-10-01/containerservice"
	gomock "github.com/golang/mock/gomock"
)

// MockManagedClustersClient is a mock of ManagedClustersClient interface.
type MockManagedClustersClient struct {
	ctrl     *gomock.Controller
	recorder *MockManagedClustersClientMockRecorder
}

// MockManagedClustersClientMockRecorder is the mock recorder for MockManagedClustersClient.
type MockManagedClustersClientMockRecorder struct {
	mock *MockManagedClustersClient
}

// NewMockManagedClustersClient creates a new mock instance.
func NewMockManagedClustersClient(ctrl *gomock.Controller) *MockManagedClustersClient {
	mock := &MockManagedClustersClient{ctrl: ctrl}
	mock.recorder = &MockManagedClustersClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManagedClustersClient) EXPECT() *MockManagedClustersClientMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockManagedClustersClient) List(arg0 context.Context) (containerservice.ManagedClusterListResultPage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(containerservice.ManagedClusterListResultPage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockManagedClustersClientMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockManagedClustersClient)(nil).List), arg0)
}

// ListClusterAdminCredentials mocks base method.
func (m *MockManagedClustersClient) ListClusterAdminCredentials(arg0 context.Context, arg1, arg2, arg3 string) (containerservice.CredentialResults, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListClusterAdminCredentials", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(containerservice.CredentialResults)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListClusterAdminCredentials indicates an expected call of ListClusterAdminCredentials.
func (mr *MockManagedClustersClientMockRecorder) ListClusterAdminCredentials(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListClusterAdminCredentials", reflect.TypeOf((*MockManagedClustersClient)(nil).ListClusterAdminCredentials), arg0, arg1, arg2, arg3)
}
