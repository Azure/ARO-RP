// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/ARO-RP/pkg/util/azureclient/azuresdk/armcosmos (interfaces: DatabaseAccountsClient)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/azureclient/azuresdk/armcosmos/armcosmos.go github.com/Azure/ARO-RP/pkg/util/azureclient/azuresdk/armcosmos DatabaseAccountsClient
//

// Package mock_armcosmos is a generated GoMock package.
package mock_armcosmos

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"

	armcosmos "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cosmos/armcosmos/v2"
)

// MockDatabaseAccountsClient is a mock of DatabaseAccountsClient interface.
type MockDatabaseAccountsClient struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseAccountsClientMockRecorder
	isgomock struct{}
}

// MockDatabaseAccountsClientMockRecorder is the mock recorder for MockDatabaseAccountsClient.
type MockDatabaseAccountsClientMockRecorder struct {
	mock *MockDatabaseAccountsClient
}

// NewMockDatabaseAccountsClient creates a new mock instance.
func NewMockDatabaseAccountsClient(ctrl *gomock.Controller) *MockDatabaseAccountsClient {
	mock := &MockDatabaseAccountsClient{ctrl: ctrl}
	mock.recorder = &MockDatabaseAccountsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabaseAccountsClient) EXPECT() *MockDatabaseAccountsClientMockRecorder {
	return m.recorder
}

// ListKeys mocks base method.
func (m *MockDatabaseAccountsClient) ListKeys(ctx context.Context, resourceGroupName, accountName string, options *armcosmos.DatabaseAccountsClientListKeysOptions) (armcosmos.DatabaseAccountsClientListKeysResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListKeys", ctx, resourceGroupName, accountName, options)
	ret0, _ := ret[0].(armcosmos.DatabaseAccountsClientListKeysResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListKeys indicates an expected call of ListKeys.
func (mr *MockDatabaseAccountsClientMockRecorder) ListKeys(ctx, resourceGroupName, accountName, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListKeys", reflect.TypeOf((*MockDatabaseAccountsClient)(nil).ListKeys), ctx, resourceGroupName, accountName, options)
}
