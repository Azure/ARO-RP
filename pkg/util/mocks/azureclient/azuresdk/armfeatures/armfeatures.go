// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/ARO-RP/pkg/util/azureclient/azuresdk/armfeatures (interfaces: SubscriptionFeatureRegistrationsClient)

// Package mock_armfeatures is a generated GoMock package.
package mock_armfeatures

import (
	context "context"
	reflect "reflect"

	armfeatures "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armfeatures"
	gomock "github.com/golang/mock/gomock"
)

// MockSubscriptionFeatureRegistrationsClient is a mock of SubscriptionFeatureRegistrationsClient interface.
type MockSubscriptionFeatureRegistrationsClient struct {
	ctrl     *gomock.Controller
	recorder *MockSubscriptionFeatureRegistrationsClientMockRecorder
}

// MockSubscriptionFeatureRegistrationsClientMockRecorder is the mock recorder for MockSubscriptionFeatureRegistrationsClient.
type MockSubscriptionFeatureRegistrationsClientMockRecorder struct {
	mock *MockSubscriptionFeatureRegistrationsClient
}

// NewMockSubscriptionFeatureRegistrationsClient creates a new mock instance.
func NewMockSubscriptionFeatureRegistrationsClient(ctrl *gomock.Controller) *MockSubscriptionFeatureRegistrationsClient {
	mock := &MockSubscriptionFeatureRegistrationsClient{ctrl: ctrl}
	mock.recorder = &MockSubscriptionFeatureRegistrationsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSubscriptionFeatureRegistrationsClient) EXPECT() *MockSubscriptionFeatureRegistrationsClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockSubscriptionFeatureRegistrationsClient) Get(arg0 context.Context, arg1, arg2 string, arg3 *armfeatures.SubscriptionFeatureRegistrationsClientGetOptions) (armfeatures.SubscriptionFeatureRegistrationsClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(armfeatures.SubscriptionFeatureRegistrationsClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSubscriptionFeatureRegistrationsClientMockRecorder) Get(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSubscriptionFeatureRegistrationsClient)(nil).Get), arg0, arg1, arg2, arg3)
}
