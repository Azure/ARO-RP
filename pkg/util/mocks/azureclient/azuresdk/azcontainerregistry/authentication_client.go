// Code generated by MockGen. DO NOT EDIT.
// Source: authentication_client.go
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/azureclient/azuresdk/azcontainerregistry/authentication_client.go -source=authentication_client.go
//

// Package mock_azcontainerregistry is a generated GoMock package.
package mock_azcontainerregistry

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"

	azcontainerregistry "github.com/Azure/azure-sdk-for-go/sdk/containers/azcontainerregistry"
)

// MockAuthenticationClient is a mock of AuthenticationClient interface.
type MockAuthenticationClient struct {
	ctrl     *gomock.Controller
	recorder *MockAuthenticationClientMockRecorder
	isgomock struct{}
}

// MockAuthenticationClientMockRecorder is the mock recorder for MockAuthenticationClient.
type MockAuthenticationClientMockRecorder struct {
	mock *MockAuthenticationClient
}

// NewMockAuthenticationClient creates a new mock instance.
func NewMockAuthenticationClient(ctrl *gomock.Controller) *MockAuthenticationClient {
	mock := &MockAuthenticationClient{ctrl: ctrl}
	mock.recorder = &MockAuthenticationClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthenticationClient) EXPECT() *MockAuthenticationClientMockRecorder {
	return m.recorder
}

// ExchangeAADAccessTokenForACRRefreshToken mocks base method.
func (m *MockAuthenticationClient) ExchangeAADAccessTokenForACRRefreshToken(ctx context.Context, grantType azcontainerregistry.PostContentSchemaGrantType, service string, options *azcontainerregistry.AuthenticationClientExchangeAADAccessTokenForACRRefreshTokenOptions) (azcontainerregistry.AuthenticationClientExchangeAADAccessTokenForACRRefreshTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExchangeAADAccessTokenForACRRefreshToken", ctx, grantType, service, options)
	ret0, _ := ret[0].(azcontainerregistry.AuthenticationClientExchangeAADAccessTokenForACRRefreshTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExchangeAADAccessTokenForACRRefreshToken indicates an expected call of ExchangeAADAccessTokenForACRRefreshToken.
func (mr *MockAuthenticationClientMockRecorder) ExchangeAADAccessTokenForACRRefreshToken(ctx, grantType, service, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExchangeAADAccessTokenForACRRefreshToken", reflect.TypeOf((*MockAuthenticationClient)(nil).ExchangeAADAccessTokenForACRRefreshToken), ctx, grantType, service, options)
}
