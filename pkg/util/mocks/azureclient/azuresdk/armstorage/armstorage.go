// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/ARO-RP/pkg/util/azureclient/azuresdk/armstorage (interfaces: AccountsClient)
//
// Generated by this command:
//
//	mockgen -destination=../../../../util/mocks/azureclient/azuresdk/armstorage/armstorage.go github.com/Azure/ARO-RP/pkg/util/azureclient/azuresdk/armstorage AccountsClient
//

// Package mock_armstorage is a generated GoMock package.
package mock_armstorage

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"

	armstorage "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
)

// MockAccountsClient is a mock of AccountsClient interface.
type MockAccountsClient struct {
	ctrl     *gomock.Controller
	recorder *MockAccountsClientMockRecorder
	isgomock struct{}
}

// MockAccountsClientMockRecorder is the mock recorder for MockAccountsClient.
type MockAccountsClientMockRecorder struct {
	mock *MockAccountsClient
}

// NewMockAccountsClient creates a new mock instance.
func NewMockAccountsClient(ctrl *gomock.Controller) *MockAccountsClient {
	mock := &MockAccountsClient{ctrl: ctrl}
	mock.recorder = &MockAccountsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountsClient) EXPECT() *MockAccountsClientMockRecorder {
	return m.recorder
}

// GetProperties mocks base method.
func (m *MockAccountsClient) GetProperties(ctx context.Context, resourceGroupName, accountName string, options *armstorage.AccountsClientGetPropertiesOptions) (armstorage.AccountsClientGetPropertiesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProperties", ctx, resourceGroupName, accountName, options)
	ret0, _ := ret[0].(armstorage.AccountsClientGetPropertiesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProperties indicates an expected call of GetProperties.
func (mr *MockAccountsClientMockRecorder) GetProperties(ctx, resourceGroupName, accountName, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProperties", reflect.TypeOf((*MockAccountsClient)(nil).GetProperties), ctx, resourceGroupName, accountName, options)
}

// ListAccountSAS mocks base method.
func (m *MockAccountsClient) ListAccountSAS(ctx context.Context, resourceGroupName, accountName string, parameters armstorage.AccountSasParameters, options *armstorage.AccountsClientListAccountSASOptions) (armstorage.AccountsClientListAccountSASResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAccountSAS", ctx, resourceGroupName, accountName, parameters, options)
	ret0, _ := ret[0].(armstorage.AccountsClientListAccountSASResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAccountSAS indicates an expected call of ListAccountSAS.
func (mr *MockAccountsClientMockRecorder) ListAccountSAS(ctx, resourceGroupName, accountName, parameters, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAccountSAS", reflect.TypeOf((*MockAccountsClient)(nil).ListAccountSAS), ctx, resourceGroupName, accountName, parameters, options)
}
