// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openshift/client-go/samples/clientset/versioned (interfaces: Interface)

// Package mock_versioned is a generated GoMock package.
package mock_versioned

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/openshift/client-go/samples/clientset/versioned/typed/samples/v1"
	discovery "k8s.io/client-go/discovery"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Discovery mocks base method.
func (m *MockInterface) Discovery() discovery.DiscoveryInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Discovery")
	ret0, _ := ret[0].(discovery.DiscoveryInterface)
	return ret0
}

// Discovery indicates an expected call of Discovery.
func (mr *MockInterfaceMockRecorder) Discovery() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Discovery", reflect.TypeOf((*MockInterface)(nil).Discovery))
}

// SamplesV1 mocks base method.
func (m *MockInterface) SamplesV1() v1.SamplesV1Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SamplesV1")
	ret0, _ := ret[0].(v1.SamplesV1Interface)
	return ret0
}

// SamplesV1 indicates an expected call of SamplesV1.
func (mr *MockInterfaceMockRecorder) SamplesV1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SamplesV1", reflect.TypeOf((*MockInterface)(nil).SamplesV1))
}
