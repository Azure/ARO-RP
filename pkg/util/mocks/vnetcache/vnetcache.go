// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/ARO-RP/pkg/api/validate/dynamic/vnetcache (interfaces: VirtualNetworksGetClient)

// Package mock_vnetcache is a generated GoMock package.
package mock_vnetcache

import (
	context "context"
	reflect "reflect"

	vnetcache "github.com/Azure/ARO-RP/pkg/api/validate/dynamic/vnetcache"
	network "github.com/Azure/azure-sdk-for-go/services/network/mgmt/2020-08-01/network"
	gomock "github.com/golang/mock/gomock"
)

// MockVirtualNetworksGetClient is a mock of VirtualNetworksGetClient interface.
type MockVirtualNetworksGetClient struct {
	ctrl     *gomock.Controller
	recorder *MockVirtualNetworksGetClientMockRecorder
}

// MockVirtualNetworksGetClientMockRecorder is the mock recorder for MockVirtualNetworksGetClient.
type MockVirtualNetworksGetClientMockRecorder struct {
	mock *MockVirtualNetworksGetClient
}

// NewMockVirtualNetworksGetClient creates a new mock instance.
func NewMockVirtualNetworksGetClient(ctrl *gomock.Controller) *MockVirtualNetworksGetClient {
	mock := &MockVirtualNetworksGetClient{ctrl: ctrl}
	mock.recorder = &MockVirtualNetworksGetClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVirtualNetworksGetClient) EXPECT() *MockVirtualNetworksGetClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockVirtualNetworksGetClient) Get(arg0 context.Context, arg1 vnetcache.VirtualNetworksCacheKey) (network.VirtualNetwork, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(network.VirtualNetwork)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockVirtualNetworksGetClientMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockVirtualNetworksGetClient)(nil).Get), arg0, arg1)
}
