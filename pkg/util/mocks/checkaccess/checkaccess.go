// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/checkaccess-v2-go-sdk/client (interfaces: RemotePDPClient)
//
// Generated by this command:
//
//	mockgen -destination=../../../pkg/util/mocks/checkaccess/checkaccess.go github.com/Azure/checkaccess-v2-go-sdk/client RemotePDPClient
//

// Package mock_client is a generated GoMock package.
package mock_client

import (
	context "context"
	reflect "reflect"

	client "github.com/Azure/checkaccess-v2-go-sdk/client"
	gomock "go.uber.org/mock/gomock"
)

// MockRemotePDPClient is a mock of RemotePDPClient interface.
type MockRemotePDPClient struct {
	ctrl     *gomock.Controller
	recorder *MockRemotePDPClientMockRecorder
	isgomock struct{}
}

// MockRemotePDPClientMockRecorder is the mock recorder for MockRemotePDPClient.
type MockRemotePDPClientMockRecorder struct {
	mock *MockRemotePDPClient
}

// NewMockRemotePDPClient creates a new mock instance.
func NewMockRemotePDPClient(ctrl *gomock.Controller) *MockRemotePDPClient {
	mock := &MockRemotePDPClient{ctrl: ctrl}
	mock.recorder = &MockRemotePDPClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRemotePDPClient) EXPECT() *MockRemotePDPClientMockRecorder {
	return m.recorder
}

// CheckAccess mocks base method.
func (m *MockRemotePDPClient) CheckAccess(arg0 context.Context, arg1 client.AuthorizationRequest) (*client.AuthorizationDecisionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckAccess", arg0, arg1)
	ret0, _ := ret[0].(*client.AuthorizationDecisionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckAccess indicates an expected call of CheckAccess.
func (mr *MockRemotePDPClientMockRecorder) CheckAccess(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckAccess", reflect.TypeOf((*MockRemotePDPClient)(nil).CheckAccess), arg0, arg1)
}

// CreateAuthorizationRequest mocks base method.
func (m *MockRemotePDPClient) CreateAuthorizationRequest(arg0 string, arg1 []string, arg2 string) (*client.AuthorizationRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAuthorizationRequest", arg0, arg1, arg2)
	ret0, _ := ret[0].(*client.AuthorizationRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAuthorizationRequest indicates an expected call of CreateAuthorizationRequest.
func (mr *MockRemotePDPClientMockRecorder) CreateAuthorizationRequest(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAuthorizationRequest", reflect.TypeOf((*MockRemotePDPClient)(nil).CreateAuthorizationRequest), arg0, arg1, arg2)
}
