// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/ARO-RP/pkg/util/azureclient/mgmt/documentdb (interfaces: NewDatabaseAccountsClient)

// Package mock_documentdb is a generated GoMock package.
package mock_documentdb

import (
	context "context"
	reflect "reflect"

	documentdb0 "github.com/Azure/azure-sdk-for-go/services/cosmos-db/mgmt/2021-01-15/documentdb"
	autorest "github.com/Azure/go-autorest/autorest"
	gomock "github.com/golang/mock/gomock"

	azureclient "github.com/Azure/ARO-RP/pkg/util/azureclient"
	documentdb "github.com/Azure/ARO-RP/pkg/util/azureclient/mgmt/documentdb"
)

// MockNewDatabaseAccountsClient is a mock of NewDatabaseAccountsClient interface.
type MockNewDatabaseAccountsClient struct {
	ctrl     *gomock.Controller
	recorder *MockNewDatabaseAccountsClientMockRecorder
}

// MockNewDatabaseAccountsClientMockRecorder is the mock recorder for MockNewDatabaseAccountsClient.
type MockNewDatabaseAccountsClientMockRecorder struct {
	mock *MockNewDatabaseAccountsClient
}

// NewMockNewDatabaseAccountsClient creates a new mock instance.
func NewMockNewDatabaseAccountsClient(ctrl *gomock.Controller) *MockNewDatabaseAccountsClient {
	mock := &MockNewDatabaseAccountsClient{ctrl: ctrl}
	mock.recorder = &MockNewDatabaseAccountsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNewDatabaseAccountsClient) EXPECT() *MockNewDatabaseAccountsClientMockRecorder {
	return m.recorder
}

// ListKeys mocks base method.
func (m *MockNewDatabaseAccountsClient) ListKeys(arg0 context.Context, arg1, arg2 string) (documentdb0.DatabaseAccountListKeysResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListKeys", arg0, arg1, arg2)
	ret0, _ := ret[0].(documentdb0.DatabaseAccountListKeysResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListKeys indicates an expected call of ListKeys.
func (mr *MockNewDatabaseAccountsClientMockRecorder) ListKeys(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListKeys", reflect.TypeOf((*MockNewDatabaseAccountsClient)(nil).ListKeys), arg0, arg1, arg2)
}

// NewDatabaseAccountsClient mocks base method.
func (m *MockNewDatabaseAccountsClient) NewDatabaseAccountsClient(arg0 *azureclient.AROEnvironment, arg1 string, arg2 autorest.Authorizer) documentdb.DatabaseAccountsClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewDatabaseAccountsClient", arg0, arg1, arg2)
	ret0, _ := ret[0].(documentdb.DatabaseAccountsClient)
	return ret0
}

// NewDatabaseAccountsClient indicates an expected call of NewDatabaseAccountsClient.
func (mr *MockNewDatabaseAccountsClientMockRecorder) NewDatabaseAccountsClient(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewDatabaseAccountsClient", reflect.TypeOf((*MockNewDatabaseAccountsClient)(nil).NewDatabaseAccountsClient), arg0, arg1, arg2)
}
