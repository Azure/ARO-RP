// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/ARO-RP/pkg/operator/admission/validation/pullsecret (interfaces: RequestDoer)

// Package mock_pullsecret is a generated GoMock package.
package mock_pullsecret

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRequestDoer is a mock of RequestDoer interface.
type MockRequestDoer struct {
	ctrl     *gomock.Controller
	recorder *MockRequestDoerMockRecorder
}

// MockRequestDoerMockRecorder is the mock recorder for MockRequestDoer.
type MockRequestDoerMockRecorder struct {
	mock *MockRequestDoer
}

// NewMockRequestDoer creates a new mock instance.
func NewMockRequestDoer(ctrl *gomock.Controller) *MockRequestDoer {
	mock := &MockRequestDoer{ctrl: ctrl}
	mock.recorder = &MockRequestDoerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestDoer) EXPECT() *MockRequestDoerMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockRequestDoer) Do(arg0 *http.Request) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", arg0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do.
func (mr *MockRequestDoerMockRecorder) Do(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockRequestDoer)(nil).Do), arg0)
}
