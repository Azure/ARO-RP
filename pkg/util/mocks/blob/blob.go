// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/ARO-RP/pkg/util/blob (interfaces: Manager)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/blob/blob.go github.com/Azure/ARO-RP/pkg/util/blob Manager
//

// Package mock_blob is a generated GoMock package.
package mock_blob

import (
	context "context"
	reflect "reflect"

	armstorage "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
	gomock "go.uber.org/mock/gomock"

	azblob "github.com/Azure/ARO-RP/pkg/util/azureclient/azuresdk/azblob"
)

// MockManager is a mock of Manager interface.
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
	isgomock struct{}
}

// MockManagerMockRecorder is the mock recorder for MockManager.
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance.
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// GetBlobsClient mocks base method.
func (m *MockManager) GetBlobsClient(blobContainerURL string) (azblob.BlobsClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlobsClient", blobContainerURL)
	ret0, _ := ret[0].(azblob.BlobsClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlobsClient indicates an expected call of GetBlobsClient.
func (mr *MockManagerMockRecorder) GetBlobsClient(blobContainerURL any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlobsClient", reflect.TypeOf((*MockManager)(nil).GetBlobsClient), blobContainerURL)
}

// GetContainerProperties mocks base method.
func (m *MockManager) GetContainerProperties(ctx context.Context, resourceGroupName, accountName, containerName string) (armstorage.AccountsClientGetPropertiesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContainerProperties", ctx, resourceGroupName, accountName, containerName)
	ret0, _ := ret[0].(armstorage.AccountsClientGetPropertiesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContainerProperties indicates an expected call of GetContainerProperties.
func (mr *MockManagerMockRecorder) GetContainerProperties(ctx, resourceGroupName, accountName, containerName any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContainerProperties", reflect.TypeOf((*MockManager)(nil).GetContainerProperties), ctx, resourceGroupName, accountName, containerName)
}
