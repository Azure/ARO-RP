{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "proxyCert": {
            "type": "string"
        },
        "proxyClientCert": {
            "type": "string"
        },
        "proxyDomainNameLabel": {
            "type": "string"
        },
        "proxyImage": {
            "type": "string"
        },
        "proxyImageAuth": {
            "type": "securestring"
        },
        "proxyKey": {
            "type": "securestring"
        },
        "publicIPAddressAllocationMethod": {
            "type": "string",
            "defaultValue": "Static"
        },
        "publicIPAddressSkuName": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "sshPublicKey": {
            "type": "string"
        },
        "vpnCACertificate": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "resources": [
        {
            "sku": {
                "name": "[parameters('publicIPAddressSkuName')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAddressAllocationMethod')]"
            },
            "name": "dev-vpn-pip",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'rp-nsg')]",
                                "tags": null
                            }
                        },
                        "name": "ToolingSubnet"
                    }
                ]
            },
            "name": "dev-vnet",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "properties": {
                            "addressPrefix": "10.2.0.0/24"
                        },
                        "name": "GatewaySubnet"
                    }
                ]
            },
            "name": "dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'dev-vpn-vnet', 'GatewaySubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'dev-vpn-pip')]"
                            }
                        },
                        "name": "default"
                    }
                ],
                "vpnType": "RouteBased",
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            "192.168.255.0/24"
                        ]
                    },
                    "vpnClientRootCertificates": [
                        {
                            "properties": {
                                "publicCertData": "[parameters('vpnCACertificate')]"
                            },
                            "name": "dev-vpn-ca"
                        }
                    ],
                    "vpnClientProtocols": [
                        "OpenVPN"
                    ]
                }
            },
            "name": "dev-vpn",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'dev-vpn-pip')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
            ]
        },
        {
            "name": "[concat(take(resourceGroup().name,10), '-dev-sharedKV')]",
            "type": "Microsoft.KeyVault/vaults",
            "location": "[resourceGroup().location]",
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "accessPolicies": [],
                "enabledForDiskEncryption": true,
                "enablePurgeProtection": true
            },
            "apiVersion": "2019-09-01"
        },
        {
            "properties": {
                "kty": "RSA",
                "keySize": 4096
            },
            "name": "[concat(concat(take(resourceGroup().name,10), '-dev-sharedKV'), '/', concat(resourceGroup().name, '-disk-encryption-key'))]",
            "type": "Microsoft.KeyVault/vaults/keys",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', concat(take(resourceGroup().name,10), '-dev-sharedKV'))]"
            ]
        },
        {
            "name": "[concat(concat(take(resourceGroup().name,10), '-dev-sharedKV'), '/add')]",
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "location": "[resourceGroup().location]",
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Compute/diskEncryptionSets', concat(resourceGroup().name, '-disk-encryption-set')), '2021-04-01', 'Full').identity.PrincipalId]",
                        "permissions": {
                            "keys": [
                                "get",
                                "wrapKey",
                                "unwrapKey"
                            ]
                        }
                    }
                ]
            },
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/diskEncryptionSets', concat(resourceGroup().name, '-disk-encryption-set'))]"
            ]
        },
        {
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "activeKey": {
                    "sourceVault": {
                        "id": "[resourceId('Microsoft.KeyVault/vaults', concat(take(resourceGroup().name,10), '-dev-sharedKV'))]"
                    },
                    "keyUrl": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', concat(take(resourceGroup().name,10), '-dev-sharedKV'), concat(resourceGroup().name, '-disk-encryption-key')), '2019-09-01', 'Full').properties.keyUriWithVersion]"
                }
            },
            "name": "[concat(resourceGroup().name, '-disk-encryption-set')]",
            "type": "Microsoft.Compute/diskEncryptionSets",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-12-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/keys', concat(take(resourceGroup().name,10), '-dev-sharedKV'), concat(resourceGroup().name, '-disk-encryption-key'))]"
            ]
        },
        {
            "sku": {
                "name": "Standard_F2s_v2",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "dev-proxy-",
                        "adminUsername": "cloud-user",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/cloud-user/.ssh/authorized_keys",
                                        "keyData": "[parameters('sshPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "RedHat",
                            "offer": "RHEL",
                            "sku": "8-LVM",
                            "version": "latest"
                        },
                        "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "dev-proxy-vmss-nic",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "dev-proxy-vmss-ipconfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'rp-vnet', 'rp-subnet')]"
                                                },
                                                "primary": true,
                                                "publicIPAddressConfiguration": {
                                                    "name": "dev-proxy-vmss-pip",
                                                    "properties": {
                                                        "dnsSettings": {
                                                            "domainNameLabel": "[parameters('proxyDomainNameLabel')]"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "dev-proxy-vmss-cse",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {},
                                    "protectedSettings": {
                                        "script": "[base64(concat(base64ToString('c2V0IC1leAoK'),'PROXYIMAGE=$(base64 -d \u003c\u003c\u003c''',base64(parameters('proxyImage')),''')\n','PROXYIMAGEAUTH=$(base64 -d \u003c\u003c\u003c''',base64(parameters('proxyImageAuth')),''')\n','PROXYCERT=''',parameters('proxyCert'),'''\n','PROXYCLIENTCERT=''',parameters('proxyClientCert'),'''\n','PROXYKEY=''',parameters('proxyKey'),'''\n','\n',base64ToString('IyEvYmluL2Jhc2gKCnNldCAtbyBlcnJleGl0IFwKICAgIC1vIG5vdW5zZXQKCmlmIFsgIiR7REVCVUc6LWZhbHNlfSIgPT0gdHJ1ZSBdOyB0aGVuCiAgICBzZXQgLXgKZmkKCm1haW4oKSB7CiAgICAjIHRyYW5zYWN0aW9uIGF0dGVtcHQgcmV0cnkgdGltZSBpbiBzZWNvbmRzCiAgICBsb2NhbCAtcmkgcmV0cnlfd2FpdF90aW1lPTYwCgogICAgIyBzaGVsbGNoZWNrIHNvdXJjZT1jb21tb24uc2gKICAgIHNvdXJjZSBjb21tb24uc2gKCiAgICBsb2NhbCAtcmEgZW5hYmxlX3BvcnRzPSgKICAgICAgICAiNDQzL3RjcCIKICAgICkKCiAgICBsb2NhbCBwcm94eV9pbWFnZT0iJFBST1hZSU1BR0UiCglsb2NhbCAtciByZWdpc3RyeV9jb25maWdfZmlsZT0iewogICAgXCJhdXRoc1wiOiB7CiAgICAgICAgXCIke1BST1hZSU1BR0UlJS8qfVwiOiB7CiAgICAgICAgICAgIFwiYXV0aFwiOiBcIiRQUk9YWUlNQUdFQVVUSFwiCiAgICAgICAgfQogICAgfSIKCiAgICBsb2NhbCAtYXIgZXhjbHVkZV9wa2dzPSgKICAgICAgICAiLXggV0FMaW51eEFnZW50IgogICAgICAgICIteCBXQUxpbnV4QWdlbnQtdWRldiIKICAgICkKCiAgICBsb2NhbCAtcmEgaW5zdGFsbF9wa2dzPSgKICAgICAgICBwb2RtYW4KICAgICAgICBwb2RtYW4tZG9ja2VyCiAgICApCgogICAgbG9jYWwgLXJhIHByb3h5X3NlcnZpY2VzPSgKCQlwcm94eQogICAgKQoKICAgIHBhcnNlX3J1bl9vcHRpb25zICIkQCIKCiAgICBkbmZfdXBkYXRlX3BrZ3MgcGtnc190b19leGNsdWRlIHJldHJ5X3dhaXRfdGltZQogICAgZG5mX2luc3RhbGxfcGtncyBpbnN0YWxsX3BrZ3MgcmV0cnlfd2FpdF90aW1lCiAgICBjb25maWd1cmVfZG5mX2Nyb25fam9iCgogICAgY29uZmlndXJlX2ZpcmV3YWxsZF9ydWxlcyBlbmFibGVfcG9ydHMKICAgIHB1bGxfY29udGFpbmVyX2ltYWdlcyBwcm94eV9pbWFnZSByZWdpc3RyeV9jb25maWdfZmlsZQogICAgY29uZmlndXJlX2RldnByb3h5X3NlcnZpY2VzCiAgICBlbmFibGVfc2VydmljZXMgcHJveHlfc2VydmljZXMKICAgIHJlYm9vdF92bQp9Cgp1c2FnZSgpIHsKICAgIGxvY2FsIC1uIG9wdGlvbnM9IiQxIgogICAgbG9nICIkKGJhc2VuYW1lICIkMCIpIFskb3B0aW9uc10KICAgICAgICAtcCBDb25maWd1cmUgcnBtIHJlcG9zaXRvcmllcywgaW1wb3J0IHJlcXVpcmVkIHJwbSBrZXlzLCB1cGRhdGUgJiBpbnN0YWxsIHBhY2thZ2VzIHdpdGggZG5mCiAgICAgICAgLWYgQ29uZmlndXJlIGZpcmV3YWxsZCBkZWZhdWx0IHpvbmUgcnVsZXMKICAgICAgICAtdSBDb25maWd1cmUgc3lzdGVtZCB1bml0IGZpbGVzCiAgICAgICAgLWkgUHVsbCBjb250YWluZXIgaW1hZ2VzCgogICAgICAgIE5vdGU6IHN0ZXBzIHdpbGwgYmUgZXhlY3V0ZWQgaW4gdGhlIG9yZGVyIHRoYXQgZmxhZ3MgYXJlIHByb3ZpZGVkCiAgICAiCn0KCiMgcGFyc2VfcnVuX29wdGlvbnMgdGFrZXMgYWxsIGFyZ3VlbWVudHMgcGFzc2VkIHRvIG1haW4gYW5kIHBhcnNlcyB0aGVtCiMgYWxsb3dpbmcgaW5kaXZpZHVhbCBzdGVwKHMpIHRvIGJlIHJhbiwgcmF0aGVyIHRoYW4gYWxsIHN0ZXBzCiMKIyBUaGlzIGlzIHVzZWZ1bCBmb3IgbG9jYWwgdGVzdGluZywgb3IgcG9zc2libHkgbW9kaWZ5aW5nIHRoZSBib290c3RyYXAgZXhlY3V0aW9uIHZpYSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgaW4gdGhlIGRlcGxveW1lbnQgcGlwZWxpbmUKcGFyc2VfcnVuX29wdGlvbnMoKSB7CiAgICAjIHNoZWxsY2hlY2sgZGlzYWJsZT1TQzIyMDYKICAgIGxvY2FsIC1hIG9wdGlvbnM9KCR7MTotfSkKICAgIGxvY2FsIC1uIHBrZ3NfdG9fZXhjbHVkZT0iJDIiCiAgICBsb2NhbCAtbiBwa2dzX3RvX2luc3RhbGw9IiQzIgogICAgbG9jYWwgLW4gcG9ydHNfdG9fZW5hYmxlPSIkNCIKICAgIGxvY2FsIC1uIHNlcnZpY2VzX3RvX2VuYWJsZT0iJDUiCiAgICBsb2NhbCAtbiBpbWFnZXNfdG9fcHVsbD0iJDYiCgogICAgaWYgWyAiJHsjb3B0aW9uc1tAXX0iIC1lcSAwIF07IHRoZW4KICAgICAgICBsb2cgIlJ1bm5pbmcgYWxsIHN0ZXBzIgogICAgICAgIHJldHVybiAwCiAgICBmaQoKICAgIGxvY2FsIE9QVElORAoJbG9jYWwgLXIgYWxsb3dlZF9vcHRpb25zPSJwZnVpIgogICAgd2hpbGUgZ2V0b3B0cyAke2FsbG93ZWRfb3B0aW9uc30gb3B0aW9uczsgZG8KICAgICAgICBjYXNlICIke29wdGlvbnN9IiBpbgogICAgICAgICAgICBwKQogICAgICAgICAgICAgICAgbG9nICJSdW5uaW5nIHN0ZXAgZG5mX3VwZGF0ZV9wa2dzIgogICAgICAgICAgICAgICAgZG5mX3VwZGF0ZV9wa2dzIHBrZ3NfdG9fZXhjbHVkZSByZXRyeV93YWl0X3RpbWUKCiAgICAgICAgICAgICAgICBsb2cgIlJ1bm5pbmcgc3RlcCBkbmZfaW5zdGFsbF9wa2dzIgogICAgICAgICAgICAgICAgZG5mX2luc3RhbGxfcGtncyBwa2dzX3RvX2luc3RhbGwgcmV0cnlfd2FpdF90aW1lCgogICAgICAgICAgICAgICAgbG9nICJSdW5uaW5nIHN0ZXAgY29uZmlndXJlX2RuZl9jcm9uX2pvYiIKICAgICAgICAgICAgICAgIGNvbmZpZ3VyZV9kbmZfY3Jvbl9qb2IKICAgICAgICAgICAgICAgIDs7CiAgICAgICAgICAgIGYpCiAgICAgICAgICAgICAgICBsb2cgIlJ1bm5pbmcgY29uZmlndXJlX2ZpcmV3YWxsZF9ydWxlcyIKICAgICAgICAgICAgICAgIGNvbmZpZ3VyZV9maXJld2FsbGRfcnVsZXMgcG9ydHNfdG9fZW5hYmxlCiAgICAgICAgICAgICAgICA7OwogICAgICAgICAgICB1KQogICAgICAgICAgICAgICAgbG9nICJSdW5uaW5nIHN0ZXAgY29uZmlndXJlX2RldnByb3h5X3NlcnZpY2VzIgogICAgICAgICAgICAgICAgY29uZmlndXJlX2RldnByb3h5X3NlcnZpY2VzCiAgICAgICAgICAgICAgICBlbmFibGVfc2VydmljZXMgc2VydmljZXNfdG9fZW5hYmxlCiAgICAgICAgICAgICAgICA7OwogICAgICAgICAgICBpKQogICAgICAgICAgICAgICAgbG9nICJSdW5uaW5nIHB1bGxfY29udGFpbmVyX2ltYWdlcyIKICAgICAgICAgICAgICAgIHB1bGxfY29udGFpbmVyX2ltYWdlcyBpbWFnZXNfdG9fcHVsbAogICAgICAgICAgICAgICAgOzsKICAgICAgICAgICAgKikKICAgICAgICAgICAgICAgIHVzYWdlIGFsbG93ZWRfb3B0aW9ucwogICAgICAgICAgICAgICAgYWJvcnQgIlVua293biBvcHRpb24gcHJvdmlkZWQiCiAgICAgICAgICAgICAgICA7OwogICAgICAgIGVzYWMKICAgIGRvbmUKICAgIAogICAgZXhpdCAwCn0KCiMgY29uZmlndXJlX3N5c3RlbV9zZXJ2aWNlcyBjcmVhdGVzLCBjb25maWd1cmVzLCBhbmQgZW5hYmxlcyB0aGUgZm9sbG93aW5nIHN5c3RlbWQgc2VydmljZXMgYW5kIHRpbWVycwojIHNlcnZpY2VzCiMJcHJveHkKY29uZmlndXJlX2RldnByb3h5X3NlcnZpY2VzKCkgewoJY29uZmlndXJlX3NlcnZpY2VfcHJveHkKfQoKIyBlbmFibGVfYXJvX3NlcnZpY2VzIGVuYWJsZXMgYWxsIHNlcnZpY2VzIHJlcXVpcmVkIGZvciBhcm8gcnAKZW5hYmxlX2Fyb19zZXJ2aWNlcygpIHsKICAgIGxvZyAic3RhcnRpbmciCgogICAgbG9nICJlbmFibGluZyBhcm8gc2VydmljZXMgJHthcm9fc2VydmljZXNbKl19IgogICAgIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MyMDY4CiAgICBmb3Igc2VydmljZSBpbiAke2Fyb19zZXJ2aWNlc1tAXX07IGRvCiAgICAgICAgbG9nICJFbmFibGluZyAkc2VydmljZSBub3ciCiAgICAgICAgc3lzdGVtY3RsIGVuYWJsZSAiJHNlcnZpY2Uuc2VydmljZSIKICAgIGRvbmUKfQoKIyBjb25maWd1cmVfY2VydHMKY29uZmlndXJlX2NlcnRzKCkgewogICAgbG9nICJzdGFydGluZyIKCgliYXNlNjQgLWQgPDw8IiRQUk9YWUNFUlQiID4vZXRjL3Byb3h5L3Byb3h5LmNydAoJYmFzZTY0IC1kIDw8PCIkUFJPWFlLRVkiID4vZXRjL3Byb3h5L3Byb3h5LmtleQoJYmFzZTY0IC1kIDw8PCIkUFJPWFlDTElFTlRDRVJUIiA+L2V0Yy9wcm94eS9wcm94eS1jbGllbnQuY3J0CgljaG93biAtUiAxMDAwOjEwMDAgL2V0Yy9wcm94eQoJY2htb2QgMDYwMCAvZXRjL3Byb3h5L3Byb3h5LmtleQp9Cgpjb25maWd1cmVfc2VydmljZV9wcm94eSgpIHsKCWxvY2FsIC1yIHN5c2NvbmZpZ19wcm94eV9maWxlbmFtZT0nL2V0Yy9zeXNjb25maWcvcHJveHknCglsb2NhbCAtciBzeXNjb25maWdfcHJveHlfZmlsZT0iUFJPWFlfSU1BR0U9JyRQUk9YWUlNQUdFJyIKCgl3cml0ZV9maWxlIHN5c2NvbmZpZ19wcm94eV9maWxlbmFtZSBzeXNjb25maWdfcHJveHlfZmlsZSB0cnVlCgoJbG9jYWwgLXIgcHJveHlfc2VydmljZV9maWxlbmFtZT0nL2V0Yy9zeXN0ZW1kL3N5c3RlbS9wcm94eS5zZXJ2aWNlJwoJbG9jYWwgLXIgcHJveHlfc2VydmljZV9maWxlPSJbVW5pdF0KQWZ0ZXI9bmV0d29yay1vbmxpbmUudGFyZ2V0CldhbnRzPW5ldHdvcmstb25saW5lLnRhcmdldAoKW1NlcnZpY2VdCkVudmlyb25tZW50RmlsZT0vZXRjL3N5c2NvbmZpZy9wcm94eQpFeGVjU3RhcnRQcmU9LS91c3IvYmluL2RvY2tlciBybSAtZiAlbgpFeGVjU3RhcnQ9L3Vzci9iaW4vZG9ja2VyIHJ1biAtLXJtIC0tbmFtZSAlbiAtcCA0NDM6ODQ0MyAtdiAvZXRjL3Byb3h5Oi9zZWNyZXRzICRQUk9YWV9JTUFHRQpFeGVjU3RvcD0vdXNyL2Jpbi9kb2NrZXIgc3RvcCAlbgpSZXN0YXJ0PWFsd2F5cwpSZXN0YXJ0U2VjPTEKU3RhcnRMaW1pdEludGVydmFsPTAKCltJbnN0YWxsXQpXYW50ZWRCeT1tdWx0aS11c2VyLnRhcmdldCIKCglsb2NhbCAtciBjcm9uX3dlZWtseV9wdWxsX2ltYWdlX2ZpbGVuYW1lPScvZXRjL2Nyb24ud2Vla2x5L3B1bGwtaW1hZ2UnCglsb2NhbCAtciBjcm9uX3dlZWtseV9wdWxsX2ltYWdlX2ZpbGU9IiMhL2Jpbi9iYXNoCmRvY2tlciBwdWxsICRQUk9YWUlNQUdFCnN5c3RlbWN0bCByZXN0YXJ0IHByb3h5LnNlcnZpY2UiCgkKCXdyaXRlX2ZpbGUgY3Jvbl93ZWVrbHlfcHVsbF9pbWFnZV9maWxlbmFtZSBjcm9uX3dlZWtseV9wdWxsX2ltYWdlX2ZpbGUgdHJ1ZQoJY2htb2QgK3ggIiRjcm9uX3dlZWtseV9wdWxsX2ltYWdlX2ZpbGVuYW1lIgoKCWxvY2FsIC1yIGNyb25fZGFpbHlfcmVzdGFydF9wcm94eV9maWxlbmFtZT0nL2V0Yy9jcm9uLmRhaWx5L3Jlc3RhcnQtcHJveHknCglsb2NhbCAtciBjcm9uX2RhaWx5X3Jlc3RhcnRfcHJveHlfZmlsZT0iIyEvYmluL2Jhc2gKc3lzdGVtY3RsIHJlc3RhcnQgcHJveHkuc2VydmljZSIKCQoJd3JpdGVfZmlsZSBjcm9uX2RhaWx5X3Jlc3RhcnRfcHJveHlfZmlsZW5hbWUgY3Jvbl9kYWlseV9yZXN0YXJ0X3Byb3h5X2ZpbGUKCWNobW9kICt4ICIkY3Jvbl9kYWlseV9yZXN0YXJ0X3Byb3h5X2ZpbGVuYW1lIgp9CgpleHBvcnQgQVpVUkVfQ0xPVURfTkFNRT0iJHtBWlVSRUNMT1VETkFNRTo/IkZhaWxlZCB0byBjYXJyeSBvdmVyIHZhcmlhYmxlcyJ9IgoKbWFpbiAiJEAiCg==')))]"
                                    },
                                    "provisionAfterExtensions": [
                                        "Microsoft.Azure.Monitor.AzureMonitorLinuxAgent",
                                        "Microsoft.Azure.Security.Monitoring.AzureSecurityLinuxAgent"
                                    ]
                                }
                            },
                            {
                                "name": "Microsoft.Azure.Monitor.AzureMonitorLinuxAgent",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Monitor",
                                    "type": "AzureMonitorLinuxAgent",
                                    "typeHandlerVersion": "1.0",
                                    "autoUpgradeMinorVersion": true,
                                    "enableAutomaticUpgrade": true,
                                    "settings": {
                                        "GCS_AUTO_CONFIG": true
                                    }
                                }
                            },
                            {
                                "name": "Microsoft.Azure.Security.Monitoring.AzureSecurityLinuxAgent",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Security.Monitoring",
                                    "type": "AzureSecurityLinuxAgent",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "enableAutomaticUpgrade": true,
                                    "settings": {
                                        "enableAutoConfig": true,
                                        "enableGenevaUpload": true,
                                        "reportSuccessOnUnsupportedDistro": true
                                    }
                                }
                            }
                        ]
                    }
                },
                "overprovision": false
            },
            "name": "dev-proxy-vmss",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-12-01"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]"
                }
            },
            "name": "dev-vpn-vnet/peering-dev-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
                }
            },
            "name": "dev-vnet/peering-dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'rp-vnet')]"
                }
            },
            "name": "dev-vpn-vnet/peering-rp-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
                }
            },
            "name": "rp-vnet/peering-dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        }
    ]
}
