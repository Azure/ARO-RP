{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ciAzpToken": {
            "type": "string",
            "defaultValue": ""
        },
        "ciCapacity": {
            "type": "int",
            "defaultValue": 0
        },
        "ciPoolName": {
            "type": "string",
            "defaultValue": ""
        },
        "proxyCert": {
            "type": "string"
        },
        "proxyClientCert": {
            "type": "string"
        },
        "proxyDomainNameLabel": {
            "type": "string"
        },
        "proxyImage": {
            "type": "string"
        },
        "proxyImageAuth": {
            "type": "securestring"
        },
        "proxyKey": {
            "type": "securestring"
        },
        "publicIPAddressAllocationMethod": {
            "type": "string",
            "defaultValue": "Static"
        },
        "publicIPAddressSkuName": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "sshPublicKey": {
            "type": "string"
        },
        "vpnCACertificate": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "resources": [
        {
            "sku": {
                "name": "[parameters('publicIPAddressSkuName')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAddressAllocationMethod')]"
            },
            "name": "dev-vpn-pip",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'rp-nsg')]",
                                "tags": null
                            }
                        },
                        "name": "ToolingSubnet"
                    }
                ]
            },
            "name": "dev-vnet",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "properties": {
                            "addressPrefix": "10.2.0.0/24"
                        },
                        "name": "GatewaySubnet"
                    }
                ]
            },
            "name": "dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'dev-vpn-vnet', 'GatewaySubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'dev-vpn-pip')]"
                            }
                        },
                        "name": "default"
                    }
                ],
                "vpnType": "RouteBased",
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            "192.168.255.0/24"
                        ]
                    },
                    "vpnClientRootCertificates": [
                        {
                            "properties": {
                                "publicCertData": "[parameters('vpnCACertificate')]"
                            },
                            "name": "dev-vpn-ca"
                        }
                    ],
                    "vpnClientProtocols": [
                        "OpenVPN"
                    ]
                }
            },
            "name": "dev-vpn",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'dev-vpn-pip')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
            ]
        },
        {
            "sku": {
                "name": "Standard_D2s_v3",
                "tier": "Standard",
                "capacity": "[parameters('ciCapacity')]"
            },
            "properties": {
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "ci-",
                        "adminUsername": "cloud-user",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/cloud-user/.ssh/authorized_keys",
                                        "keyData": "[parameters('sshPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "RedHat",
                            "offer": "RHEL",
                            "sku": "8-LVM",
                            "version": "latest"
                        },
                        "osDisk": {
                            "createOption": "FromImage",
                            "diskSizeGB": 200,
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "ci-vmss-nic",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "ci-vmss-ipconfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'dev-vnet', 'ToolingSubnet')]"
                                                },
                                                "primary": true,
                                                "publicIPAddressConfiguration": {
                                                    "name": "ci-vmss-pip",
                                                    "properties": {
                                                        "dnsSettings": {
                                                            "domainNameLabel": "aro-ci"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "ci-vmss-cse",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {},
                                    "protectedSettings": {
                                        "script": "[base64(concat(base64ToString('c2V0IC1lCgo='),'CIAZPTOKEN=''',parameters('ciAzpToken'),'''\n','CIPOOLNAME=''',parameters('ciPoolName'),'''\n','\n',base64ToString('IyBIYWNrIC0gd2FpdCBvbiBjcmVhdGUgYmVjYXVzZSB0aGUgV0FMaW51eEFnZW50IHNvbWV0aW1lcyBjb25mbGljdHMgd2l0aCB0aGUgeXVtIHVwZGF0ZSAteSBiZWxvdwpzbGVlcCA2MAoKZm9yIGF0dGVtcHQgaW4gezEuLjV9OyBkbwogIHl1bSAteSB1cGRhdGUgJiYgYnJlYWsKICBpZiBbWyAke2F0dGVtcHR9IC1sdCA1IF1dOyB0aGVuIHNsZWVwIDEwOyBlbHNlIGV4aXQgMTsgZmkKZG9uZQoKREVWSUNFX1BBUlRJVElPTj0kKHB2cyB8IGdyZXAgJy9kZXYvJyB8IGF3ayAne3ByaW50ICQxfScgfCBncmVwIC1vUCAnW2Etel17M31bMC05XSQnKQpERVZJQ0U9JChlY2hvICRERVZJQ0VfUEFSVElUSU9OIHwgZ3JlcCAtb1AgJ15bYS16XXszfScpClBBUlRJVElPTj0kKGVjaG8gJERFVklDRV9QQVJUSVRJT04gfCBncmVwIC1vUCAnWzAtOV0kJykKCiMgRml4IHRoZSAiR1BUIFBNQlIgc2l6ZSBtaXNtYXRjaCAoMTM0MjE3NzI3ICE9IDI2ODQzNTQ1NSkiCmVjaG8gInciIHwgZmRpc2sgL2Rldi8ke0RFVklDRX0KCiMgU3RlcHMgZnJvbSBodHRwczovL2FjY2Vzcy5yZWRoYXQuY29tL3NvbHV0aW9ucy81ODA4MDAxCiMgMS4gRGVsZXRlIHRoZSBMVk0gcGFydGl0aW9uICJkXG4yXG4iCiMgMi4gUmVjcmVhdGUgdGhlIHBhcnRpdGlvbiAiblxuMlxuIgojIDMuIEFjY2VwdCB0aGUgZGVmYXVsdCBzdGFydCBhbmQgZW5kIHNlY3RvcnMgKDIgeCBcbikKIyA0LiBMVk0yX21lbWJlciBzaWduYXR1cmUgcmVtYWlucyBieSBkZWZhdWx0CiMgNS4gQ2hhbmdlIHR5cGUgdG8gTGludXggTFZNICJ0XG4yXG4zMVxuCiMgNi4gV3JpdGUgbmV3IHRhYmxlICJ3XG4iCgpmZGlzayAvZGV2LyR7REVWSUNFfSA8PEVPRgpkCiR7UEFSVElUSU9OfQpuCiR7UEFSVElUSU9OfQoKCnQKJHtQQVJUSVRJT059CjMxCncKRU9GCgpwYXJ0eCAtdSAvZGV2LyR7REVWSUNFfQpwdnJlc2l6ZSAvZGV2LyR7REVWSUNFX1BBUlRJVElPTn0KCmx2ZXh0ZW5kIC1sICs1MCVGUkVFIC9kZXYvcm9vdHZnL2hvbWVsdgp4ZnNfZ3Jvd2ZzIC9ob21lCgpsdmV4dGVuZCAtbCArNTAlRlJFRSAvZGV2L3Jvb3R2Zy90bXBsdgp4ZnNfZ3Jvd2ZzIC90bXAKCmx2ZXh0ZW5kIC1sICsxMDAlRlJFRSAvZGV2L3Jvb3R2Zy92YXJsdgp4ZnNfZ3Jvd2ZzIC92YXIKCnJwbSAtLWltcG9ydCBodHRwczovL2RsLmZlZG9yYXByb2plY3Qub3JnL3B1Yi9lcGVsL1JQTS1HUEctS0VZLUVQRUwtOApycG0gLS1pbXBvcnQgaHR0cHM6Ly9wYWNrYWdlcy5taWNyb3NvZnQuY29tL2tleXMvbWljcm9zb2Z0LmFzYwoKeXVtIC15IGluc3RhbGwgaHR0cHM6Ly9kbC5mZWRvcmFwcm9qZWN0Lm9yZy9wdWIvZXBlbC9lcGVsLXJlbGVhc2UtbGF0ZXN0LTgubm9hcmNoLnJwbQoKY2F0ID4vZXRjL3l1bS5yZXBvcy5kL2F6dXJlLnJlcG8gPDwnRU9GJwpbYXp1cmUtY2xpXQpuYW1lPWF6dXJlLWNsaQpiYXNldXJsPWh0dHBzOi8vcGFja2FnZXMubWljcm9zb2Z0LmNvbS95dW1yZXBvcy9henVyZS1jbGkKZW5hYmxlZD15ZXMKZ3BnY2hlY2s9eWVzCkVPRgoKeXVtIC15IGluc3RhbGwgYXp1cmUtY2xpIHBvZG1hbiBwb2RtYW4tZG9ja2VyIGpxIGdjYyBncGdtZS1kZXZlbCBsaWJhc3N1YW4tZGV2ZWwgZ2l0IG1ha2UgdG1wd2F0Y2ggcHl0aG9uMy1kZXZlbCBodG9wIG9wZW52cG4KCiMgZ28tdG9vbHNldC0xLjE4LlggaXMgbm90IGF2YWlsYWJsZSB0byB1cy4gV2UgaGF2ZSB0byBidWlsZCBmcm9tIHNvdXJjZS4KR09fQk9PVFNUUkFQX1ZFUlNJT049MS4xOC40CmN1cmwgLXMgaHR0cHM6Ly9kbC5nb29nbGUuY29tL2dvL2dvJHtHT19CT09UU1RSQVBfVkVSU0lPTn0ubGludXgtYW1kNjQudGFyLmd6IHwgdGFyIC14eiAtQyAvdXNyL2xvY2FsLwpsbiAtc2YgL3Vzci9sb2NhbC9nby9iaW4vZ28gL3Vzci9sb2NhbC9iaW4vZ28KbG4gLXNmIC91c3IvbG9jYWwvZ28vYmluL2dvZm10IC91c3IvbG9jYWwvYmluL2dvZm10CiMgRmV0Y2ggYW5kIGJ1aWxkIHRoZSBHb2xhbmcgQm9yaW5nU1NMIHJlbGVhc2UgZm9yIEZJUFMgc3VwcG9ydApNU0ZUX0dPX0ZJUFNfVkVSU0lPTj0idjEuMTguNy0xLWZpcHMvZ28uMjAyMjEwMDQuMTAiCm1rZGlyIC1wIC90bXAvZ28tYnVpbGQKd2dldCAtcU8tIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvZ28vcmVsZWFzZXMvZG93bmxvYWQvJHtNU0ZUX0dPX0ZJUFNfVkVSU0lPTn0uc3JjLnRhci5neiB8IHRhciB4eiAtQyAvdG1wL2dvLWJ1aWxkCnB1c2hkIC90bXAvZ28tYnVpbGQvZ28vc3JjCmVjaG8gImdvMS4xOC40LWZpcHMiID4gLi4vVkVSU0lPTgpIT01FPX4vIEdPUk9PVF9CT09UU1RSQVA9L3Vzci9sb2NhbC9nbyBHT1BBVEg9fi9nby8gLi9tYWtlLmJhc2gKcG9wZAptdiAvdXNyL2xvY2FsL2dvIC91c3IvbG9jYWwvZ28tJEdPX0JPT1RTVFJBUF9WRVJTSU9OCm12IC90bXAvZ28tYnVpbGQvZ28gL3Vzci9sb2NhbC9nbwoKIyBTdXBwcmVzcyBlbXVsYXRpb24gb3V0cHV0IGZvciBwb2RtYW4gaW5zdGVhZCBvZiBkb2NrZXIgZm9yIGF6IGFjciBjb21wYXRhYmlsaXR5Cm1rZGlyIC1wIC9ldGMvY29udGFpbmVycy8KdG91Y2ggL2V0Yy9jb250YWluZXJzL25vZG9ja2VyCgpWU1RTX0FHRU5UX1ZFUlNJT049Mi4yMDYuMQpta2RpciAvaG9tZS9jbG91ZC11c2VyL2FnZW50CnB1c2hkIC9ob21lL2Nsb3VkLXVzZXIvYWdlbnQKY3VybCAtcyBodHRwczovL3ZzdHNhZ2VudHBhY2thZ2UuYXp1cmVlZGdlLm5ldC9hZ2VudC8ke1ZTVFNfQUdFTlRfVkVSU0lPTn0vdnN0cy1hZ2VudC1saW51eC14NjQtJHtWU1RTX0FHRU5UX1ZFUlNJT059LnRhci5neiB8IHRhciAteHoKY2hvd24gLVIgY2xvdWQtdXNlcjpjbG91ZC11c2VyIC4KCi4vYmluL2luc3RhbGxkZXBlbmRlbmNpZXMuc2gKc3VkbyAtdSBjbG91ZC11c2VyIC4vY29uZmlnLnNoIC0tdW5hdHRlbmRlZCAtLXVybCBodHRwczovL2Rldi5henVyZS5jb20vbXNhenVyZSAtLWF1dGggcGF0IC0tdG9rZW4gIiRDSUFaUFRPS0VOIiAtLXBvb2wgIiRDSVBPT0xOQU1FIiAtLWFnZW50ICJBUk8tUkhFTC0kSE9TVE5BTUUiIC0tcmVwbGFjZQouL3N2Yy5zaCBpbnN0YWxsIGNsb3VkLXVzZXIKcG9wZAoKY2F0ID4vaG9tZS9jbG91ZC11c2VyL2FnZW50Ly5wYXRoIDw8J0VPRicKL3Vzci9sb2NhbC9iaW46L3Vzci9iaW46L3Vzci9sb2NhbC9zYmluOi91c3Ivc2JpbjovaG9tZS9jbG91ZC11c2VyLy5sb2NhbC9iaW46L2hvbWUvY2xvdWQtdXNlci9iaW4KRU9GCgojIFNldCB0aGUgYWdlbnQncyAiU3lzdGVtIGNhcGFiaWxpdGllcyIgZm9yIHRlc3RzIChnby0xLjE4IGFuZCBHT0xBTkdfRklQUykgaW4gdGhlIGFnZW50J3MgLmVudiBmaWxlCiMgYW5kIGFkZCBhIEhBQ0sgZm9yIFhER19SVU5USU1FX0RJUjogaHR0cHM6Ly9naXRodWIuY29tL2NvbnRhaW5lcnMvcG9kbWFuL2lzc3Vlcy80MjcKY2F0ID4vaG9tZS9jbG91ZC11c2VyL2FnZW50Ly5lbnYgPDwnRU9GJwpnby0xLjE4PXRydWUKR09MQU5HX0ZJUFM9MQpYREdfUlVOVElNRV9ESVI9L3J1bi91c2VyLzEwMDAKRU9GCgpjYXQgPi9ldGMvY3Jvbi53ZWVrbHkveXVtdXBkYXRlIDw8J0VPRicKIyEvYmluL2Jhc2gKCnl1bSB1cGRhdGUgLXkKRU9GCmNobW9kICt4IC9ldGMvY3Jvbi53ZWVrbHkveXVtdXBkYXRlCgpjYXQgPi9ldGMvY3Jvbi5ob3VybHkvdG1wd2F0Y2ggPDwnRU9GJwojIS9iaW4vYmFzaAoKZXhlYyAvc2Jpbi90bXB3YXRjaCAyNGggL3RtcApFT0YKY2htb2QgK3ggL2V0Yy9jcm9uLmhvdXJseS90bXB3YXRjaAoKIyBIQUNLIC0gcG9kbWFuIGRvZXNuJ3QgYWx3YXlzIHRlcm1pbmF0ZSBvciBjbGVhbiB1cCBpdCdzIHBhdXNlLnBpZCBmaWxlIGNhdXNpbmcKIyAnY2Fubm90IHJlZXhlYyBlcnJvcnMnIHNvIGF0dGVtcHQgdG8gY2xlYW4gaXQgdXAgZXZlcnkgbWludXRlIHRvIGtlZXAgcGlwZWxpbmVzIHJ1bm5pbmcKIyBzbW9vdGhseQpjYXQgPi91c3IvbG9jYWwvYmluL2ZpeC1wb2RtYW4tcGF1c2Uuc2ggPDwnRU9GJwojIS9iaW4vYmFzaAoKUEFVU0VfRklMRT0nL3RtcC9wb2RtYW4tcnVuLTEwMDAvbGlicG9kL3RtcC9wYXVzZS5waWQnCgppZiBbIC1mICIke1BBVVNFX0ZJTEV9IiBdOyB0aGVuCglQSUQ9JChjYXQgJHtQQVVTRV9GSUxFfSkKCWlmICEgcHMgLXAgJFBJRCA+IC9kZXYvbnVsbDsgdGhlbgoJCXJtICRQQVVTRV9GSUxFCglmaQpmaQpFT0YKY2htb2QgK3ggL3Vzci9sb2NhbC9iaW4vZml4LXBvZG1hbi1wYXVzZS5zaAoKIyBIQUNLIC0gL3RtcCB3aWxsIGZpbGwgdXAgY2F1c2luZyBidWlsZCBmYWlsdXJlcwojIGRlbGV0ZSBhbnl0aGluZyBub3QgYWNjZXNzZWQgd2l0aGluIDIgZGF5cwpjYXQgPi91c3IvbG9jYWwvYmluL2NsZWFuLXRtcC5zaCA8PCdFT0YnCiMhL2Jpbi9iYXNoCgpmaW5kIC90bXAgLXR5cGUgZiBcKCAhIC11c2VyIHJvb3QgXCkgLWF0aW1lICsyIC1kZWxldGUKCkVPRgpjaG1vZCAreCAvdXNyL2xvY2FsL2Jpbi9jbGVhbi10bXAuc2gKCmVjaG8gIjAgMCAqLzEgKiAqIC91c3IvbG9jYWwvYmluL2NsZWFuLXRtcC5zaCIgPj4gY3JvbgplY2hvICIqICogKiAqICogL3Vzci9sb2NhbC9iaW4vZml4LXBvZG1hbi1wYXVzZS5zaCIgPj4gY3JvbgoKIyBIQUNLIC0gaHR0cHM6Ly9naXRodWIuY29tL2NvbnRhaW5lcnMvcG9kbWFuL2lzc3Vlcy85MDAyCmVjaG8gIkByZWJvb3QgbG9naW5jdGwgZW5hYmxlLWxpbmdlciBjbG91ZC11c2VyIiA+PiBjcm9uCgpjcm9udGFiIGNyb24Kcm0gY3JvbgoKKHNsZWVwIDMwOyByZWJvb3QpICYK')))]"
                                    }
                                }
                            }
                        ]
                    }
                },
                "overprovision": false
            },
            "name": "ci-vmss",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "location": "[resourceGroup().location]",
            "condition": "[greater(parameters('ciCapacity'), 0)]",
            "apiVersion": "2020-12-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]"
            ]
        },
        {
            "name": "[concat(take(resourceGroup().name,10), '-dev-sharedKV')]",
            "type": "Microsoft.KeyVault/vaults",
            "location": "[resourceGroup().location]",
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "accessPolicies": [],
                "enabledForDiskEncryption": true,
                "enablePurgeProtection": true
            },
            "apiVersion": "2019-09-01"
        },
        {
            "properties": {
                "kty": "RSA",
                "keySize": 4096
            },
            "name": "[concat(concat(take(resourceGroup().name,10), '-dev-sharedKV'), '/', concat(resourceGroup().name, '-disk-encryption-key'))]",
            "type": "Microsoft.KeyVault/vaults/keys",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', concat(take(resourceGroup().name,10), '-dev-sharedKV'))]"
            ]
        },
        {
            "name": "[concat(concat(take(resourceGroup().name,10), '-dev-sharedKV'), '/add')]",
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "location": "[resourceGroup().location]",
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Compute/diskEncryptionSets', concat(resourceGroup().name, '-disk-encryption-set')), '2021-04-01', 'Full').identity.PrincipalId]",
                        "permissions": {
                            "keys": [
                                "get",
                                "wrapKey",
                                "unwrapKey"
                            ]
                        }
                    }
                ]
            },
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/diskEncryptionSets', concat(resourceGroup().name, '-disk-encryption-set'))]"
            ]
        },
        {
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "activeKey": {
                    "sourceVault": {
                        "id": "[resourceId('Microsoft.KeyVault/vaults', concat(take(resourceGroup().name,10), '-dev-sharedKV'))]"
                    },
                    "keyUrl": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', concat(take(resourceGroup().name,10), '-dev-sharedKV'), concat(resourceGroup().name, '-disk-encryption-key')), '2019-09-01', 'Full').properties.keyUriWithVersion]"
                }
            },
            "name": "[concat(resourceGroup().name, '-disk-encryption-set')]",
            "type": "Microsoft.Compute/diskEncryptionSets",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-12-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/keys', concat(take(resourceGroup().name,10), '-dev-sharedKV'), concat(resourceGroup().name, '-disk-encryption-key'))]"
            ]
        },
        {
            "sku": {
                "name": "Standard_D2s_v3",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "dev-proxy-",
                        "adminUsername": "cloud-user",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/cloud-user/.ssh/authorized_keys",
                                        "keyData": "[parameters('sshPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "RedHat",
                            "offer": "RHEL",
                            "sku": "7-LVM",
                            "version": "latest"
                        },
                        "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "dev-proxy-vmss-nic",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "dev-proxy-vmss-ipconfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'rp-vnet', 'rp-subnet')]"
                                                },
                                                "primary": true,
                                                "publicIPAddressConfiguration": {
                                                    "name": "dev-proxy-vmss-pip",
                                                    "properties": {
                                                        "dnsSettings": {
                                                            "domainNameLabel": "[parameters('proxyDomainNameLabel')]"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "dev-proxy-vmss-cse",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {},
                                    "protectedSettings": {
                                        "script": "[base64(concat(base64ToString('c2V0IC1leAoK'),'PROXYIMAGE=$(base64 -d \u003c\u003c\u003c''',base64(parameters('proxyImage')),''')\n','PROXYIMAGEAUTH=$(base64 -d \u003c\u003c\u003c''',base64(parameters('proxyImageAuth')),''')\n','PROXYCERT=''',parameters('proxyCert'),'''\n','PROXYCLIENTCERT=''',parameters('proxyClientCert'),'''\n','PROXYKEY=''',parameters('proxyKey'),'''\n','\n',base64ToString('eXVtIC15IHVwZGF0ZQp5dW0gLXkgaW5zdGFsbCBkb2NrZXIKCmZpcmV3YWxsLWNtZCAtLWFkZC1wb3J0PTQ0My90Y3AgLS1wZXJtYW5lbnQKCm1rZGlyIC9yb290Ly5kb2NrZXIKY2F0ID4vcm9vdC8uZG9ja2VyL2NvbmZpZy5qc29uIDw8RU9GCnsKCSJhdXRocyI6IHsKCQkiJHtQUk9YWUlNQUdFJSUvKn0iOiB7CgkJCSJhdXRoIjogIiRQUk9YWUlNQUdFQVVUSCIKCQl9Cgl9Cn0KRU9GCnN5c3RlbWN0bCBzdGFydCBkb2NrZXIuc2VydmljZQpkb2NrZXIgcHVsbCAiJFBST1hZSU1BR0UiCgpta2RpciAvZXRjL3Byb3h5CmJhc2U2NCAtZCA8PDwiJFBST1hZQ0VSVCIgPi9ldGMvcHJveHkvcHJveHkuY3J0CmJhc2U2NCAtZCA8PDwiJFBST1hZS0VZIiA+L2V0Yy9wcm94eS9wcm94eS5rZXkKYmFzZTY0IC1kIDw8PCIkUFJPWFlDTElFTlRDRVJUIiA+L2V0Yy9wcm94eS9wcm94eS1jbGllbnQuY3J0CmNob3duIC1SIDEwMDA6MTAwMCAvZXRjL3Byb3h5CmNobW9kIDA2MDAgL2V0Yy9wcm94eS9wcm94eS5rZXkKCmNhdCA+L2V0Yy9zeXNjb25maWcvcHJveHkgPDxFT0YKUFJPWFlfSU1BR0U9JyRQUk9YWUlNQUdFJwpFT0YKCmNhdCA+L2V0Yy9zeXN0ZW1kL3N5c3RlbS9wcm94eS5zZXJ2aWNlIDw8J0VPRicKW1VuaXRdCkFmdGVyPWRvY2tlci5zZXJ2aWNlClJlcXVpcmVzPWRvY2tlci5zZXJ2aWNlCgpbU2VydmljZV0KRW52aXJvbm1lbnRGaWxlPS9ldGMvc3lzY29uZmlnL3Byb3h5CkV4ZWNTdGFydFByZT0tL3Vzci9iaW4vZG9ja2VyIHJtIC1mICVuCkV4ZWNTdGFydD0vdXNyL2Jpbi9kb2NrZXIgcnVuIC0tcm0gLS1uYW1lICVuIC1wIDQ0Mzo4NDQzIC12IC9ldGMvcHJveHk6L3NlY3JldHMgJFBST1hZX0lNQUdFCkV4ZWNTdG9wPS91c3IvYmluL2RvY2tlciBzdG9wICVuClJlc3RhcnQ9YWx3YXlzClJlc3RhcnRTZWM9MQpTdGFydExpbWl0SW50ZXJ2YWw9MAoKW0luc3RhbGxdCldhbnRlZEJ5PW11bHRpLXVzZXIudGFyZ2V0CkVPRgoKc3lzdGVtY3RsIGVuYWJsZSBwcm94eS5zZXJ2aWNlCgpjYXQgPi9ldGMvY3Jvbi53ZWVrbHkvcHVsbC1pbWFnZSA8PCdFT0YnCiMhL2Jpbi9iYXNoCgpkb2NrZXIgcHVsbCAkUFJPWFlJTUFHRQpzeXN0ZW1jdGwgcmVzdGFydCBwcm94eS5zZXJ2aWNlCkVPRgpjaG1vZCAreCAvZXRjL2Nyb24ud2Vla2x5L3B1bGwtaW1hZ2UKCmNhdCA+L2V0Yy9jcm9uLndlZWtseS95dW11cGRhdGUgPDwnRU9GJwojIS9iaW4vYmFzaAoKeXVtIHVwZGF0ZSAteQpFT0YKY2htb2QgK3ggL2V0Yy9jcm9uLndlZWtseS95dW11cGRhdGUKCihzbGVlcCAzMDsgcmVib290KSAmCg==')))]"
                                    }
                                }
                            }
                        ]
                    }
                },
                "overprovision": false
            },
            "name": "dev-proxy-vmss",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-12-01"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]"
                }
            },
            "name": "dev-vpn-vnet/peering-dev-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
                }
            },
            "name": "dev-vnet/peering-dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'rp-vnet')]"
                }
            },
            "name": "dev-vpn-vnet/peering-rp-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
                }
            },
            "name": "rp-vnet/peering-dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        }
    ]
}
