{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ciAzpToken": {
            "type": "string",
            "defaultValue": ""
        },
        "ciCapacity": {
            "type": "int",
            "defaultValue": 0
        },
        "ciPoolName": {
            "type": "string",
            "defaultValue": ""
        },
        "proxyCert": {
            "type": "string"
        },
        "proxyClientCert": {
            "type": "string"
        },
        "proxyDomainNameLabel": {
            "type": "string"
        },
        "proxyImage": {
            "type": "string"
        },
        "proxyImageAuth": {
            "type": "securestring"
        },
        "proxyKey": {
            "type": "securestring"
        },
        "publicIPAddressAllocationMethod": {
            "type": "string",
            "defaultValue": "Static"
        },
        "publicIPAddressSkuName": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "sshPublicKey": {
            "type": "string"
        },
        "vpnCACertificate": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "resources": [
        {
            "sku": {
                "name": "[parameters('publicIPAddressSkuName')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAddressAllocationMethod')]"
            },
            "name": "dev-vpn-pip",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'rp-nsg')]",
                                "tags": null
                            }
                        },
                        "name": "ToolingSubnet"
                    }
                ]
            },
            "name": "dev-vnet",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "properties": {
                            "addressPrefix": "10.2.0.0/24"
                        },
                        "name": "GatewaySubnet"
                    }
                ]
            },
            "name": "dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'dev-vpn-vnet', 'GatewaySubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'dev-vpn-pip')]"
                            }
                        },
                        "name": "default"
                    }
                ],
                "vpnType": "RouteBased",
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            "192.168.255.0/24"
                        ]
                    },
                    "vpnClientRootCertificates": [
                        {
                            "properties": {
                                "publicCertData": "[parameters('vpnCACertificate')]"
                            },
                            "name": "dev-vpn-ca"
                        }
                    ],
                    "vpnClientProtocols": [
                        "OpenVPN"
                    ]
                }
            },
            "name": "dev-vpn",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'dev-vpn-pip')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
            ]
        },
        {
            "sku": {
                "name": "Standard_D2s_v3",
                "tier": "Standard",
                "capacity": "[parameters('ciCapacity')]"
            },
            "properties": {
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "ci-",
                        "adminUsername": "cloud-user",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/cloud-user/.ssh/authorized_keys",
                                        "keyData": "[parameters('sshPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "RedHat",
                            "offer": "RHEL",
                            "sku": "8-LVM",
                            "version": "latest"
                        },
                        "osDisk": {
                            "createOption": "FromImage",
                            "diskSizeGB": 200,
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "ci-vmss-nic",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "ci-vmss-ipconfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'dev-vnet', 'ToolingSubnet')]"
                                                },
                                                "primary": true,
                                                "publicIPAddressConfiguration": {
                                                    "name": "ci-vmss-pip",
                                                    "properties": {
                                                        "dnsSettings": {
                                                            "domainNameLabel": "aro-ci"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "ci-vmss-cse",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {},
                                    "protectedSettings": {
                                        "script": "[base64(concat(base64ToString('c2V0IC1lCgo='),'CIAZPTOKEN=''',parameters('ciAzpToken'),'''\n','CIPOOLNAME=''',parameters('ciPoolName'),'''\n','\n',base64ToString('IyBIYWNrIC0gd2FpdCBvbiBjcmVhdGUgYmVjYXVzZSB0aGUgV0FMaW51eEFnZW50IHNvbWV0aW1lcyBjb25mbGljdHMgd2l0aCB0aGUgeXVtIHVwZGF0ZSAteSBiZWxvdwpzbGVlcCA2MAoKZm9yIGF0dGVtcHQgaW4gezEuLjV9OyBkbwogIHl1bSAteSB1cGRhdGUgJiYgYnJlYWsKICBpZiBbWyAke2F0dGVtcHR9IC1sdCA1IF1dOyB0aGVuIHNsZWVwIDEwOyBlbHNlIGV4aXQgMTsgZmkKZG9uZQoKREVWSUNFX1BBUlRJVElPTj0kKHB2cyB8IGdyZXAgJy9kZXYvJyB8IGF3ayAne3ByaW50ICQxfScgfCBncmVwIC1vUCAnW2Etel17M31bMC05XSQnKQpERVZJQ0U9JChlY2hvICRERVZJQ0VfUEFSVElUSU9OIHwgZ3JlcCAtb1AgJ15bYS16XXszfScpClBBUlRJVElPTj0kKGVjaG8gJERFVklDRV9QQVJUSVRJT04gfCBncmVwIC1vUCAnWzAtOV0kJykKCiMgRml4IHRoZSAiR1BUIFBNQlIgc2l6ZSBtaXNtYXRjaCAoMTM0MjE3NzI3ICE9IDI2ODQzNTQ1NSkiCmVjaG8gInciIHwgZmRpc2sgL2Rldi8ke0RFVklDRX0KCiMgU3RlcHMgZnJvbSBodHRwczovL2FjY2Vzcy5yZWRoYXQuY29tL3NvbHV0aW9ucy81ODA4MDAxCiMgMS4gRGVsZXRlIHRoZSBMVk0gcGFydGl0aW9uICJkXG4yXG4iCiMgMi4gUmVjcmVhdGUgdGhlIHBhcnRpdGlvbiAiblxuMlxuIgojIDMuIEFjY2VwdCB0aGUgZGVmYXVsdCBzdGFydCBhbmQgZW5kIHNlY3RvcnMgKDIgeCBcbikKIyA0LiBMVk0yX21lbWJlciBzaWduYXR1cmUgcmVtYWlucyBieSBkZWZhdWx0CiMgNS4gQ2hhbmdlIHR5cGUgdG8gTGludXggTFZNICJ0XG4yXG4zMVxuCiMgNi4gV3JpdGUgbmV3IHRhYmxlICJ3XG4iCgpmZGlzayAvZGV2LyR7REVWSUNFfSA8PEVPRgpkCiR7UEFSVElUSU9OfQpuCiR7UEFSVElUSU9OfQoKCnQKJHtQQVJUSVRJT059CjMxCncKRU9GCgpwYXJ0eCAtdSAvZGV2LyR7REVWSUNFfQpwdnJlc2l6ZSAvZGV2LyR7REVWSUNFX1BBUlRJVElPTn0KCmx2ZXh0ZW5kIC1sICs1MCVGUkVFIC9kZXYvcm9vdHZnL2hvbWVsdgp4ZnNfZ3Jvd2ZzIC9ob21lCgpsdmV4dGVuZCAtbCArNTAlRlJFRSAvZGV2L3Jvb3R2Zy90bXBsdgp4ZnNfZ3Jvd2ZzIC90bXAKCmx2ZXh0ZW5kIC1sICsxMDAlRlJFRSAvZGV2L3Jvb3R2Zy92YXJsdgp4ZnNfZ3Jvd2ZzIC92YXIKCnJwbSAtLWltcG9ydCBodHRwczovL2RsLmZlZG9yYXByb2plY3Qub3JnL3B1Yi9lcGVsL1JQTS1HUEctS0VZLUVQRUwtOApycG0gLS1pbXBvcnQgaHR0cHM6Ly9wYWNrYWdlcy5taWNyb3NvZnQuY29tL2tleXMvbWljcm9zb2Z0LmFzYwoKeXVtIC15IGluc3RhbGwgaHR0cHM6Ly9kbC5mZWRvcmFwcm9qZWN0Lm9yZy9wdWIvZXBlbC9lcGVsLXJlbGVhc2UtbGF0ZXN0LTgubm9hcmNoLnJwbQoKY2F0ID4vZXRjL3l1bS5yZXBvcy5kL2F6dXJlLnJlcG8gPDwnRU9GJwpbYXp1cmUtY2xpXQpuYW1lPWF6dXJlLWNsaQpiYXNldXJsPWh0dHBzOi8vcGFja2FnZXMubWljcm9zb2Z0LmNvbS95dW1yZXBvcy9henVyZS1jbGkKZW5hYmxlZD15ZXMKZ3BnY2hlY2s9eWVzCkVPRgoKeXVtIC15IGluc3RhbGwgYXp1cmUtY2xpIHBvZG1hbiBwb2RtYW4tZG9ja2VyIGpxIGdjYyBncGdtZS1kZXZlbCBsaWJhc3N1YW4tZGV2ZWwgZ2l0IG1ha2UgdG1wd2F0Y2ggcHl0aG9uMy1kZXZlbCBodG9wIGdvLXRvb2xzZXQtMS4xNy4xMi0xLm1vZHVsZStlbDguNi4wKzE2MDE0K2EzNzJjMDBiIG9wZW52cG4KCiMgU3VwcHJlc3MgZW11bGF0aW9uIG91dHB1dCBmb3IgcG9kbWFuIGluc3RlYWQgb2YgZG9ja2VyIGZvciBheiBhY3IgY29tcGF0YWJpbGl0eQpta2RpciAtcCAvZXRjL2NvbnRhaW5lcnMvCnRvdWNoIC9ldGMvY29udGFpbmVycy9ub2RvY2tlcgoKVlNUU19BR0VOVF9WRVJTSU9OPTIuMjA2LjEKbWtkaXIgL2hvbWUvY2xvdWQtdXNlci9hZ2VudApwdXNoZCAvaG9tZS9jbG91ZC11c2VyL2FnZW50CmN1cmwgLXMgaHR0cHM6Ly92c3RzYWdlbnRwYWNrYWdlLmF6dXJlZWRnZS5uZXQvYWdlbnQvJHtWU1RTX0FHRU5UX1ZFUlNJT059L3ZzdHMtYWdlbnQtbGludXgteDY0LSR7VlNUU19BR0VOVF9WRVJTSU9OfS50YXIuZ3ogfCB0YXIgLXh6CmNob3duIC1SIGNsb3VkLXVzZXI6Y2xvdWQtdXNlciAuCgouL2Jpbi9pbnN0YWxsZGVwZW5kZW5jaWVzLnNoCnN1ZG8gLXUgY2xvdWQtdXNlciAuL2NvbmZpZy5zaCAtLXVuYXR0ZW5kZWQgLS11cmwgaHR0cHM6Ly9kZXYuYXp1cmUuY29tL21zYXp1cmUgLS1hdXRoIHBhdCAtLXRva2VuICIkQ0lBWlBUT0tFTiIgLS1wb29sICIkQ0lQT09MTkFNRSIgLS1hZ2VudCAiQVJPLVJIRUwtJEhPU1ROQU1FIiAtLXJlcGxhY2UKLi9zdmMuc2ggaW5zdGFsbCBjbG91ZC11c2VyCnBvcGQKCmNhdCA+L2hvbWUvY2xvdWQtdXNlci9hZ2VudC8ucGF0aCA8PCdFT0YnCi91c3IvbG9jYWwvYmluOi91c3IvYmluOi91c3IvbG9jYWwvc2JpbjovdXNyL3NiaW46L2hvbWUvY2xvdWQtdXNlci8ubG9jYWwvYmluOi9ob21lL2Nsb3VkLXVzZXIvYmluCkVPRgoKIyBTZXQgdGhlIGFnZW50J3MgIlN5c3RlbSBjYXBhYmlsaXRpZXMiIGZvciB0ZXN0cyAoZ28tMS4xNyBhbmQgR09MQU5HX0ZJUFMpIGluIHRoZSBhZ2VudCdzIC5lbnYgZmlsZQojIGFuZCBhZGQgYSBIQUNLIGZvciBYREdfUlVOVElNRV9ESVI6IGh0dHBzOi8vZ2l0aHViLmNvbS9jb250YWluZXJzL3BvZG1hbi9pc3N1ZXMvNDI3CmNhdCA+L2hvbWUvY2xvdWQtdXNlci9hZ2VudC8uZW52IDw8J0VPRicKZ28tMS4xNz10cnVlCkdPTEFOR19GSVBTPTEKWERHX1JVTlRJTUVfRElSPS9ydW4vdXNlci8xMDAwCkVPRgoKY2F0ID4vZXRjL2Nyb24ud2Vla2x5L3l1bXVwZGF0ZSA8PCdFT0YnCiMhL2Jpbi9iYXNoCgp5dW0gdXBkYXRlIC15CkVPRgpjaG1vZCAreCAvZXRjL2Nyb24ud2Vla2x5L3l1bXVwZGF0ZQoKY2F0ID4vZXRjL2Nyb24uaG91cmx5L3RtcHdhdGNoIDw8J0VPRicKIyEvYmluL2Jhc2gKCmV4ZWMgL3NiaW4vdG1wd2F0Y2ggMjRoIC90bXAKRU9GCmNobW9kICt4IC9ldGMvY3Jvbi5ob3VybHkvdG1wd2F0Y2gKCiMgSEFDSyAtIHBvZG1hbiBkb2Vzbid0IGFsd2F5cyB0ZXJtaW5hdGUgb3IgY2xlYW4gdXAgaXQncyBwYXVzZS5waWQgZmlsZSBjYXVzaW5nCiMgJ2Nhbm5vdCByZWV4ZWMgZXJyb3JzJyBzbyBhdHRlbXB0IHRvIGNsZWFuIGl0IHVwIGV2ZXJ5IG1pbnV0ZSB0byBrZWVwIHBpcGVsaW5lcyBydW5uaW5nCiMgc21vb3RobHkKY2F0ID4vdXNyL2xvY2FsL2Jpbi9maXgtcG9kbWFuLXBhdXNlLnNoIDw8J0VPRicKIyEvYmluL2Jhc2gKClBBVVNFX0ZJTEU9Jy90bXAvcG9kbWFuLXJ1bi0xMDAwL2xpYnBvZC90bXAvcGF1c2UucGlkJwoKaWYgWyAtZiAiJHtQQVVTRV9GSUxFfSIgXTsgdGhlbgoJUElEPSQoY2F0ICR7UEFVU0VfRklMRX0pCglpZiAhIHBzIC1wICRQSUQgPiAvZGV2L251bGw7IHRoZW4KCQlybSAkUEFVU0VfRklMRQoJZmkKZmkKRU9GCmNobW9kICt4IC91c3IvbG9jYWwvYmluL2ZpeC1wb2RtYW4tcGF1c2Uuc2gKCiMgSEFDSyAtIC90bXAgd2lsbCBmaWxsIHVwIGNhdXNpbmcgYnVpbGQgZmFpbHVyZXMKIyBkZWxldGUgYW55dGhpbmcgbm90IGFjY2Vzc2VkIHdpdGhpbiAyIGRheXMKY2F0ID4vdXNyL2xvY2FsL2Jpbi9jbGVhbi10bXAuc2ggPDwnRU9GJwojIS9iaW4vYmFzaAoKZmluZCAvdG1wIC10eXBlIGYgXCggISAtdXNlciByb290IFwpIC1hdGltZSArMiAtZGVsZXRlCgpFT0YKY2htb2QgK3ggL3Vzci9sb2NhbC9iaW4vY2xlYW4tdG1wLnNoCgplY2hvICIwIDAgKi8xICogKiAvdXNyL2xvY2FsL2Jpbi9jbGVhbi10bXAuc2giID4+IGNyb24KZWNobyAiKiAqICogKiAqIC91c3IvbG9jYWwvYmluL2ZpeC1wb2RtYW4tcGF1c2Uuc2giID4+IGNyb24KCiMgSEFDSyAtIGh0dHBzOi8vZ2l0aHViLmNvbS9jb250YWluZXJzL3BvZG1hbi9pc3N1ZXMvOTAwMgplY2hvICJAcmVib290IGxvZ2luY3RsIGVuYWJsZS1saW5nZXIgY2xvdWQtdXNlciIgPj4gY3JvbgoKY3JvbnRhYiBjcm9uCnJtIGNyb24KCihzbGVlcCAzMDsgcmVib290KSAmCg==')))]"
                                    }
                                }
                            }
                        ]
                    }
                },
                "overprovision": false
            },
            "name": "ci-vmss",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "location": "[resourceGroup().location]",
            "condition": "[greater(parameters('ciCapacity'), 0)]",
            "apiVersion": "2020-12-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]"
            ]
        },
        {
            "name": "[concat(take(resourceGroup().name,10), '-dev-sharedKV')]",
            "type": "Microsoft.KeyVault/vaults",
            "location": "[resourceGroup().location]",
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "accessPolicies": [],
                "enabledForDiskEncryption": true,
                "enablePurgeProtection": true
            },
            "apiVersion": "2019-09-01"
        },
        {
            "properties": {
                "kty": "RSA",
                "keySize": 4096
            },
            "name": "[concat(concat(take(resourceGroup().name,10), '-dev-sharedKV'), '/', concat(resourceGroup().name, '-disk-encryption-key'))]",
            "type": "Microsoft.KeyVault/vaults/keys",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', concat(take(resourceGroup().name,10), '-dev-sharedKV'))]"
            ]
        },
        {
            "name": "[concat(concat(take(resourceGroup().name,10), '-dev-sharedKV'), '/add')]",
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "location": "[resourceGroup().location]",
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Compute/diskEncryptionSets', concat(resourceGroup().name, '-disk-encryption-set')), '2021-04-01', 'Full').identity.PrincipalId]",
                        "permissions": {
                            "keys": [
                                "get",
                                "wrapKey",
                                "unwrapKey"
                            ]
                        }
                    }
                ]
            },
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/diskEncryptionSets', concat(resourceGroup().name, '-disk-encryption-set'))]"
            ]
        },
        {
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "activeKey": {
                    "sourceVault": {
                        "id": "[resourceId('Microsoft.KeyVault/vaults', concat(take(resourceGroup().name,10), '-dev-sharedKV'))]"
                    },
                    "keyUrl": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', concat(take(resourceGroup().name,10), '-dev-sharedKV'), concat(resourceGroup().name, '-disk-encryption-key')), '2019-09-01', 'Full').properties.keyUriWithVersion]"
                }
            },
            "name": "[concat(resourceGroup().name, '-disk-encryption-set')]",
            "type": "Microsoft.Compute/diskEncryptionSets",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-12-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/keys', concat(take(resourceGroup().name,10), '-dev-sharedKV'), concat(resourceGroup().name, '-disk-encryption-key'))]"
            ]
        },
        {
            "sku": {
                "name": "Standard_D2s_v3",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "dev-proxy-",
                        "adminUsername": "cloud-user",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/cloud-user/.ssh/authorized_keys",
                                        "keyData": "[parameters('sshPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "RedHat",
                            "offer": "RHEL",
                            "sku": "7-LVM",
                            "version": "latest"
                        },
                        "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "dev-proxy-vmss-nic",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "dev-proxy-vmss-ipconfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'rp-vnet', 'rp-subnet')]"
                                                },
                                                "primary": true,
                                                "publicIPAddressConfiguration": {
                                                    "name": "dev-proxy-vmss-pip",
                                                    "properties": {
                                                        "dnsSettings": {
                                                            "domainNameLabel": "[parameters('proxyDomainNameLabel')]"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "dev-proxy-vmss-cse",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {},
                                    "protectedSettings": {
                                        "script": "[base64(concat(base64ToString('c2V0IC1leAoK'),'PROXYIMAGE=$(base64 -d \u003c\u003c\u003c''',base64(parameters('proxyImage')),''')\n','PROXYIMAGEAUTH=$(base64 -d \u003c\u003c\u003c''',base64(parameters('proxyImageAuth')),''')\n','PROXYCERT=''',parameters('proxyCert'),'''\n','PROXYCLIENTCERT=''',parameters('proxyClientCert'),'''\n','PROXYKEY=''',parameters('proxyKey'),'''\n','\n',base64ToString('eXVtIC15IHVwZGF0ZQp5dW0gLXkgaW5zdGFsbCBkb2NrZXIKCmZpcmV3YWxsLWNtZCAtLWFkZC1wb3J0PTQ0My90Y3AgLS1wZXJtYW5lbnQKCm1rZGlyIC9yb290Ly5kb2NrZXIKY2F0ID4vcm9vdC8uZG9ja2VyL2NvbmZpZy5qc29uIDw8RU9GCnsKCSJhdXRocyI6IHsKCQkiJHtQUk9YWUlNQUdFJSUvKn0iOiB7CgkJCSJhdXRoIjogIiRQUk9YWUlNQUdFQVVUSCIKCQl9Cgl9Cn0KRU9GCnN5c3RlbWN0bCBzdGFydCBkb2NrZXIuc2VydmljZQpkb2NrZXIgcHVsbCAiJFBST1hZSU1BR0UiCgpta2RpciAvZXRjL3Byb3h5CmJhc2U2NCAtZCA8PDwiJFBST1hZQ0VSVCIgPi9ldGMvcHJveHkvcHJveHkuY3J0CmJhc2U2NCAtZCA8PDwiJFBST1hZS0VZIiA+L2V0Yy9wcm94eS9wcm94eS5rZXkKYmFzZTY0IC1kIDw8PCIkUFJPWFlDTElFTlRDRVJUIiA+L2V0Yy9wcm94eS9wcm94eS1jbGllbnQuY3J0CmNob3duIC1SIDEwMDA6MTAwMCAvZXRjL3Byb3h5CmNobW9kIDA2MDAgL2V0Yy9wcm94eS9wcm94eS5rZXkKCmNhdCA+L2V0Yy9zeXNjb25maWcvcHJveHkgPDxFT0YKUFJPWFlfSU1BR0U9JyRQUk9YWUlNQUdFJwpFT0YKCmNhdCA+L2V0Yy9zeXN0ZW1kL3N5c3RlbS9wcm94eS5zZXJ2aWNlIDw8J0VPRicKW1VuaXRdCkFmdGVyPWRvY2tlci5zZXJ2aWNlClJlcXVpcmVzPWRvY2tlci5zZXJ2aWNlCgpbU2VydmljZV0KRW52aXJvbm1lbnRGaWxlPS9ldGMvc3lzY29uZmlnL3Byb3h5CkV4ZWNTdGFydFByZT0tL3Vzci9iaW4vZG9ja2VyIHJtIC1mICVuCkV4ZWNTdGFydD0vdXNyL2Jpbi9kb2NrZXIgcnVuIC0tcm0gLS1uYW1lICVuIC1wIDQ0Mzo4NDQzIC12IC9ldGMvcHJveHk6L3NlY3JldHMgJFBST1hZX0lNQUdFCkV4ZWNTdG9wPS91c3IvYmluL2RvY2tlciBzdG9wICVuClJlc3RhcnQ9YWx3YXlzClJlc3RhcnRTZWM9MQpTdGFydExpbWl0SW50ZXJ2YWw9MAoKW0luc3RhbGxdCldhbnRlZEJ5PW11bHRpLXVzZXIudGFyZ2V0CkVPRgoKc3lzdGVtY3RsIGVuYWJsZSBwcm94eS5zZXJ2aWNlCgpjYXQgPi9ldGMvY3Jvbi53ZWVrbHkvcHVsbC1pbWFnZSA8PCdFT0YnCiMhL2Jpbi9iYXNoCgpkb2NrZXIgcHVsbCAkUFJPWFlJTUFHRQpzeXN0ZW1jdGwgcmVzdGFydCBwcm94eS5zZXJ2aWNlCkVPRgpjaG1vZCAreCAvZXRjL2Nyb24ud2Vla2x5L3B1bGwtaW1hZ2UKCmNhdCA+L2V0Yy9jcm9uLndlZWtseS95dW11cGRhdGUgPDwnRU9GJwojIS9iaW4vYmFzaAoKeXVtIHVwZGF0ZSAteQpFT0YKY2htb2QgK3ggL2V0Yy9jcm9uLndlZWtseS95dW11cGRhdGUKCihzbGVlcCAzMDsgcmVib290KSAmCg==')))]"
                                    }
                                }
                            }
                        ]
                    }
                },
                "overprovision": false
            },
            "name": "dev-proxy-vmss",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-12-01"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]"
                }
            },
            "name": "dev-vpn-vnet/peering-dev-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
                }
            },
            "name": "dev-vnet/peering-dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'rp-vnet')]"
                }
            },
            "name": "dev-vpn-vnet/peering-rp-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
                }
            },
            "name": "rp-vnet/peering-dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        }
    ]
}
