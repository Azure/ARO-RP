{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "proxyCert": {
            "type": "string"
        },
        "proxyClientCert": {
            "type": "string"
        },
        "proxyDomainNameLabel": {
            "type": "string"
        },
        "proxyImage": {
            "type": "string"
        },
        "proxyImageAuth": {
            "type": "securestring"
        },
        "proxyKey": {
            "type": "securestring"
        },
        "publicIPAddressAllocationMethod": {
            "type": "string",
            "defaultValue": "Static"
        },
        "publicIPAddressSkuName": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "sshPublicKey": {
            "type": "string"
        },
        "vpnCACertificate": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "resources": [
        {
            "sku": {
                "name": "[parameters('publicIPAddressSkuName')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAddressAllocationMethod')]"
            },
            "name": "dev-vpn-pip",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'rp-nsg')]",
                                "tags": null
                            }
                        },
                        "name": "ToolingSubnet"
                    }
                ]
            },
            "name": "dev-vnet",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "properties": {
                            "addressPrefix": "10.2.0.0/24"
                        },
                        "name": "GatewaySubnet"
                    }
                ]
            },
            "name": "dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'dev-vpn-vnet', 'GatewaySubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'dev-vpn-pip')]"
                            }
                        },
                        "name": "default"
                    }
                ],
                "vpnType": "RouteBased",
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            "192.168.255.0/24"
                        ]
                    },
                    "vpnClientRootCertificates": [
                        {
                            "properties": {
                                "publicCertData": "[parameters('vpnCACertificate')]"
                            },
                            "name": "dev-vpn-ca"
                        }
                    ],
                    "vpnClientProtocols": [
                        "OpenVPN"
                    ]
                }
            },
            "name": "dev-vpn",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'dev-vpn-pip')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
            ]
        },
        {
            "name": "[concat(take(resourceGroup().name,10), '-dev-sharedKV')]",
            "type": "Microsoft.KeyVault/vaults",
            "location": "[resourceGroup().location]",
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "accessPolicies": [],
                "enabledForDiskEncryption": true,
                "enablePurgeProtection": true
            },
            "apiVersion": "2019-09-01"
        },
        {
            "properties": {
                "kty": "RSA",
                "keySize": 4096
            },
            "name": "[concat(concat(take(resourceGroup().name,10), '-dev-sharedKV'), '/', concat(resourceGroup().name, '-disk-encryption-key'))]",
            "type": "Microsoft.KeyVault/vaults/keys",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', concat(take(resourceGroup().name,10), '-dev-sharedKV'))]"
            ]
        },
        {
            "name": "[concat(concat(take(resourceGroup().name,10), '-dev-sharedKV'), '/add')]",
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "location": "[resourceGroup().location]",
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Compute/diskEncryptionSets', concat(resourceGroup().name, '-disk-encryption-set')), '2021-04-01', 'Full').identity.PrincipalId]",
                        "permissions": {
                            "keys": [
                                "get",
                                "wrapKey",
                                "unwrapKey"
                            ]
                        }
                    }
                ]
            },
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/diskEncryptionSets', concat(resourceGroup().name, '-disk-encryption-set'))]"
            ]
        },
        {
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "activeKey": {
                    "sourceVault": {
                        "id": "[resourceId('Microsoft.KeyVault/vaults', concat(take(resourceGroup().name,10), '-dev-sharedKV'))]"
                    },
                    "keyUrl": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', concat(take(resourceGroup().name,10), '-dev-sharedKV'), concat(resourceGroup().name, '-disk-encryption-key')), '2019-09-01', 'Full').properties.keyUriWithVersion]"
                }
            },
            "name": "[concat(resourceGroup().name, '-disk-encryption-set')]",
            "type": "Microsoft.Compute/diskEncryptionSets",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-12-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/keys', concat(take(resourceGroup().name,10), '-dev-sharedKV'), concat(resourceGroup().name, '-disk-encryption-key'))]"
            ]
        },
        {
            "sku": {
                "name": "Standard_F2s_v2",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "dev-proxy-",
                        "adminUsername": "cloud-user",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/cloud-user/.ssh/authorized_keys",
                                        "keyData": "[parameters('sshPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "RedHat",
                            "offer": "RHEL",
                            "sku": "8-LVM",
                            "version": "latest"
                        },
                        "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "dev-proxy-vmss-nic",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "dev-proxy-vmss-ipconfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'rp-vnet', 'rp-subnet')]"
                                                },
                                                "primary": true,
                                                "publicIPAddressConfiguration": {
                                                    "name": "dev-proxy-vmss-pip",
                                                    "properties": {
                                                        "dnsSettings": {
                                                            "domainNameLabel": "[parameters('proxyDomainNameLabel')]"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "dev-proxy-vmss-cse",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {},
                                    "protectedSettings": {
                                        "script": "[base64(concat(base64ToString('c2V0IC1leAoK'),'PROXYIMAGE=$(base64 -d \u003c\u003c\u003c''',base64(parameters('proxyImage')),''')\n','PROXYIMAGEAUTH=$(base64 -d \u003c\u003c\u003c''',base64(parameters('proxyImageAuth')),''')\n','PROXYCERT=''',parameters('proxyCert'),'''\n','PROXYCLIENTCERT=''',parameters('proxyClientCert'),'''\n','PROXYKEY=''',parameters('proxyKey'),'''\n','\n',base64ToString('')))]"
                                    },
                                    "provisionAfterExtensions": [
                                        "Microsoft.Azure.Monitor.AzureMonitorLinuxAgent",
                                        "Microsoft.Azure.Security.Monitoring.AzureSecurityLinuxAgent"
                                    ]
                                }
                            },
                            {
                                "name": "Microsoft.Azure.Monitor.AzureMonitorLinuxAgent",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Monitor",
                                    "type": "AzureMonitorLinuxAgent",
                                    "typeHandlerVersion": "1.0",
                                    "autoUpgradeMinorVersion": true,
                                    "enableAutomaticUpgrade": true,
                                    "settings": {
                                        "GCS_AUTO_CONFIG": true
                                    }
                                }
                            },
                            {
                                "name": "Microsoft.Azure.Security.Monitoring.AzureSecurityLinuxAgent",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Security.Monitoring",
                                    "type": "AzureSecurityLinuxAgent",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "enableAutomaticUpgrade": true,
                                    "settings": {
                                        "enableAutoConfig": true,
                                        "enableGenevaUpload": true,
                                        "reportSuccessOnUnsupportedDistro": true
                                    }
                                }
                            }
                        ]
                    }
                },
                "overprovision": false
            },
            "name": "dev-proxy-vmss",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-12-01"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]"
                }
            },
            "name": "dev-vpn-vnet/peering-dev-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
                }
            },
            "name": "dev-vnet/peering-dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'rp-vnet')]"
                }
            },
            "name": "dev-vpn-vnet/peering-rp-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]"
                }
            },
            "name": "rp-vnet/peering-dev-vpn-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'dev-vpn-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', 'dev-vpn')]"
            ],
            "location": "[resourceGroup().location]"
        }
    ]
}
