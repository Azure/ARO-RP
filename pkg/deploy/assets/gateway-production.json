{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "acrResourceId": {
            "type": "string"
        },
        "azureCloudName": {
            "type": "string"
        },
        "azureSecPackQualysUrl": {
            "type": "string"
        },
        "azureSecPackVSATenantId": {
            "type": "string"
        },
        "databaseAccountName": {
            "type": "string"
        },
        "dbtokenClientId": {
            "type": "string"
        },
        "dbtokenUrl": {
            "type": "string"
        },
        "fluentbitImage": {
            "type": "string"
        },
        "gatewayDomains": {
            "type": "string",
            "defaultValue": ""
        },
        "gatewayFeatures": {
            "type": "string",
            "defaultValue": ""
        },
        "gatewayMdsdConfigVersion": {
            "type": "string"
        },
        "gatewayServicePrincipalId": {
            "type": "string"
        },
        "gatewayStorageAccountDomain": {
            "type": "string"
        },
        "gatewayVmSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3"
        },
        "gatewayVmssCapacity": {
            "type": "int",
            "defaultValue": 3
        },
        "keyvaultDNSSuffix": {
            "type": "string"
        },
        "keyvaultPrefix": {
            "type": "string"
        },
        "mdmFrontendUrl": {
            "type": "string"
        },
        "mdsdEnvironment": {
            "type": "string"
        },
        "nonZonalRegions": {
            "type": "array",
            "defaultValue": [
                "eastasia",
                "centralindia",
                "centraluseuap",
                "koreacentral",
                "switzerlandnorth",
                "northcentralus",
                "uaenorth",
                "westus"
            ]
        },
        "rpImage": {
            "type": "string"
        },
        "rpMdmAccount": {
            "type": "string"
        },
        "rpMdsdAccount": {
            "type": "string"
        },
        "rpMdsdNamespace": {
            "type": "string"
        },
        "rpResourceGroupName": {
            "type": "string"
        },
        "rpServicePrincipalId": {
            "type": "string"
        },
        "sshPublicKey": {
            "type": "string"
        },
        "vmssCleanupEnabled": {
            "type": "bool",
            "defaultValue": true
        },
        "vmssName": {
            "type": "string"
        }
    },
    "resources": [
        {
            "sku": {
                "name": "Standard_LRS"
            },
            "location": "[resourceGroup().location]",
            "name": "[substring(parameters('gatewayStorageAccountDomain'), 0, indexOf(parameters('gatewayStorageAccountDomain'), '.'))]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01"
        },
        {
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'gateway-vnet', 'gateway-subnet')]"
                            }
                        },
                        "name": "gateway-frontend",
                        "zones": "[if(contains(parameters('nonZonalRegions'),toLower(replace(resourceGroup().location, ' ', ''))),'',pickZones('Microsoft.Network', 'publicIPAddresses', resourceGroup().location, 3))]"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "gateway-backend"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'gateway-lb-internal', 'gateway-frontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'gateway-lb-internal', 'gateway-backend')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'gateway-lb-internal', 'gateway-probe')]"
                            },
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "frontendPort": 443,
                            "backendPort": 443
                        },
                        "name": "gateway-lbrule-https"
                    },
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'gateway-lb-internal', 'gateway-frontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'gateway-lb-internal', 'gateway-backend')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'gateway-lb-internal', 'gateway-probe')]"
                            },
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "frontendPort": 80,
                            "backendPort": 80
                        },
                        "name": "gateway-lbrule-http"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "numberOfProbes": 2,
                            "requestPath": "/healthz/ready"
                        },
                        "name": "gateway-probe"
                    }
                ]
            },
            "name": "gateway-lb-internal",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01"
        },
        {
            "properties": {
                "loadBalancerFrontendIpConfigurations": [
                    {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'gateway-lb-internal', 'gateway-frontend')]"
                    }
                ],
                "ipConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'gateway-vnet', 'gateway-subnet')]"
                            }
                        },
                        "name": "gateway-pls-001-nic"
                    }
                ],
                "enableProxyProtocol": true
            },
            "name": "gateway-pls-001",
            "type": "Microsoft.Network/privateLinkServices",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01",
            "dependsOn": [
                "Microsoft.Network/loadBalancers/gateway-lb-internal"
            ]
        },
        {
            "sku": {
                "name": "[parameters('gatewayVmSize')]",
                "tier": "Standard",
                "capacity": "[parameters('gatewayVmssCapacity')]"
            },
            "properties": {
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "[concat('gateway-', parameters('vmssName'), '-')]",
                        "adminUsername": "cloud-user",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/cloud-user/.ssh/authorized_keys",
                                        "keyData": "[parameters('sshPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "RedHat",
                            "offer": "RHEL",
                            "sku": "8-LVM",
                            "version": "latest"
                        },
                        "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    },
                    "networkProfile": {
                        "healthProbe": {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'gateway-lb-internal', 'gateway-probe')]"
                        },
                        "networkInterfaceConfigurations": [
                            {
                                "name": "gateway-vmss-nic",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "ipConfigurations": [
                                        {
                                            "name": "gateway-vmss-ipconfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'gateway-vnet', 'gateway-subnet')]"
                                                },
                                                "primary": true,
                                                "publicIPAddressConfiguration": {
                                                    "name": "gateway-vmss-pip"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'gateway-lb-internal', 'gateway-backend')]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true,
                            "storageUri": "[concat('https://', parameters('gatewayStorageAccountDomain'), '/')]"
                        }
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "gateway-vmss-cse",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {},
                                    "protectedSettings": {
                                        "script": "[base64(concat(base64ToString('c2V0IC1leAoK'),'ACRRESOURCEID=$(base64 -d \u003c\u003c\u003c''',base64(parameters('acrResourceId')),''')\n','AZURECLOUDNAME=$(base64 -d \u003c\u003c\u003c''',base64(parameters('azureCloudName')),''')\n','AZURESECPACKQUALYSURL=$(base64 -d \u003c\u003c\u003c''',base64(parameters('azureSecPackQualysUrl')),''')\n','AZURESECPACKVSATENANTID=$(base64 -d \u003c\u003c\u003c''',base64(parameters('azureSecPackVSATenantId')),''')\n','DATABASEACCOUNTNAME=$(base64 -d \u003c\u003c\u003c''',base64(parameters('databaseAccountName')),''')\n','DBTOKENCLIENTID=$(base64 -d \u003c\u003c\u003c''',base64(parameters('dbtokenClientId')),''')\n','DBTOKENURL=$(base64 -d \u003c\u003c\u003c''',base64(parameters('dbtokenUrl')),''')\n','MDMFRONTENDURL=$(base64 -d \u003c\u003c\u003c''',base64(parameters('mdmFrontendUrl')),''')\n','MDSDENVIRONMENT=$(base64 -d \u003c\u003c\u003c''',base64(parameters('mdsdEnvironment')),''')\n','FLUENTBITIMAGE=$(base64 -d \u003c\u003c\u003c''',base64(parameters('fluentbitImage')),''')\n','GATEWAYMDSDCONFIGVERSION=$(base64 -d \u003c\u003c\u003c''',base64(parameters('gatewayMdsdConfigVersion')),''')\n','GATEWAYDOMAINS=$(base64 -d \u003c\u003c\u003c''',base64(parameters('gatewayDomains')),''')\n','GATEWAYFEATURES=$(base64 -d \u003c\u003c\u003c''',base64(parameters('gatewayFeatures')),''')\n','KEYVAULTDNSSUFFIX=$(base64 -d \u003c\u003c\u003c''',base64(parameters('keyvaultDNSSuffix')),''')\n','KEYVAULTPREFIX=$(base64 -d \u003c\u003c\u003c''',base64(parameters('keyvaultPrefix')),''')\n','RPIMAGE=$(base64 -d \u003c\u003c\u003c''',base64(parameters('rpImage')),''')\n','RPMDMACCOUNT=$(base64 -d \u003c\u003c\u003c''',base64(parameters('rpMdmAccount')),''')\n','RPMDSDACCOUNT=$(base64 -d \u003c\u003c\u003c''',base64(parameters('rpMdsdAccount')),''')\n','RPMDSDNAMESPACE=$(base64 -d \u003c\u003c\u003c''',base64(parameters('rpMdsdNamespace')),''')\n','MDMIMAGE=''/distroless/genevamdm:mariner_20221026.2''\n','LOCATION=$(base64 -d \u003c\u003c\u003c''',base64(resourceGroup().location),''')\n','SUBSCRIPTIONID=$(base64 -d \u003c\u003c\u003c''',base64(subscription().subscriptionId),''')\n','RESOURCEGROUPNAME=$(base64 -d \u003c\u003c\u003c''',base64(resourceGroup().name),''')\n','\n',base64ToString('')))]"
                                    }
                                }
                            }
                        ]
                    }
                },
                "overprovision": false
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', concat('aro-gateway-', resourceGroup().location))]": {}
                }
            },
            "name": "[concat('gateway-vmss-', parameters('vmssName'))]",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "location": "[resourceGroup().location]",
            "tags": {
                "SkipLinuxAzSecPack": "true"
            },
            "apiVersion": "2020-12-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', 'gateway-lb-internal')]",
                "[resourceId('Microsoft.Storage/storageAccounts', substring(parameters('gatewayStorageAccountDomain'), 0, indexOf(parameters('gatewayStorageAccountDomain'), '.')))]"
            ]
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId(parameters('rpResourceGroupName'), 'Microsoft.Network/virtualNetworks', 'rp-vnet')]"
                }
            },
            "name": "gateway-vnet/peering-rp-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-08-01",
            "location": "[resourceGroup().location]"
        },
        {
            "name": "[concat('gateway-pls-001', '/Microsoft.Authorization/', guid(resourceId('Microsoft.Network/privateLinkServices', 'gateway-pls-001'), parameters('rpServicePrincipalId'), '4d97b98b-1d4f-4787-a291-c67834d212e7'))]",
            "type": "Microsoft.Network/privateLinkServices/providers/roleAssignments",
            "properties": {
                "scope": "[resourceId('Microsoft.Network/privateLinkServices', 'gateway-pls-001')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                "principalId": "[parameters('rpServicePrincipalId')]",
                "principalType": "ServicePrincipal"
            },
            "apiVersion": "2018-09-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateLinkServices', 'gateway-pls-001')]"
            ]
        }
    ]
}
