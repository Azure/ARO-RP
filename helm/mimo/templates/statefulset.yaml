apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mimo.fullname" . }}
  labels:
    {{- include "mimo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mimo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        azure.workload.identity/use: "true"
        {{- include "mimo.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mimo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-mdm
          securityContext:
            {{- toYaml .Values.mdm.securityContext | nindent 12 }}
          {{- with .Values.mdm.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command:
            - /usr/sbin/MetricsExtension
          args: ["-CertFile", "$(MDM_CERTFILE)", "-FrontEndUrl", "$(MDM_FRONTENDURL)", "-Logger", "$(MDM_LOGGER)", "-LogLevel", "$(MDM_LOGLEVEL)", "-PrivateKeyFile", "$(MDM_PRIVATEKEYFILE)", "-SourceEnvironment", "$(MDM_SOURCEENVIRONMENT)", "-SourceRole", "$(MDM_SOURCEROLE)", "-SourceRoleInstance", "$(MDM_SOURCEROLEINSTANCE)"]
          image: "{{ .Values.mdm.image }}"
          volumeMounts:
            - name: statsd-socket
              mountPath: /var/run
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{ .Values.mimo.command }}
          args: {{ .Values.mimo.args }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: statsd-socket
              mountPath: /var/run
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: statsd-volume
          emptyDir: {}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.volumeClaimTemplates }}
      volumeClaimTemplates:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
