{
    "swagger": "2.0",
    "info": {
        "title": "Managed Identity Data Plane API",
        "description": "API for getting credentials from managed identity resource provider (MIRP). The endpoint and AzureResourceId are already included in the x-ms-identity-url header from ARM. The x-ms-identity-url header also defaults to the /credentials path. x-ms-identity-url and the system asisgned client_secret_url are interchangeable. The x-ms-identity-url header from ARM contains the client_secret_url by default. MIRP will return a client_secret_url per identity, client_secret_urls should be used to rotate each identity individually. Note the client_secret_url/x-ms-identity-url will come with query parameters included, you must take care to not remove these when adding the api-version. The authentication_endpoint field is provided for MSI Regional Isolation to avoid cross region calls. It will return you either Regional AAD authentication endpoint or global AAD authentication endpoint based on the Regional ESTS roll out status. Please follow the guidance https://microsoft.sharepoint.com/:w:/t/AzureMSI/EVMqSPAdF2RBrStIe6IcdmsBW58XEeOps3xo_knU3Zen0Q?e=EK7oCU",
        "version": "2024-01-01"
    },
    "host": "client_secret_url",
    "schemes": [
        "https"
    ],
    "paths": {
        "/": {
            "post": {
                "summary": "Get credentials for a resource.",
                "description": "A POST operation to retrieve system assigned and user assigned identity credentials for a given resource. Usable from both system assigned client_secret_url and user assigned client_secret_url.",
                "operationId": "getcreds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "credRequest",
                        "in": "body",
                        "required": true,
                        "description": "The identities requested.",
                        "schema": {
                            "$ref": "#/definitions/CredRequestDefinition"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "required": true,
                        "description": "The api version to use in the call. The caller must add this, it isn't included in the x-ms-identity-url header from ARM.",
                        "type": "string",
                        "enum": [
                            "2024-01-01"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CredentialsObject"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {
                            "WWW-Authenticate": {
                                "type": "string",
                                "description": "Auth challenge containing the expected token authority, similar to 'Bearer authorization=\"https://login.microsoftonline.com/72F988BF-86F1-41AF-91AB-2D7CD011DB47\"'."
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get credentials for a resource.",
                "description": "A GET operation to retrieve system or user assigned credentials for a given resource. The x-ms-identity-url header from ARM contains this path by default for system assigned identities. Usable from both system assigned client_secret_url or user assigned client_secret_url.",
                "operationId": "getcred",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "required": true,
                        "description": "The api version to use in the call. The caller must add this, it isn't included in the x-ms-identity-url header from ARM.",
                        "type": "string",
                        "enum": [
                            "2024-01-01"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CredentialsObject"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {
                            "WWW-Authenticate": {
                                "type": "string",
                                "description": "Auth challenge containing the expected token authority, similar to 'Bearer authorization=\"https://login.microsoftonline.com/72F988BF-86F1-41AF-91AB-2D7CD011DB47\"'."
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete system assigned identity for a proxy resource.",
                "description": "A DELETE operation to delete system assigned identity for a given proxy resource. The x-ms-identity-url header from ARM contains this path by default. This must be called by RPs only. Usable from only system assigned client_secret_url. User assigned client_secret_url does not support this operation.",
                "operationId": "deleteidentity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "required": true,
                        "description": "The api version to use in the call. The caller must add this, it isn't included in the x-ms-identity-url header from ARM.",
                        "type": "string",
                        "enum": [
                            "2024-01-01"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {
                            "WWW-Authenticate": {
                                "type": "string",
                                "description": "Auth challenge containing the expected token authority, similar to 'Bearer authorization=\"https://login.microsoftonline.com/72F988BF-86F1-41AF-91AB-2D7CD011DB47\"'."
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/proxy/move": {
            "post": {
                "summary": "Moving the proxy resource from one resource group to another resource group",
                "description": "A POST operation to move the proxy resource to a different resource group",
                "operationId": "moveidentity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "moveRequestBody",
                        "in": "body",
                        "required": true,
                        "description": "New target resource Id",
                        "schema": {
                            "$ref": "#/definitions/MoveRequestBodyDefinition"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "required": true,
                        "description": "The api version to use in the call. The caller must add this, it isn't included in the x-ms-identity-url header from ARM.",
                        "type": "string",
                        "enum": [
                            "2024-01-01"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/MoveIdentityResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {
                            "WWW-Authenticate": {
                                "type": "string",
                                "description": "Auth challenge containing the expected token authority, similar to 'Bearer authorization=\"https://login.microsoftonline.com/72F988BF-86F1-41AF-91AB-2D7CD011DB47\"'."
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "MoveRequestBodyDefinition": {
            "type": "object",
            "properties": {
                "targetResourceId": {
                    "type": "string",
                    "description": "New Resource Id of the resource that will be moved to."
                }
            }
        },
        "CustomClaims": {
            "type": "object",
            "description": "The custom claims to include into X509 Certificate",
            "properties": {
                "xms_az_tm": {
                    "type": "string",
                    "description": "The trust mode of the azure resource asserted by RP. The value can either be 'azureinfra' or 'user'"
                },
                "xms_az_nwperimid": {
                    "type":"array",
                    "description": "The list of network perimeter ids. Maximum 5 network perimeter ids are supported",
                    "items": {
                        "type": "string",
                        "description": "network perimeter id in guid format"
                    }
                }
            }
        },
        "CredRequestDefinition": {
            "type": "object",
            "properties": {
                "identityIds": {
                    "type": "array",
                    "description": "The identities to retrieve.",
                    "items": {
                        "type": "string",
                        "description": "Resource Id of the user assigned identity to retrieve."
                    }
                },
                "delegatedResources": {
                    "type": "array",
                    "description": "The source resource identities.",
                    "items": {
                        "type": "string",
                        "description": "Internal Id of the source resource to retrieve."
                    }
                },
                "customClaims": {
                    "$ref": "#/definitions/CustomClaims"
                }
            }
        },
        "MoveIdentityResponse": {
            "type": "object",
            "properties": {
                "identityUrl": {
                    "type": "string",
                    "description": "the new identity url of the resource."
                }
            }
        },
        "CredentialsObject": {
            "type": "object",
            "description": "A system assigned managed identity + user assigned managed identity array.",
            "properties": {
                "client_id": {
                    "type": "string",
                    "description": "The AAD client id for the system assigned identity."
                },
                "client_secret": {
                    "type": "string",
                    "description": "The base64 encoded private key X509 certificate for the system assigned identity, encrypted via AES256+SHA256."
                },
                "client_secret_url": {
                    "type": "string",
                    "description": "A refreshed version of the URL used to retrieve credentials for the system assigned identity."
                },
                "internal_id": {
                    "type": "string",
                    "description": "An internal identifier for the resource in managed identity RP."
                },
                "tenant_id": {
                    "type": "string",
                    "description": "The AAD tenant id for the system assigned identity."
                },
                "object_id": {
                    "type": "string",
                    "description": "The AAD object id for the system assigned identity."
                },
                "authentication_endpoint": {
                    "type": "string",
                    "description": "The AAD authentication endpoint for the identity system assigned identity. You can make token request toward this authentication endpoint."
                },
                "mtls_authentication_endpoint": {
                    "type": "string",
                    "description": "The AAD mTLS authentication endpoint for the system assigned identity. You can make a token request with a short-lived credential toward this authentication endpoint."
                },
                "not_before": {
                    "type": "string",
                    "description": "The time at which the system assigned credential becomes valid for retireving AAD tokens in the format 2017-03-01T14:11:00Z."
                },
                "not_after": {
                    "type": "string",
                    "description": "The time at which the system assigned credential becomes invalid for retireving AAD tokens in the format 2017-03-01T14:11:00Z."
                },
                "renew_after": {
                    "type": "string",
                    "description": "The time after which a call to the system assigned client_secret_url will return a new credential in the format 2017-03-01T14:11:00Z."
                },
                "cannot_renew_after": {
                    "type": "string",
                    "description": "The time after which the system assigned client_secret cannot be used to call client_secret_url for a refreshed credential in the formate 2017-03-01T14:11:00Z."
                },
                "explicit_identities": {
                    "type": "array",
                    "description": "The user assigned identities requested by the caller. This array will be empty for system assigned credential only requests.",
                    "items": {
                        "$ref": "#/definitions/NestedCredentialsObject"
                    }
                },
                "delegation_url": {
                    "type": "string",
                    "description": "URL to perform RP-to-RP delegation for non-ARM resources, requiring manual onboarding via MIRP team."
                },
                "delegated_resources": {
                    "type": "array",
                    "description": "The delegated resources' credentials requested by the caller.",
                    "items": {
                        "$ref": "#/definitions/DelegatedResourceObject"
                    }
                },
                "custom_claims": {
                    "$ref": "#/definitions/CustomClaims"
                }
            }
        },
        "DelegatedResourceObject": {
            "type": "object",
            "description": "A delegated resource credentials object",
            "properties": {
                "resource_id": {
                    "type": "string",
                    "description": "Source resource Azure resource id."
                },
                "delegation_id": {
                    "type": "string",
                    "description": "MIRP delegationRecord persistent id."
                },
                "delegation_url": {
                    "type": "string",
                    "description": "URL to perform RP-to-RP delegation for non-ARM resources, requiring manual onboarding via MIRP team."
                },
                "internal_id": {
                    "type": "string",
                    "description": "Source resource Azure resource internal id."
                },
                "implicit_identity": {
                    "$ref": "#/definitions/NestedCredentialsObject"
                },
                "explicit_identities": {
                    "type": "array",
                    "description": "The identities requested by the caller.",
                    "items": {
                        "$ref": "#/definitions/NestedCredentialsObject"
                    }
                }
            }
        },
        "NestedCredentialsObject": {
            "type": "object",
            "description": "A managed identity credentials object.",
            "properties": {
                "client_id": {
                    "type": "string",
                    "description": "The AAD client id for the user assigned identity."
                },
                "client_secret": {
                    "type": "string",
                    "description": "The base64 encoded private key X509 certificate for the user assigned identity, encrypted via AES256+SHA256."
                },
                "client_secret_url": {
                    "type": "string",
                    "description": "A refreshed version of the URL used to retrieve credentials for the user assigned identity."
                },
                "tenant_id": {
                    "type": "string",
                    "description": "The AAD tenant id for the user assigned identity."
                },
                "object_id": {
                    "type": "string",
                    "description": "The AAD object id for the user assigned identity."
                },
                "resource_id": {
                    "type": "string",
                    "description": "The ARM resource id for the user assigned identity."
                },
                "authentication_endpoint": {
                    "type": "string",
                    "description": "The AAD authentication endpoint for the user assigned identity. You can make token request toward this authentication endpoint."
                },
                "mtls_authentication_endpoint": {
                    "type": "string",
                    "description": "The AAD mTLS authentication endpoint for the system assigned identity. You can make a token request with a short-lived credential toward this authentication endpoint."
                },
                "not_before": {
                    "type": "string",
                    "description": "The time at which the user assigned credential becomes valid for retireving AAD tokens in the format 2017-03-01T14:11:00Z."
                },
                "not_after": {
                    "type": "string",
                    "description": "The time at which the user assigned credential becomes invalid for retireving AAD tokens in the format 2017-03-01T14:11:00Z."
                },
                "renew_after": {
                    "type": "string",
                    "description": "The time after which a call to the user assigned client_secret_url will return a new credential in the format 2017-03-01T14:11:00Z."
                },
                "cannot_renew_after": {
                    "type": "string",
                    "description": "The time after which the user assigned client_secret cannot be used to call client_secret_url for a refreshed credential in the formate 2017-03-01T14:11:00Z."
                },
                "custom_claims": {
                    "$ref": "#/definitions/CustomClaims"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string",
                            "description": "The error code."
                        },
                        "message": {
                            "type": "string",
                            "description": "A message describing the error."
                        }
                    }
                }
            }
        }
    }
}
