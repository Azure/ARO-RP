// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/api/console/v1alpha1"
)

// ConsolePluginProxyApplyConfiguration represents an declarative configuration of the ConsolePluginProxy type for use
// with apply.
type ConsolePluginProxyApplyConfiguration struct {
	Type          *v1alpha1.ConsolePluginProxyType                   `json:"type,omitempty"`
	Alias         *string                                            `json:"alias,omitempty"`
	Service       *ConsolePluginProxyServiceConfigApplyConfiguration `json:"service,omitempty"`
	CACertificate *string                                            `json:"caCertificate,omitempty"`
	Authorize     *bool                                              `json:"authorize,omitempty"`
}

// ConsolePluginProxyApplyConfiguration constructs an declarative configuration of the ConsolePluginProxy type for use with
// apply.
func ConsolePluginProxy() *ConsolePluginProxyApplyConfiguration {
	return &ConsolePluginProxyApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *ConsolePluginProxyApplyConfiguration) WithType(value v1alpha1.ConsolePluginProxyType) *ConsolePluginProxyApplyConfiguration {
	b.Type = &value
	return b
}

// WithAlias sets the Alias field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Alias field is set to the value of the last call.
func (b *ConsolePluginProxyApplyConfiguration) WithAlias(value string) *ConsolePluginProxyApplyConfiguration {
	b.Alias = &value
	return b
}

// WithService sets the Service field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Service field is set to the value of the last call.
func (b *ConsolePluginProxyApplyConfiguration) WithService(value *ConsolePluginProxyServiceConfigApplyConfiguration) *ConsolePluginProxyApplyConfiguration {
	b.Service = value
	return b
}

// WithCACertificate sets the CACertificate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CACertificate field is set to the value of the last call.
func (b *ConsolePluginProxyApplyConfiguration) WithCACertificate(value string) *ConsolePluginProxyApplyConfiguration {
	b.CACertificate = &value
	return b
}

// WithAuthorize sets the Authorize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Authorize field is set to the value of the last call.
func (b *ConsolePluginProxyApplyConfiguration) WithAuthorize(value bool) *ConsolePluginProxyApplyConfiguration {
	b.Authorize = &value
	return b
}
