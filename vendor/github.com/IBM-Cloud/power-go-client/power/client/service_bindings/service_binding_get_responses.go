// Code generated by go-swagger; DO NOT EDIT.

package service_bindings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// ServiceBindingGetReader is a Reader for the ServiceBindingGet structure.
type ServiceBindingGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceBindingGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServiceBindingGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewServiceBindingGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServiceBindingGetOK creates a ServiceBindingGetOK with default headers values
func NewServiceBindingGetOK() *ServiceBindingGetOK {
	return &ServiceBindingGetOK{}
}

/* ServiceBindingGetOK describes a response with status code 200, with default header values.

OK
*/
type ServiceBindingGetOK struct {
	Payload *models.ServiceBindingResource
}

func (o *ServiceBindingGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBindingGetOK  %+v", 200, o.Payload)
}
func (o *ServiceBindingGetOK) GetPayload() *models.ServiceBindingResource {
	return o.Payload
}

func (o *ServiceBindingGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceBindingResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBindingGetNotFound creates a ServiceBindingGetNotFound with default headers values
func NewServiceBindingGetNotFound() *ServiceBindingGetNotFound {
	return &ServiceBindingGetNotFound{}
}

/* ServiceBindingGetNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ServiceBindingGetNotFound struct {
	Payload *models.Error
}

func (o *ServiceBindingGetNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBindingGetNotFound  %+v", 404, o.Payload)
}
func (o *ServiceBindingGetNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBindingGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
