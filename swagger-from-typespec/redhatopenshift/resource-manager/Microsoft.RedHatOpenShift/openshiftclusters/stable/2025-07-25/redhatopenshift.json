{
  "swagger": "2.0",
  "info": {
    "title": "Azure Red Hat OpenShift",
    "version": "2025-07-25",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "OpenShiftClusters"
    },
    {
      "name": "OpenShiftVersions"
    },
    {
      "name": "PlatformWorkloadIdentityRoleSets"
    }
  ],
  "paths": {
    "/providers/Microsoft.RedHatOpenShift/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists all of the available RP operations.": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/locations/{location}/openShiftVersions": {
      "get": {
        "operationId": "OpenShiftVersions_List",
        "tags": [
          "OpenShiftVersions"
        ],
        "summary": "Lists all OpenShift versions available to install in the specified location.",
        "description": "The operation returns the installable OpenShift versions as a string.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OpenShiftVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists all OpenShift versions available to install in the specified location.": {
            "$ref": "./examples/OpenShiftVersions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/locations/{location}/openShiftVersions/{openShiftVersion}": {
      "get": {
        "operationId": "OpenShiftVersions_Get",
        "tags": [
          "OpenShiftVersions"
        ],
        "summary": "Gets an available OpenShift version to install in the specified location.",
        "description": "This operation returns installable OpenShift version as a string.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          },
          {
            "name": "openShiftVersion",
            "in": "path",
            "description": "The desired version value of the OpenShiftVersion resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^(\\d+)\\.(\\d+)\\.(\\d+)(.*)"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OpenShiftVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets an available OpenShift version to install in the specified location.": {
            "$ref": "./examples/OpenShiftVersions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/locations/{location}/platformWorkloadIdentityRoleSets": {
      "get": {
        "operationId": "PlatformWorkloadIdentityRoleSets_List",
        "tags": [
          "PlatformWorkloadIdentityRoleSets"
        ],
        "summary": "Lists a mapping of OpenShift versions to identity requirements, which include operatorName, roleDefinitionName, roleDefinitionId, and serviceAccounts.",
        "description": "This operation returns a list of Platform Workload Identity Role Sets as a string",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlatformWorkloadIdentityRoleSetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists a mapping of OpenShift versions to identity requirements, which include operatorName, roleDefinitionName, roleDefinitionId, and serviceAccounts.": {
            "$ref": "./examples/PlatformWorkloadIdentityRoleSets_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/locations/{location}/platformWorkloadIdentityRoleSets/{openShiftMinorVersion}": {
      "get": {
        "operationId": "PlatformWorkloadIdentityRoleSets_Get",
        "tags": [
          "PlatformWorkloadIdentityRoleSets"
        ],
        "summary": "Gets a mapping of an OpenShift version to identity requirements, which includes operatorName, roleDefinitionName, roleDefinitionId, and serviceAccounts.",
        "description": "This operation returns Platform Workload Identity Role Set as a string",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          },
          {
            "name": "openShiftMinorVersion",
            "in": "path",
            "description": "The desired version value of the PlatformWorkloadIdentityRoleSet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^(\\d+)\\.(\\d+)"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlatformWorkloadIdentityRoleSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a mapping of an OpenShift version to identity requirements, which includes operatorName, roleDefinitionName, roleDefinitionId, and serviceAccounts.": {
            "$ref": "./examples/PlatformWorkloadIdentityRoleSet_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/openShiftClusters": {
      "get": {
        "operationId": "OpenShiftClusters_ListBySubscription",
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Lists OpenShift clusters in the specified subscription.",
        "description": "The operation returns properties of each OpenShift cluster.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OpenShiftClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists OpenShift clusters in the specified subscription.": {
            "$ref": "./examples/OpenShiftClusters_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters": {
      "get": {
        "operationId": "OpenShiftClusters_ListByResourceGroup",
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Lists OpenShift clusters in the specified subscription and resource group.",
        "description": "The operation returns properties of each OpenShift cluster.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OpenShiftClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists OpenShift clusters in the specified subscription and resource group.": {
            "$ref": "./examples/OpenShiftClusters_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters/{resourceName}": {
      "get": {
        "operationId": "OpenShiftClusters_Get",
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Gets a OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns properties of a OpenShift cluster.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OpenShiftCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_Get.json"
          }
        }
      },
      "put": {
        "operationId": "OpenShiftClusters_CreateOrUpdate",
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Creates or updates a OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns properties of a OpenShift cluster.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenShiftCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'OpenShiftCluster' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/OpenShiftCluster"
            }
          },
          "201": {
            "description": "Resource 'OpenShiftCluster' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/OpenShiftCluster"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates a OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "OpenShiftClusters_Update",
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Creates or updates a OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns properties of a OpenShift cluster.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenShiftClusterUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OpenShiftCluster"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates a OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "OpenShiftClusters_Delete",
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Deletes a OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns nothing.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes a OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters/{resourceName}/listAdminCredentials": {
      "post": {
        "operationId": "OpenShiftClusters_ListAdminCredentials",
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Lists admin kubeconfig of an OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns the admin kubeconfig.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OpenShiftClusterAdminKubeconfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists admin kubeconfig of an OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_ListAdminCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters/{resourceName}/listCredentials": {
      "post": {
        "operationId": "OpenShiftClusters_ListCredentials",
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Lists credentials of an OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns the credentials.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OpenShiftClusterCredentials"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists credentials of an OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_ListCredentials.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiServerProfile": {
      "type": "object",
      "description": "APIServerProfile represents an API server profile.",
      "properties": {
        "visibility": {
          "$ref": "#/definitions/Visibility",
          "description": "API server visibility."
        },
        "url": {
          "type": "string",
          "description": "The URL to access the cluster API server."
        },
        "ip": {
          "type": "string",
          "description": "The IP of the cluster API server."
        }
      },
      "required": [
        "visibility",
        "url",
        "ip"
      ]
    },
    "ApiServerProfileUpdate": {
      "type": "object",
      "description": "APIServerProfile represents an API server profile.",
      "properties": {
        "visibility": {
          "$ref": "#/definitions/Visibility",
          "description": "API server visibility."
        },
        "url": {
          "type": "string",
          "description": "The URL to access the cluster API server."
        },
        "ip": {
          "type": "string",
          "description": "The IP of the cluster API server."
        }
      }
    },
    "Azure.ResourceManager.CommonTypes.ManagedServiceIdentityUpdate": {
      "type": "object",
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "$ref": "../../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentityType",
          "description": "The type of managed identity assigned to this resource."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The identities assigned to this resource by the user.",
          "additionalProperties": {
            "$ref": "../../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/UserAssignedIdentity",
            "x-nullable": true
          }
        }
      }
    },
    "Azure.ResourceManager.CommonTypes.TrackedResourceUpdate": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "ClusterProfile": {
      "type": "object",
      "description": "ClusterProfile represents a cluster profile.",
      "properties": {
        "pullSecret": {
          "type": "string",
          "description": "The pull secret for the cluster."
        },
        "domain": {
          "type": "string",
          "description": "The domain for the cluster."
        },
        "version": {
          "type": "string",
          "description": "The version of the cluster."
        },
        "resourceGroupId": {
          "type": "string",
          "description": "The ID of the cluster resource group."
        },
        "fipsValidatedModules": {
          "$ref": "#/definitions/FipsValidatedModules",
          "description": "If FIPS validated crypto modules are used"
        },
        "oidcIssuer": {
          "$ref": "#/definitions/OIDCIssuer",
          "description": "The URL of the managed OIDC issuer in a workload identity cluster"
        }
      },
      "required": [
        "pullSecret",
        "domain",
        "version",
        "resourceGroupId",
        "fipsValidatedModules",
        "oidcIssuer"
      ]
    },
    "ClusterProfileUpdate": {
      "type": "object",
      "description": "ClusterProfile represents a cluster profile.",
      "properties": {
        "pullSecret": {
          "type": "string",
          "description": "The pull secret for the cluster."
        },
        "domain": {
          "type": "string",
          "description": "The domain for the cluster."
        },
        "version": {
          "type": "string",
          "description": "The version of the cluster."
        },
        "resourceGroupId": {
          "type": "string",
          "description": "The ID of the cluster resource group."
        },
        "fipsValidatedModules": {
          "$ref": "#/definitions/FipsValidatedModules",
          "description": "If FIPS validated crypto modules are used"
        },
        "oidcIssuer": {
          "$ref": "#/definitions/OIDCIssuer",
          "description": "The URL of the managed OIDC issuer in a workload identity cluster"
        }
      }
    },
    "ConsoleProfile": {
      "type": "object",
      "description": "ConsoleProfile represents a console profile.",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL to access the cluster console."
        }
      },
      "required": [
        "url"
      ]
    },
    "ConsoleProfileUpdate": {
      "type": "object",
      "description": "ConsoleProfile represents a console profile.",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL to access the cluster console."
        }
      }
    },
    "EffectiveOutboundIP": {
      "type": "object",
      "description": "EffectiveOutboundIP represents an effective outbound IP addresses of the cluster public load balancer.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The fully qualified Azure resource id of an IP address resource."
        }
      },
      "required": [
        "id"
      ]
    },
    "EncryptionAtHost": {
      "type": "string",
      "description": "EncryptionAtHost represents encryption at host state",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EncryptionAtHost",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Encryption at host is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Encryption at host is disabled"
          }
        ]
      }
    },
    "FipsValidatedModules": {
      "type": "string",
      "description": "FIPSValidatedModules determines if FIPS is used.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "FipsValidatedModules",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "FIPS validated modules are used"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "FIPS validated modules are not used"
          }
        ]
      }
    },
    "IngressProfile": {
      "type": "object",
      "description": "IngressProfile represents an ingress profile.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ingress profile name."
        },
        "visibility": {
          "$ref": "#/definitions/Visibility",
          "description": "Ingress visibility."
        },
        "ip": {
          "type": "string",
          "description": "The IP of the cluster ingress."
        }
      },
      "required": [
        "name",
        "visibility",
        "ip"
      ]
    },
    "LoadBalancerProfile": {
      "type": "object",
      "description": "LoadBalancerProfile represents the profile of the cluster public load balancer.",
      "properties": {
        "managedOutboundIps": {
          "$ref": "#/definitions/ManagedOutboundIps",
          "description": "The desired managed outbound IPs for the cluster public load balancer."
        },
        "effectiveOutboundIps": {
          "type": "array",
          "description": "The list of effective outbound IP addresses of the public load balancer.",
          "items": {
            "$ref": "#/definitions/EffectiveOutboundIP"
          }
        }
      },
      "required": [
        "managedOutboundIps",
        "effectiveOutboundIps"
      ]
    },
    "LoadBalancerProfileUpdate": {
      "type": "object",
      "description": "LoadBalancerProfile represents the profile of the cluster public load balancer.",
      "properties": {
        "managedOutboundIps": {
          "$ref": "#/definitions/ManagedOutboundIpsUpdate",
          "description": "The desired managed outbound IPs for the cluster public load balancer."
        },
        "effectiveOutboundIps": {
          "type": "array",
          "description": "The list of effective outbound IP addresses of the public load balancer.",
          "items": {
            "$ref": "#/definitions/EffectiveOutboundIP"
          }
        }
      }
    },
    "ManagedOutboundIps": {
      "type": "object",
      "description": "ManagedOutboundIPs represents the desired managed outbound IPs for the cluster public load balancer.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.  Allowed values are in the range of 1 - 20.  The default value is 1."
        }
      },
      "required": [
        "count"
      ]
    },
    "ManagedOutboundIpsUpdate": {
      "type": "object",
      "description": "ManagedOutboundIPs represents the desired managed outbound IPs for the cluster public load balancer.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.  Allowed values are in the range of 1 - 20.  The default value is 1."
        }
      }
    },
    "MasterProfile": {
      "type": "object",
      "description": "MasterProfile represents a master profile.",
      "properties": {
        "vmSize": {
          "$ref": "#/definitions/VMSize",
          "description": "The size of the master VMs."
        },
        "subnetId": {
          "type": "string",
          "description": "The Azure resource ID of the master subnet."
        },
        "encryptionAtHost": {
          "$ref": "#/definitions/EncryptionAtHost",
          "description": "Whether master virtual machines are encrypted at host."
        },
        "diskEncryptionSetId": {
          "type": "string",
          "description": "The resource ID of an associated DiskEncryptionSet, if applicable."
        }
      },
      "required": [
        "vmSize",
        "subnetId",
        "encryptionAtHost",
        "diskEncryptionSetId"
      ]
    },
    "MasterProfileUpdate": {
      "type": "object",
      "description": "MasterProfile represents a master profile.",
      "properties": {
        "vmSize": {
          "$ref": "#/definitions/VMSize",
          "description": "The size of the master VMs."
        },
        "subnetId": {
          "type": "string",
          "description": "The Azure resource ID of the master subnet."
        },
        "encryptionAtHost": {
          "$ref": "#/definitions/EncryptionAtHost",
          "description": "Whether master virtual machines are encrypted at host."
        },
        "diskEncryptionSetId": {
          "type": "string",
          "description": "The resource ID of an associated DiskEncryptionSet, if applicable."
        }
      }
    },
    "NetworkProfile": {
      "type": "object",
      "description": "NetworkProfile represents a network profile.",
      "properties": {
        "podCidr": {
          "type": "string",
          "description": "The CIDR used for OpenShift/Kubernetes Pods."
        },
        "serviceCidr": {
          "type": "string",
          "description": "The CIDR used for OpenShift/Kubernetes Services."
        },
        "outboundType": {
          "$ref": "#/definitions/OutboundType",
          "description": "The OutboundType used for egress traffic."
        },
        "loadBalancerProfile": {
          "$ref": "#/definitions/LoadBalancerProfile",
          "description": "The cluster load balancer profile."
        },
        "preconfiguredNSG": {
          "$ref": "#/definitions/PreconfiguredNSG",
          "description": "Specifies whether subnets are pre-attached with an NSG"
        }
      },
      "required": [
        "podCidr",
        "serviceCidr",
        "outboundType",
        "loadBalancerProfile",
        "preconfiguredNSG"
      ]
    },
    "NetworkProfileUpdate": {
      "type": "object",
      "description": "NetworkProfile represents a network profile.",
      "properties": {
        "podCidr": {
          "type": "string",
          "description": "The CIDR used for OpenShift/Kubernetes Pods."
        },
        "serviceCidr": {
          "type": "string",
          "description": "The CIDR used for OpenShift/Kubernetes Services."
        },
        "outboundType": {
          "$ref": "#/definitions/OutboundType",
          "description": "The OutboundType used for egress traffic."
        },
        "loadBalancerProfile": {
          "$ref": "#/definitions/LoadBalancerProfileUpdate",
          "description": "The cluster load balancer profile."
        },
        "preconfiguredNSG": {
          "$ref": "#/definitions/PreconfiguredNSG",
          "description": "Specifies whether subnets are pre-attached with an NSG"
        }
      }
    },
    "OIDCIssuer": {
      "type": "string"
    },
    "OpenShiftCluster": {
      "type": "object",
      "description": "OpenShiftCluster represents an Azure Red Hat OpenShift cluster.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OpenShiftClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "OpenShiftClusterAdminKubeconfig": {
      "type": "object",
      "description": "OpenShiftClusterAdminKubeconfig represents an OpenShift cluster's admin kubeconfig.",
      "properties": {
        "kubeconfig": {
          "type": "string",
          "format": "password",
          "description": "The base64-encoded kubeconfig file.",
          "x-ms-secret": true
        }
      },
      "required": [
        "kubeconfig"
      ]
    },
    "OpenShiftClusterCredentials": {
      "type": "object",
      "description": "OpenShiftClusterCredentials represents an OpenShift cluster's credentials.",
      "properties": {
        "kubeadminUsername": {
          "type": "string",
          "description": "The username for the kubeadmin user."
        },
        "kubeadminPassword": {
          "type": "string",
          "format": "password",
          "description": "The password for the kubeadmin user.",
          "x-ms-secret": true
        }
      },
      "required": [
        "kubeadminUsername",
        "kubeadminPassword"
      ]
    },
    "OpenShiftClusterListResult": {
      "type": "object",
      "description": "The response of a OpenShiftCluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OpenShiftCluster items on this page",
          "items": {
            "$ref": "#/definitions/OpenShiftCluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OpenShiftClusterProperties": {
      "type": "object",
      "description": "OpenShiftClusterProperties represents an OpenShift cluster's properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The cluster provisioning state.",
          "readOnly": true
        },
        "clusterProfile": {
          "$ref": "#/definitions/ClusterProfile",
          "description": "The cluster profile."
        },
        "consoleProfile": {
          "$ref": "#/definitions/ConsoleProfile",
          "description": "The console profile."
        },
        "servicePrincipalProfile": {
          "$ref": "#/definitions/ServicePrincipalProfile",
          "description": "The cluster service principal profile."
        },
        "platformWorkloadIdentityProfile": {
          "$ref": "#/definitions/PlatformWorkloadIdentityProfile",
          "description": "The workload identity profile."
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "The cluster network profile."
        },
        "masterProfile": {
          "$ref": "#/definitions/MasterProfile",
          "description": "The cluster master profile."
        },
        "workerProfiles": {
          "type": "array",
          "description": "The cluster worker profiles.",
          "items": {
            "$ref": "#/definitions/WorkerProfile"
          },
          "x-ms-identifiers": []
        },
        "workerProfilesStatus": {
          "type": "array",
          "description": "The cluster worker profiles status.",
          "items": {
            "$ref": "#/definitions/WorkerProfile"
          },
          "x-ms-identifiers": []
        },
        "apiserverProfile": {
          "$ref": "#/definitions/ApiServerProfile",
          "description": "The cluster API server profile."
        },
        "ingressProfiles": {
          "type": "array",
          "description": "The cluster ingress profiles.",
          "items": {
            "$ref": "#/definitions/IngressProfile"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "clusterProfile",
        "consoleProfile",
        "servicePrincipalProfile",
        "platformWorkloadIdentityProfile",
        "networkProfile",
        "masterProfile",
        "workerProfiles",
        "workerProfilesStatus",
        "apiserverProfile",
        "ingressProfiles"
      ]
    },
    "OpenShiftClusterPropertiesUpdate": {
      "type": "object",
      "description": "OpenShiftClusterProperties represents an OpenShift cluster's properties.",
      "properties": {
        "clusterProfile": {
          "$ref": "#/definitions/ClusterProfileUpdate",
          "description": "The cluster profile."
        },
        "consoleProfile": {
          "$ref": "#/definitions/ConsoleProfileUpdate",
          "description": "The console profile."
        },
        "servicePrincipalProfile": {
          "$ref": "#/definitions/ServicePrincipalProfileUpdate",
          "description": "The cluster service principal profile."
        },
        "platformWorkloadIdentityProfile": {
          "$ref": "#/definitions/PlatformWorkloadIdentityProfileUpdate",
          "description": "The workload identity profile."
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfileUpdate",
          "description": "The cluster network profile."
        },
        "masterProfile": {
          "$ref": "#/definitions/MasterProfileUpdate",
          "description": "The cluster master profile."
        },
        "workerProfiles": {
          "type": "array",
          "description": "The cluster worker profiles.",
          "items": {
            "$ref": "#/definitions/WorkerProfile"
          },
          "x-ms-identifiers": []
        },
        "workerProfilesStatus": {
          "type": "array",
          "description": "The cluster worker profiles status.",
          "items": {
            "$ref": "#/definitions/WorkerProfile"
          },
          "x-ms-identifiers": []
        },
        "apiserverProfile": {
          "$ref": "#/definitions/ApiServerProfileUpdate",
          "description": "The cluster API server profile."
        },
        "ingressProfiles": {
          "type": "array",
          "description": "The cluster ingress profiles.",
          "items": {
            "$ref": "#/definitions/IngressProfile"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OpenShiftClusterUpdate": {
      "type": "object",
      "description": "OpenShiftCluster represents an Azure Red Hat OpenShift cluster.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OpenShiftClusterPropertiesUpdate",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ManagedServiceIdentityUpdate",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.TrackedResourceUpdate"
        }
      ]
    },
    "OpenShiftVersion": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OpenShiftVersionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OpenShiftVersionListResult": {
      "type": "object",
      "description": "The response of a OpenShiftVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OpenShiftVersion items on this page",
          "items": {
            "$ref": "#/definitions/OpenShiftVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OpenShiftVersionProperties": {
      "type": "object",
      "description": "OpenShiftVersionProperties represents the properties of an OpenShiftVersion.",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version represents the version to create the cluster at."
        }
      },
      "required": [
        "version"
      ]
    },
    "OutboundType": {
      "type": "string",
      "description": "The outbound routing strategy used to provide your cluster egress to the internet.",
      "enum": [
        "LoadBalancer",
        "UserDefinedRouting"
      ],
      "x-ms-enum": {
        "name": "OutboundType",
        "modelAsString": true,
        "values": [
          {
            "name": "LoadBalancer",
            "value": "LoadBalancer",
            "description": "The cluster uses the standard Azure LoadBalancer for egress traffic."
          },
          {
            "name": "UserDefinedRouting",
            "value": "UserDefinedRouting",
            "description": "The cluster uses the UserDefinedRouting for egress traffic."
          }
        ]
      }
    },
    "PlatformWorkloadIdentity": {
      "type": "object",
      "description": "PlatformWorkloadIdentity stores information representing a single workload identity.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource ID of the PlatformWorkloadIdentity resource"
        },
        "clientId": {
          "type": "string",
          "description": "The ClientID of the PlatformWorkloadIdentity resource"
        },
        "objectId": {
          "type": "string",
          "description": "The ObjectID of the PlatformWorkloadIdentity resource"
        }
      },
      "required": [
        "resourceId",
        "clientId",
        "objectId"
      ]
    },
    "PlatformWorkloadIdentityProfile": {
      "type": "object",
      "description": "PlatformWorkloadIdentityProfile encapsulates all information that is specific to workload identity clusters.",
      "properties": {
        "upgradeableTo": {
          "$ref": "#/definitions/UpgradeableTo",
          "description": "The cluster version that platform workload identities should be compatible with."
        },
        "platformWorkloadIdentities": {
          "type": "object",
          "description": "The platform workload identities associated with the cluster.",
          "additionalProperties": {
            "$ref": "#/definitions/PlatformWorkloadIdentity"
          }
        }
      },
      "required": [
        "upgradeableTo",
        "platformWorkloadIdentities"
      ]
    },
    "PlatformWorkloadIdentityProfileUpdate": {
      "type": "object",
      "description": "PlatformWorkloadIdentityProfile encapsulates all information that is specific to workload identity clusters.",
      "properties": {
        "upgradeableTo": {
          "$ref": "#/definitions/UpgradeableTo",
          "description": "The cluster version that platform workload identities should be compatible with."
        },
        "platformWorkloadIdentities": {
          "type": "object",
          "description": "The platform workload identities associated with the cluster.",
          "additionalProperties": {
            "$ref": "#/definitions/PlatformWorkloadIdentityUpdate"
          }
        }
      }
    },
    "PlatformWorkloadIdentityRole": {
      "type": "object",
      "description": "PlatformWorkloadIdentityRole represents a mapping from a particular OCP operator to the built-in role that should be assigned to that operator's corresponding managed identity.",
      "properties": {
        "operatorName": {
          "type": "string",
          "description": "OperatorName represents the name of the operator that this role is for."
        },
        "roleDefinitionName": {
          "type": "string",
          "description": "RoleDefinitionName represents the name of the role."
        },
        "roleDefinitionId": {
          "type": "string",
          "description": "RoleDefinitionID represents the resource ID of the role definition."
        }
      },
      "required": [
        "operatorName",
        "roleDefinitionName",
        "roleDefinitionId"
      ]
    },
    "PlatformWorkloadIdentityRoleSet": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlatformWorkloadIdentityRoleSetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PlatformWorkloadIdentityRoleSetListResult": {
      "type": "object",
      "description": "The response of a PlatformWorkloadIdentityRoleSet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PlatformWorkloadIdentityRoleSet items on this page",
          "items": {
            "$ref": "#/definitions/PlatformWorkloadIdentityRoleSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PlatformWorkloadIdentityRoleSetProperties": {
      "type": "object",
      "description": "PlatformWorkloadIdentityRoleSetProperties represents the properties of an PlatformWorkloadIdentityRoleSet.",
      "properties": {
        "openShiftVersion": {
          "type": "string",
          "description": "OpenShiftVersion represents the version associated with this set of roles."
        },
        "platformWorkloadIdentityRoles": {
          "type": "array",
          "description": "PlatformWorkloadIdentityRoles represents the set of roles associated with this version.",
          "items": {
            "$ref": "#/definitions/PlatformWorkloadIdentityRole"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "openShiftVersion",
        "platformWorkloadIdentityRoles"
      ]
    },
    "PlatformWorkloadIdentityUpdate": {
      "type": "object",
      "description": "PlatformWorkloadIdentity stores information representing a single workload identity.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource ID of the PlatformWorkloadIdentity resource"
        },
        "clientId": {
          "type": "string",
          "description": "The ClientID of the PlatformWorkloadIdentity resource"
        },
        "objectId": {
          "type": "string",
          "description": "The ObjectID of the PlatformWorkloadIdentity resource"
        }
      }
    },
    "PreconfiguredNSG": {
      "type": "string",
      "description": "PreconfiguredNSG represents whether customers want to use their own NSG attached to the subnets",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PreconfiguredNSG",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "The cluster uses an existing NSG for egress traffic."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "The cluster uses the service-provided NSG for egress traffic."
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "ProvisioningState represents a provisioning state.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Updating",
        "AdminUpdating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Non-terminal state indicating the resource is creating"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Non-terminal state indicating the resource is updating"
          },
          {
            "name": "AdminUpdating",
            "value": "AdminUpdating",
            "description": "Non-terminal state indicating the resource is admin updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Non-terminal state indicating the resource is deleting"
          }
        ]
      },
      "readOnly": true
    },
    "ServicePrincipalProfile": {
      "type": "object",
      "description": "ServicePrincipalProfile represents a service principal profile.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The client ID used for the cluster."
        },
        "clientSecret": {
          "type": "string",
          "description": "The client secret used for the cluster."
        }
      },
      "required": [
        "clientId",
        "clientSecret"
      ]
    },
    "ServicePrincipalProfileUpdate": {
      "type": "object",
      "description": "ServicePrincipalProfile represents a service principal profile.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The client ID used for the cluster."
        },
        "clientSecret": {
          "type": "string",
          "description": "The client secret used for the cluster."
        }
      }
    },
    "UpgradeableTo": {
      "type": "string",
      "description": "UpgradeableTo stores a single OpenShift version a workload identity cluster can be upgraded"
    },
    "VMSize": {
      "type": "string",
      "description": "VM size availability varies by region.\nIf a node contains insufficient compute resources (memory, cpu, etc.), pods might fail to run correctly.\nFor more details on restricted VM sizes, see: https://docs.microsoft.com/en-us/azure/openshift/support-policies-v4#supported-virtual-machine-sizes"
    },
    "Visibility": {
      "type": "string",
      "description": "Visibility represents visibility.",
      "enum": [
        "Public",
        "Private"
      ],
      "x-ms-enum": {
        "name": "Visibility",
        "modelAsString": true,
        "values": [
          {
            "name": "Public",
            "value": "Public",
            "description": "The ingress or apiserver is public."
          },
          {
            "name": "Private",
            "value": "Private",
            "description": "The ingress or apiserver is private."
          }
        ]
      }
    },
    "WorkerProfile": {
      "type": "object",
      "description": "WorkerProfile represents a worker profile.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The worker profile name."
        },
        "vmSize": {
          "$ref": "#/definitions/VMSize",
          "description": "The size of the worker VMs."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "The disk size of the worker VMs."
        },
        "subnetId": {
          "type": "string",
          "description": "The Azure resource ID of the worker subnet."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of worker VMs."
        },
        "encryptionAtHost": {
          "$ref": "#/definitions/EncryptionAtHost",
          "description": "Whether worker virtual machines are encrypted at host."
        },
        "diskEncryptionSetId": {
          "type": "string",
          "description": "The resource ID of an associated DiskEncryptionSet, if applicable."
        }
      },
      "required": [
        "name",
        "vmSize",
        "diskSizeGB",
        "subnetId",
        "count",
        "encryptionAtHost",
        "diskEncryptionSetId"
      ]
    }
  },
  "parameters": {}
}
