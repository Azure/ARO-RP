{"version":3,"sources":["SSHModal.tsx","Request.tsx","Kubeconfig.tsx","ClusterList.tsx","App.tsx","index.tsx"],"names":["cancelIcon","iconName","copyIcon","machineOptions","key","text","theme","getTheme","contentStyles","mergeStyleSets","container","display","flexFlow","alignItems","header","flex","borderTop","palette","themePrimary","color","neutralPrimary","fontSize","FontSizes","xLargePlus","fontWeight","FontWeights","semibold","padding","body","overflowY","selectors","margin","marginTop","marginBottom","iconButtonStyles","root","marginLeft","marginRight","rootHovered","neutralDark","SSHModal","forwardRef","ref","csrfToken","useBoolean","isModalOpen","showModal","setTrue","hideModal","setFalse","titleId","useId","update","requestSSH","sshRequested","useState","resourceID","setResourceID","machineName","setMachineName","requestable","setRequestable","setUnrequestable","data","setData","error","setError","useImperativeHandle","LoadSSH","item","useEffect","a","axios","method","url","master","headers","current","result","response","fetchData","onChange","event","option","Modal","titleAriaId","isOpen","onDismiss","isModeless","containerClassName","className","id","IconButton","styles","iconProps","ariaLabel","onClick","href","MessageBar","messageBarType","MessageBarType","isMultiline","dismissButtonAriaLabel","statusText","Stack","horizontal","verticalAlign","Item","grow","TextField","label","value","command","readOnly","_","navigator","clipboard","writeText","password","type","canRevealPassword","tokens","childrenGap","Dropdown","options","PrimaryButton","disabled","OnError","err","status","document","location","FetchClusters","FetchInfo","ProcessLogOut","console","log","RequestKubeconfig","clusterID","KubeconfigButton","name","content","fetching","setFetching","buttonRef","useRef","then","blob","Blob","request","fileDownloadUrl","URL","createObjectURL","filename","parseContentDisposition","parameters","useLayoutEffect","download","click","revokeObjectURL","TooltipHost","aria-label","style","errorBarStyles","classNames","controlWrapper","flexWrap","fullWidth","width","fileIconImg","maxHeight","maxWidth","headerIcon","height","paddingTop","iconContainer","controlButtonContainer","paddingLeft","titleText","lineHeight","subtitleText","itemsCount","controlStyles","separatorStyle","clusterListDetailStyles","headerWrapper","ClusterListControl","props","_sshModal","_onChangeText","ev","setState","items","filter","i","toLowerCase","indexOf","_onColumnClick","column","state","columns","newColumns","slice","currColumn","currCol","forEach","newCol","isSortedDescending","isSorted","sshModalRef","fieldName","minWidth","isRowHeader","isPadded","onRender","src","alt","isResizable","sortAscendingAriaLabel","sortDescendingAriaLabel","onColumnClick","_onSSHClick","modalOpen","this","placeholder","Text","length","DetailsList","selectionMode","SelectionMode","none","getKey","_getKey","setKey","layoutMode","DetailsListLayoutMode","justified","isHeaderVisible","onItemInvoked","_onItemInvoked","index","modal","alert","Component","ClusterList","updateData","newData","loaded","_items","CommandBar","Separator","sshBox","containerStackTokens","appStackTokens","stackStyles","headerTextStyles","contentStackStyles","stackNavStyles","MenuButtonStyles","icon","DefaultPalette","white","darkTheme","semanticColors","bodyBackground","bodyText","navPanelStyles","navigation","justifyContent","App","csrf","elevated","username","openPanel","dismissPanel","sshRef","csrfRef","onRenderNavigationContent","useCallback","defaultRender","horizontalAlign","Panel","isLightDismiss","PanelType","smallFixedNear","closeButtonAriaLabel","ThemeProvider","hidden","Icon","initializeIcons","mergeStyles","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a1e4906a.chunk.js","sourcesContent":["import {useId, useBoolean} from \"@fluentui/react-hooks\"\nimport {\n  Modal,\n  getTheme,\n  mergeStyleSets,\n  FontWeights,\n  IIconProps,\n  Dropdown,\n  IDropdownOption,\n  TextField,\n  MessageBar,\n  MessageBarType,\n  Stack,\n  FontSizes,\n} from \"@fluentui/react\"\nimport {PrimaryButton, IconButton} from \"@fluentui/react/lib/Button\"\nimport axios, {AxiosResponse} from \"axios\"\nimport React, {useState, useImperativeHandle, useEffect, forwardRef, MutableRefObject} from \"react\"\n\nconst cancelIcon: IIconProps = {iconName: \"Cancel\"}\nconst copyIcon: IIconProps = {iconName: \"Copy\"}\n\nconst machineOptions = [\n  {key: 1, text: \"master-1\"},\n  {key: 2, text: \"master-2\"},\n  {key: 3, text: \"master-3\"},\n]\n\ntype SSHModalProps = {\n  csrfToken: MutableRefObject<string>\n}\n\nconst theme = getTheme()\nconst contentStyles = mergeStyleSets({\n  container: {\n    display: \"flex\",\n    flexFlow: \"column nowrap\",\n    alignItems: \"stretch\",\n  },\n  header: [\n    {\n      flex: \"1 1 auto\",\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\n      color: theme.palette.neutralPrimary,\n      display: \"flex\",\n      alignItems: \"center\",\n      fontSize: FontSizes.xLargePlus,\n      fontWeight: FontWeights.semibold,\n      padding: \"12px 12px 14px 24px\",\n    },\n  ],\n  body: {\n    flex: \"4 4 auto\",\n    padding: \"0 24px 24px 24px\",\n    overflowY: \"hidden\",\n    selectors: {\n      \"p\": {margin: \"14px 0\"},\n      \"p:first-child\": {marginTop: 0},\n      \"p:last-child\": {marginBottom: 0},\n    },\n  },\n})\n\nconst iconButtonStyles = {\n  root: {\n    color: theme.palette.neutralPrimary,\n    marginLeft: \"auto\",\n    marginTop: \"4px\",\n    marginRight: \"2px\",\n  },\n  rootHovered: {\n    color: theme.palette.neutralDark,\n  },\n}\n\nconst sshDocs: string =\n  \"https://msazure.visualstudio.com/AzureRedHatOpenShift/_wiki/wikis/ARO.wiki/136823/ARO-SRE-portal?anchor=ssh-(elevated)\"\n\nexport const SSHModal = forwardRef<any, SSHModalProps>(({csrfToken}, ref) => {\n  const [isModalOpen, {setTrue: showModal, setFalse: hideModal}] = useBoolean(false)\n\n  const titleId = useId(\"title\")\n  const [update, {setTrue: requestSSH, setFalse: sshRequested}] = useBoolean(false)\n  const [resourceID, setResourceID] = useState(\"\")\n  const [machineName, setMachineName] = useState<IDropdownOption>()\n  const [requestable, {setTrue: setRequestable, setFalse: setUnrequestable}] = useBoolean(false)\n  const [data, setData] = useState<{command: string; password: string} | null>()\n  const [error, setError] = useState<AxiosResponse | null>(null)\n\n  useImperativeHandle(ref, () => ({\n    LoadSSH: (item: string) => {\n      setUnrequestable()\n      setData(null)\n      setError(null)\n      showModal()\n      setResourceID(item)\n    },\n  }))\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setError(null)\n        const result = await axios({\n          method: \"post\",\n          url: resourceID + \"/ssh/new\",\n          data: {\n            master: machineName?.key,\n          },\n          headers: {\"X-CSRF-Token\": csrfToken.current},\n        })\n        setData(result.data)\n        setRequestable()\n      } catch (error) {\n        setRequestable()\n        setError(error.response)\n      }\n    }\n    if (update && machineName) {\n      sshRequested()\n      fetchData()\n    }\n    return\n  }, [resourceID, machineName, csrfToken, update, sshRequested, setRequestable])\n\n  const onChange = (\n    event: React.FormEvent<HTMLDivElement>,\n    option?: IDropdownOption<any>\n  ): void => {\n    setMachineName(option)\n    setRequestable()\n  }\n\n  const errorBar = (): any => {\n    return (\n      <MessageBar\n        messageBarType={MessageBarType.error}\n        isMultiline={false}\n        onDismiss={() => setError(null)}\n        dismissButtonAriaLabel=\"Close\"\n      >\n        {error?.statusText}\n      </MessageBar>\n    )\n  }\n\n  const selectionField = (): any => {\n    return (\n      <Stack tokens={{childrenGap: 15}}>\n        <Dropdown label={`Machine Selection`} onChange={onChange} options={machineOptions} />\n        <PrimaryButton onClick={requestSSH} text=\"Request\" disabled={!requestable} />\n      </Stack>\n    )\n  }\n\n  const dataResult = (): any => {\n    return (\n      <div>\n        <Stack>\n          <Stack horizontal verticalAlign={\"end\"}>\n            <Stack.Item grow>\n              <TextField label=\"Command\" value={data?.command} readOnly />\n            </Stack.Item>\n            <Stack.Item>\n              <IconButton\n                iconProps={copyIcon}\n                ariaLabel=\"Copy command\"\n                onClick={(_) => {\n                  if (data) {\n                    navigator.clipboard.writeText(data.command)\n                  }\n                }}\n              />\n            </Stack.Item>\n          </Stack>\n          <Stack horizontal verticalAlign={\"end\"}>\n            <Stack.Item grow>\n              <TextField\n                label=\"Password\"\n                value={data?.password}\n                type=\"password\"\n                canRevealPassword\n                readOnly\n              />{\" \"}\n            </Stack.Item>\n            <Stack.Item>\n              <IconButton\n                iconProps={copyIcon}\n                ariaLabel=\"Copy password\"\n                onClick={(_) => {\n                  if (data) {\n                    navigator.clipboard.writeText(data.password)\n                  }\n                }}\n              />\n            </Stack.Item>\n          </Stack>\n        </Stack>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Modal\n        titleAriaId={titleId}\n        isOpen={isModalOpen}\n        onDismiss={hideModal}\n        isModeless={true}\n        containerClassName={contentStyles.container}\n      >\n        <div className={contentStyles.header}>\n          <span id={titleId}>SSH Access</span>\n          <IconButton\n            styles={iconButtonStyles}\n            iconProps={cancelIcon}\n            ariaLabel=\"Close popup modal\"\n            onClick={hideModal}\n          />\n        </div>\n\n        <div className={contentStyles.body}>\n          <p>\n            Before requesting SSH access, please ensure you have read the{\" \"}\n            <a href={sshDocs}>SSH docs</a>.\n          </p>\n          {error && errorBar()}\n          {data ? dataResult() : selectionField()}\n        </div>\n      </Modal>\n    </div>\n  )\n})\n","import axios, {AxiosResponse} from \"axios\"\n\nconst OnError = (err: AxiosResponse): AxiosResponse | null => {\n  if (err.status === 403) {\n    document.location.href = \"/api/login\"\n    return null\n  } else {\n    return err\n  }\n}\n\nexport const FetchClusters = async (): Promise<AxiosResponse | null> => {\n  try {\n    const result = await axios(\"/api/clusters\")\n    return result\n  } catch (e) {\n    let err = e.response as AxiosResponse\n    return OnError(err)\n  }\n}\n\nexport const FetchInfo = async (): Promise<AxiosResponse | null> => {\n  try {\n    const result = await axios(\"/api/info\")\n    return result\n  } catch (e) {\n    let err = e.response as AxiosResponse\n    return OnError(err)\n  }\n}\n\nexport const ProcessLogOut = async (): Promise<any> => {\n  try {\n    const result = await axios({method: \"POST\", url: \"/api/logout\"})\n    return result\n  } catch (e) {\n    let err = e.response as AxiosResponse\n    console.log(err)\n  }\n  document.location.href = \"/api/login\"\n}\n\nexport const RequestKubeconfig = async (\n  csrfToken: string,\n  clusterID: string\n): Promise<AxiosResponse | null> => {\n  try {\n    const result = await axios({\n      method: \"POST\",\n      url: clusterID + \"/kubeconfig/new\",\n      headers: {\n        \"X-CSRF-Token\": csrfToken,\n      },\n    })\n    return result\n  } catch (e) {\n    let err = e.response as AxiosResponse\n    return OnError(err)\n  }\n}\n","import {IconButton, TooltipHost} from \"@fluentui/react\"\nimport {AxiosResponse} from \"axios\"\nimport {RequestKubeconfig} from \"./Request\"\nimport {MutableRefObject, useEffect, useLayoutEffect} from \"react\"\nimport {useState} from \"react\"\nimport {useRef} from \"react\"\nimport {forwardRef} from \"react\"\nimport {parse as parseContentDisposition} from \"content-disposition\"\n\ntype KubeconfigButtonProps = {\n  csrfToken: MutableRefObject<string>\n  clusterID: string\n}\n\ntype FileDownload = {\n  name: string\n  content: string\n}\n\nexport const KubeconfigButton = forwardRef<any, KubeconfigButtonProps>(\n  ({csrfToken, clusterID}, ref) => {\n    const [data, setData] = useState<FileDownload>({name: \"\", content: \"\"})\n    const [error, setError] = useState<AxiosResponse | null>(null)\n    const [fetching, setFetching] = useState(\"DONE\")\n    const buttonRef = useRef<HTMLAnchorElement | null>(null)\n\n    useEffect(() => {\n      const onData = (result: AxiosResponse | null) => {\n        if (result?.status === 200) {\n          const blob = new Blob([result.request.response])\n          const fileDownloadUrl = URL.createObjectURL(blob)\n          const filename = parseContentDisposition(result.headers[\"content-disposition\"]).parameters\n            .filename\n          setData({content: fileDownloadUrl, name: filename})\n        } else {\n          setError(result)\n        }\n        setFetching(\"DONE\")\n      }\n\n      if (fetching === \"\") {\n        setFetching(\"FETCHING\")\n        RequestKubeconfig(csrfToken.current, clusterID).then(onData)\n      }\n    }, [fetching, error, data, clusterID, csrfToken])\n\n    useLayoutEffect(() => {\n      if (data.content && buttonRef && buttonRef.current) {\n        buttonRef.current.href = data.content\n        buttonRef.current.download = data.name\n        buttonRef.current.click()\n        URL.revokeObjectURL(data.content)\n        data.content = \"\"\n      }\n    }, [data])\n\n    return (\n      <>\n        <TooltipHost content={`Download Kubeconfig`}>\n          <IconButton\n            iconProps={{iconName: \"HardDriveGroup\"}}\n            disabled={fetching === \"FETCHING\"}\n            aria-label=\"Download Kubeconfig\"\n            onClick={(_) => setFetching(\"\")}\n          />\n          <a style={{display: \"none\"}} ref={buttonRef} href={\"#\"}>\n            dl\n          </a>\n        </TooltipHost>\n      </>\n    )\n  }\n)\n","import React, {useState, useEffect, useRef, MutableRefObject, Component} from \"react\"\nimport {\n  Stack,\n  IconButton,\n  MessageBarType,\n  MessageBar,\n  CommandBar,\n  ICommandBarItemProps,\n  Separator,\n  Text,\n  IMessageBarStyles,\n  mergeStyleSets,\n  TooltipHost,\n  TextField,\n} from \"@fluentui/react\"\nimport {\n  DetailsList,\n  DetailsListLayoutMode,\n  SelectionMode,\n  IColumn,\n  IDetailsListStyles,\n} from \"@fluentui/react/lib/DetailsList\"\n\nimport {FetchClusters} from \"./Request\"\nimport {KubeconfigButton} from \"./Kubeconfig\"\nimport {AxiosResponse} from \"axios\"\n\ninterface ICluster {\n  key: string\n  name: string\n}\n\nconst errorBarStyles: Partial<IMessageBarStyles> = {root: {marginBottom: 15}}\n\nconst classNames = mergeStyleSets({\n  controlWrapper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  fileIconImg: {\n    verticalAlign: \"middle\",\n    maxHeight: \"20px\",\n    maxWidth: \"20px\",\n  },\n  headerIcon: {\n    height: 18,\n    paddingTop: 1,\n  },\n  iconContainer: {\n    margin: \"-11px 0px\",\n    height: 42,\n  },\n  controlButtonContainer: {\n    paddingLeft: 0,\n  },\n  titleText: {\n    fontWeight: 600,\n    fontSize: 24,\n    lineHeight: 32,\n  },\n  subtitleText: {\n    color: \"#646464\",\n    fontSize: 12,\n    lineHeight: 14,\n    margin: 0,\n  },\n  itemsCount: {\n    padding: \"10px 0px\",\n  },\n})\n\nconst controlStyles = {\n  root: {\n    paddingLeft: 0,\n  },\n}\n\nconst separatorStyle = {\n  root: {\n    fontSize: 0,\n    marginBottom: 20,\n    padding: 0,\n  },\n}\n\ninterface IClusterListState {\n  columns: IColumn[]\n  items: ICluster[]\n  modalOpen: boolean\n}\n\nconst clusterListDetailStyles: Partial<IDetailsListStyles> = {\n  headerWrapper: {\n    marginTop: \"-16px\",\n  },\n}\n\ninterface ClusterListControlProps {\n  items: ICluster[]\n  sshModalRef: MutableRefObject<any>\n  csrfToken: MutableRefObject<string>\n}\n\nclass ClusterListControl extends Component<ClusterListControlProps, IClusterListState> {\n  private _sshModal: MutableRefObject<any>\n\n  constructor(props: ClusterListControlProps) {\n    super(props)\n\n    this._sshModal = props.sshModalRef\n\n    const columns: IColumn[] = [\n      {\n        key: \"icon\",\n        name: \"\",\n        fieldName: \"\",\n        minWidth: 24,\n        isRowHeader: false,\n        data: \"string\",\n        isPadded: false,\n        maxWidth: 24,\n        onRender: (item: ICluster) => (\n          <Stack horizontal verticalAlign=\"center\" className={classNames.iconContainer}>\n            <img src=\"/favicon.ico\" className={classNames.headerIcon} alt=\"\" />\n          </Stack>\n        ),\n      },\n      {\n        key: \"name\",\n        name: \"Name\",\n        fieldName: \"name\",\n        minWidth: 210,\n        isRowHeader: true,\n        isResizable: true,\n        isSorted: true,\n        isSortedDescending: false,\n        sortAscendingAriaLabel: \"Sorted A to Z\",\n        sortDescendingAriaLabel: \"Sorted Z to A\",\n        onColumnClick: this._onColumnClick,\n        data: \"string\",\n        isPadded: true,\n      },\n      {\n        key: \"icons\",\n        name: \"\",\n        fieldName: \"icons\",\n        minWidth: 92,\n        isRowHeader: false,\n        data: \"string\",\n        isPadded: true,\n        onRender: (item: ICluster) => (\n          <Stack horizontal verticalAlign=\"center\" className={classNames.iconContainer}>\n            <TooltipHost content={`Prometheus`}>\n              <IconButton\n                iconProps={{iconName: \"BarChart4\"}}\n                aria-label=\"Prometheus\"\n                href={item.name + `/prometheus`}\n              />\n            </TooltipHost>\n            <TooltipHost content={`SSH`}>\n              <IconButton\n                iconProps={{iconName: \"CommandPrompt\"}}\n                aria-label=\"SSH\"\n                onClick={(_) => this._onSSHClick(item)}\n              />\n            </TooltipHost>\n            <KubeconfigButton clusterID={item.name} csrfToken={props.csrfToken} />\n          </Stack>\n        ),\n      },\n    ]\n\n    this.state = {\n      items: this.props.items,\n      columns: columns,\n      modalOpen: false,\n    }\n  }\n\n  public render() {\n    const {columns, items} = this.state\n\n    return (\n      <Stack>\n        <div className={classNames.controlWrapper}>\n          <TextField placeholder=\"Filter on any field\" onChange={this._onChangeText} />\n        </div>\n        <Text className={classNames.itemsCount}>Showing {items.length} items</Text>\n        <DetailsList\n          items={items}\n          columns={columns}\n          selectionMode={SelectionMode.none}\n          getKey={this._getKey}\n          setKey=\"none\"\n          layoutMode={DetailsListLayoutMode.justified}\n          isHeaderVisible={true}\n          onItemInvoked={this._onItemInvoked}\n          styles={clusterListDetailStyles}\n        />\n      </Stack>\n    )\n  }\n\n  private _getKey(item: any, index?: number): string {\n    return item.key\n  }\n\n  private _onChangeText = (\n    ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    this.setState({\n      items: text\n        ? this.props.items.filter((i) => i.name.toLowerCase().indexOf(text) > -1)\n        : this.props.items,\n    })\n  }\n\n  private _onSSHClick(item: any): void {\n    const modal = this._sshModal\n    if (modal && modal.current) {\n      modal.current.LoadSSH(item.name)\n    }\n  }\n\n  private _onItemInvoked(item: any): void {\n    alert(`Item invoked: ${item.name}`)\n  }\n\n  private _onColumnClick = (ev: React.MouseEvent<HTMLElement>, column: IColumn): void => {\n    const {columns, items} = this.state\n    const newColumns: IColumn[] = columns.slice()\n    const currColumn: IColumn = newColumns.filter((currCol) => column.key === currCol.key)[0]\n    newColumns.forEach((newCol: IColumn) => {\n      if (newCol === currColumn) {\n        currColumn.isSortedDescending = !currColumn.isSortedDescending\n        currColumn.isSorted = true\n      } else {\n        newCol.isSorted = false\n        newCol.isSortedDescending = true\n      }\n    })\n    this.setState({\n      columns: newColumns,\n      items: items,\n    })\n  }\n}\n\nexport function ClusterList(props: {\n  csrfToken: MutableRefObject<string>\n  sshBox: MutableRefObject<any>\n  loaded: string\n}) {\n  const [data, setData] = useState<any>([])\n  const [error, setError] = useState<AxiosResponse | null>(null)\n  const state = useRef<ClusterListControl>(null)\n  const [fetching, setFetching] = useState(\"\")\n\n  const errorBar = (): any => {\n    return (\n      <MessageBar\n        messageBarType={MessageBarType.error}\n        isMultiline={false}\n        onDismiss={() => setError(null)}\n        dismissButtonAriaLabel=\"Close\"\n        styles={errorBarStyles}\n      >\n        {error?.statusText}\n      </MessageBar>\n    )\n  }\n\n  // Helper function to refresh the actual state of the DetailList\n  // see https://developer.microsoft.com/en-us/fluentui#/controls/web/detailslist#best-practices\n  const updateData = (newData: any) => {\n    setData(newData)\n    if (state && state.current) {\n      state.current.setState({items: newData})\n    }\n  }\n\n  useEffect(() => {\n    const onData = (result: AxiosResponse | null) => {\n      if (result?.status === 200) {\n        updateData(result.data)\n      } else {\n        setError(result)\n      }\n      setFetching(\"DONE\")\n    }\n\n    if (fetching === \"\" && props.loaded === \"DONE\") {\n      setFetching(\"FETCHING\")\n      FetchClusters().then(onData)\n    }\n  }, [data, fetching, setFetching, props.loaded])\n\n  const _items: ICommandBarItemProps[] = [\n    {\n      key: \"refresh\",\n      text: \"Refresh\",\n      iconProps: {iconName: \"Refresh\"},\n      onClick: () => {\n        updateData([])\n        setFetching(\"\")\n      },\n    },\n  ]\n\n  return (\n    <Stack>\n      <span className={classNames.titleText}>Clusters</span>\n      <span className={classNames.subtitleText}>Azure Red Hat OpenShift</span>\n      <CommandBar\n        items={_items}\n        ariaLabel=\"Use left and right arrow keys to navigate between commands\"\n        className={classNames.controlButtonContainer}\n        styles={controlStyles}\n      />\n      <Separator styles={separatorStyle} />\n\n      {error && errorBar()}\n      <ClusterListControl\n        items={data}\n        ref={state}\n        sshModalRef={props.sshBox}\n        csrfToken={props.csrfToken}\n      />\n    </Stack>\n  )\n}\n","import {useState, useEffect, useRef, useCallback} from \"react\"\nimport {\n  Stack,\n  Text,\n  Panel,\n  IStackTokens,\n  IconButton,\n  IStackStyles,\n  DefaultPalette,\n  ThemeProvider,\n  PartialTheme,\n  PanelType,\n  IButtonStyles,\n  IPanelProps,\n  MessageBar,\n  IRenderFunction,\n  ITextStyles,\n  IPanelStyles,\n  TooltipHost,\n  IMessageBarStyles,\n  MessageBarType,\n  Icon,\n} from \"@fluentui/react\"\nimport {AxiosResponse} from \"axios\"\nimport {useBoolean} from \"@fluentui/react-hooks\"\nimport {SSHModal} from \"./SSHModal\"\nimport {ClusterList} from \"./ClusterList\"\nimport {FetchInfo, ProcessLogOut} from \"./Request\"\n\nconst containerStackTokens: IStackTokens = {}\nconst appStackTokens: IStackTokens = {childrenGap: 10}\n\nconst errorBarStyles: Partial<IMessageBarStyles> = {root: {marginBottom: 15}}\n\nconst stackStyles: IStackStyles = {\n  root: [\n    {\n      width: \"100%\",\n      padding: 0,\n    },\n  ],\n}\n\nconst headerTextStyles: ITextStyles = {\n  root: {\n    fontWeight: 600,\n  },\n}\n\nconst contentStackStyles: IStackStyles = {\n  root: [\n    {\n      padding: 20,\n    },\n  ],\n}\n\nconst stackNavStyles: IStackStyles = {\n  root: {\n    padding: \"0px 15px\",\n    height: 40,\n  },\n}\n\nconst MenuButtonStyles: IButtonStyles = {\n  icon: {color: DefaultPalette.white},\n}\n\nconst darkTheme: PartialTheme = {\n  semanticColors: {\n    bodyBackground: DefaultPalette.themePrimary,\n    bodyText: DefaultPalette.white,\n  },\n}\n\nconst navPanelStyles: Partial<IPanelStyles> = {\n  navigation: {\n    height: 40,\n    lineHeight: 40,\n    fontSize: 15,\n    paddingLeft: 15,\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n}\n\nfunction App() {\n  const [data, updateData] = useState({location: \"\", csrf: \"\", elevated: false, username: \"\"})\n  const [error, setError] = useState<AxiosResponse | null>(null)\n  const [isOpen, {setTrue: openPanel, setFalse: dismissPanel}] = useBoolean(false)\n  const [fetching, setFetching] = useState(\"\")\n\n  const sshRef = useRef<typeof SSHModal | null>(null)\n  const csrfRef = useRef<string>(\"\")\n\n  useEffect(() => {\n    const onData = (result: AxiosResponse | null) => {\n      if (result?.status === 200) {\n        updateData(result.data)\n        csrfRef.current = result.data.csrf\n      } else {\n        setError(result)\n      }\n      setFetching(\"DONE\")\n    }\n\n    if (fetching === \"\") {\n      setFetching(\"FETCHING\")\n      FetchInfo().then(onData)\n    }\n  }, [fetching, error, data])\n\n  const onRenderNavigationContent: IRenderFunction<IPanelProps> = useCallback(\n    (props, defaultRender) => (\n      <>\n        <IconButton iconProps={{iconName: \"GlobalNavButton\"}} onClick={dismissPanel} />\n      </>\n    ),\n    [dismissPanel]\n  )\n\n  const logOut = () => {\n    ProcessLogOut()\n  }\n\n  const errorBar = (): any => {\n    console.log(error)\n    return (\n      <MessageBar\n        messageBarType={MessageBarType.error}\n        isMultiline={false}\n        onDismiss={() => setError(null)}\n        dismissButtonAriaLabel=\"Close\"\n        styles={errorBarStyles}\n      >\n        {error?.statusText}\n      </MessageBar>\n    )\n  }\n\n  return (\n    <>\n      <Stack styles={stackStyles} tokens={containerStackTokens} horizontalAlign={\"stretch\"}>\n        <Panel\n          isLightDismiss\n          styles={navPanelStyles}\n          type={PanelType.smallFixedNear}\n          isOpen={isOpen}\n          onDismiss={dismissPanel}\n          closeButtonAriaLabel=\"Close\"\n          onRenderNavigationContent={onRenderNavigationContent}\n        >\n          <p>regions go here</p>\n        </Panel>\n        <ThemeProvider theme={darkTheme}>\n          <Stack\n            grow\n            tokens={appStackTokens}\n            horizontalAlign={\"start\"}\n            verticalAlign={\"center\"}\n            horizontal\n            styles={stackNavStyles}\n          >\n            <Stack.Item>\n              <IconButton\n                iconProps={{iconName: \"GlobalNavButton\"}}\n                onClick={openPanel}\n                styles={MenuButtonStyles}\n              />\n            </Stack.Item>\n            <Stack.Item grow>\n              <Text styles={headerTextStyles}>\n                ARO Portal {data.location ? \"(\" + data.location + \")\" : \"\"}\n              </Text>\n            </Stack.Item>\n            <Stack.Item>\n              <Text>{data.username}</Text>\n            </Stack.Item>\n\n            <Stack.Item hidden={!data.elevated}>\n              <TooltipHost content={`Elevated User`}>\n                <Icon iconName={\"Admin\"}></Icon>\n              </TooltipHost>\n            </Stack.Item>\n            <Stack.Item>\n              <IconButton\n                iconProps={{iconName: \"SignOut\"}}\n                onClick={logOut}\n                styles={MenuButtonStyles}\n              />\n            </Stack.Item>\n          </Stack>\n        </ThemeProvider>\n        <Stack styles={contentStackStyles}>\n          <Stack.Item grow>{error && errorBar()}</Stack.Item>\n          <Stack.Item grow>\n            <ClusterList csrfToken={csrfRef} sshBox={sshRef} loaded={fetching} />\n          </Stack.Item>\n        </Stack>\n        <SSHModal csrfToken={csrfRef} ref={sshRef} />\n      </Stack>\n    </>\n  )\n}\n\nexport default App\n","import ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport {mergeStyles} from \"@fluentui/react\"\n\nimport {initializeIcons} from \"@fluentui/font-icons-mdl2\"\ninitializeIcons()\n\n// Inject some global styles\nmergeStyles({\n  \":global(body,html,#root)\": {\n    margin: 0,\n    padding: 0,\n    height: \"100vh\",\n  },\n})\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}