parameters:
    rpResourceGroup: ""
    rpVmssName: ""
    gwyResourceGroup: ""
    gwyVmssName: ""

steps:
  - script: |
      set -e
      export PARENT_DOMAIN_NAME=osadev.cloud
      export PARENT_DOMAIN_RESOURCEGROUP=dns
      export GLOBAL_RESOURCEGROUP=${AZURE_PREFIX}-global

      for DOMAIN_NAME in ${AZURE_PREFIX}-clusters.$PARENT_DOMAIN_NAME ${AZURE_PREFIX}-rp.$PARENT_DOMAIN_NAME; do
          CHILD_DOMAIN_PREFIX="$(cut -d. -f1 <<<$DOMAIN_NAME)"
          echo "########## Creating NS record to DNS Zone $CHILD_DOMAIN_PREFIX ##########"
          az network dns record-set ns create \
              --resource-group "$PARENT_DOMAIN_RESOURCEGROUP" \
              --zone "$PARENT_DOMAIN_NAME" \
              --name "$CHILD_DOMAIN_PREFIX" >/dev/null
          for ns in $(az network dns zone show \
              --resource-group "$GLOBAL_RESOURCEGROUP" \
              --name "$DOMAIN_NAME" \
              --query nameServers -o tsv); do
              az network dns record-set ns add-record \
              --resource-group "$PARENT_DOMAIN_RESOURCEGROUP" \
              --zone "$PARENT_DOMAIN_NAME" \
              --record-set-name "$CHILD_DOMAIN_PREFIX" \
              --nsdname "$ns" >/dev/null
          done
      done
    name: dns_domain
    displayName: ⚙️ Update the DNS Child Domains

  - script: |
      set -e
      az keyvault certificate import \
        --vault-name "$KEYVAULT_PREFIX-svc" \
        --name rp-mdm \
        --file secrets/rp-mdm-self-signed.pem >/dev/null
      az keyvault certificate import \
          --vault-name "$KEYVAULT_PREFIX-gwy" \
          --name gwy-mdm \
          --file secrets/gwy-mdm-self-signed.pem >/dev/null
      az keyvault certificate import \
          --vault-name "$KEYVAULT_PREFIX-svc" \
          --name rp-mdsd \
          --file secrets/rp-mdsd-self-signed.pem >/dev/null
      az keyvault certificate import \
          --vault-name "$KEYVAULT_PREFIX-gwy" \
          --name gwy-mdsd \
          --file secrets/gwy-mdsd-self-signed.pem >/dev/null
      az keyvault certificate import \
          --vault-name "$KEYVAULT_PREFIX-svc" \
          --name cluster-mdsd \
          --file secrets/cluster-mdsd-self-signed.pem >/dev/null
      az keyvault certificate import \
          --vault-name "$KEYVAULT_PREFIX-svc" \
          --name dev-arm \
          --file secrets/arm.pem >/dev/null
      az keyvault certificate import \
          --vault-name "$KEYVAULT_PREFIX-svc" \
          --name rp-firstparty \
          --file secrets/firstparty.pem >/dev/null
      az keyvault certificate import \
          --vault-name "$KEYVAULT_PREFIX-svc" \
          --name rp-server \
          --file secrets/localhost.pem >/dev/null
      az keyvault certificate import \
          --vault-name "$KEYVAULT_PREFIX-por" \
          --name portal-server \
          --file secrets/localhost.pem >/dev/null
      az keyvault certificate import \
          --vault-name "$KEYVAULT_PREFIX-por" \
          --name portal-client \
          --file secrets/portal-client.pem >/dev/null
    name: certs_keyvault
    displayName: ⚙️ Import certificates to keyvault

  - script: |
      set -e
      gitCommit=$(git rev-parse --short=7 HEAD)
      az vmss delete -g ${{ parameters.rpResourceGroup }} --name ${{ parameters.rpVmssName }}-$gitCommit  --force-deletion
    name: delete_rp_vmss
    displayName: ⚙️ Delete RP VMSS
    continueOnError: false

  - script: |
      set -e
      gitCommit=$(git rev-parse --short=7 HEAD)
      az vmss delete -g ${{ parameters.gwyResourceGroup }} --name ${{ parameters.gwyVmssName }}-$gitCommit  --force-deletion
    name: delete_gwy_vmss
    displayName: ⚙️ Delete GWY VMSS
    continueOnError: false
