# Azure DevOps Job deploying rp
parameters:
  aroVersionStorageAccount: ''
  azureDevOpsE2EJSONSPN: ''
  azureDevOpsJSONSPN: ''
  billingE2EPipelineName: ''
  billingE2EBranchName: ''
  configFileName: ''
  e2eSubscription: ''
  environment: ''
  fullDeploy: ''
  locations: []
  rpMode: ''
  vsoProjectID: ''
  vsoConfigPipelineID: ''
  vsoConfigBuildID: ''

jobs:
- ${{ each location in  parameters.locations }}:
  - deployment: Deploy_${{ location }}
    pool:
      name: ARO-CI
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: specific
              project: ${{ parameters.vsoProjectID }}
              pipeline: ${{ parameters.vsoConfigPipelineID }}
              ${{ if eq(parameters.vsoConfigBuildID, 'latest') }}:
                buildVersionToDownload: latestFromBranch
                branchName: refs/heads/master
              ${{ if ne(parameters.vsoConfigBuildID, 'latest') }}:
                buildVersionToDownload: specific
                buildId: ${{ parameters.vsoConfigBuildID }}
              downloadType: specific
              downloadPath: $(System.ArtifactsDirectory)/config
            displayName: Download Config
          - script: |
              set -e

              trap 'set +e; rm -f devops-spn.json ; for c in $(docker ps -aq); do docker rm -f $c; done; docker image prune -af; rm -rf ~/.docker/config.json' EXIT

              base64 -d >devops-spn.json <<<${{ parameters.azureDevOpsJSONSPN }}
              export AZURE_CLIENT_ID=$(jq -r .clientId <devops-spn.json)
              export AZURE_CLIENT_SECRET=$(jq -r .clientSecret <devops-spn.json)
              export AZURE_TENANT_ID=$(jq -r .tenantId <devops-spn.json)

              export AZURE_SUBSCRIPTION_ID="${{ parameters.subscriptionId }}"

              if [[ "${{ parameters.fullDeploy }}" == "True" ]]; then
                export FULL_DEPLOY=true
              fi

              az acr login --name arointsvc

              docker run \
                --rm \
                -e AZURE_CLIENT_ID \
                -e AZURE_CLIENT_SECRET \
                -e AZURE_TENANT_ID \
                -e AZURE_SUBSCRIPTION_ID \
                -e FULL_DEPLOY \
                -v $(System.ArtifactsDirectory)/config/drop/deploy/${{ parameters.configFileName }}:/config.yaml
                arointsvc.azurecr.io/aro:$(Build.SourceVersion) deploy /config.yaml ${{ location }}
            displayName: ðŸš€ Buildout/Deploy ${{ location }} env
  - template: ./template-rp-and-billing-e2e.yml
    parameters:
      e2e_subscription: ${{ parameters.e2eSubscription }}
      aro_v4_e2e_devops_spn: ${{ parameters.azureDevOpsE2EJSONSPN }}
      billing_e2e_pipeline_name: ${{ parameters.billingE2EPipelineName }}
      billing_e2e_branch_name: ${{ parameters.billingE2EBranchName }}
      location: ${{ location }}
      rpMode: ${{ parameters.rpMode }}
