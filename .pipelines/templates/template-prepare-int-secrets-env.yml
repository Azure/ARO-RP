parameters:
  domainName: ""
  parentDomainName: ""
  rgPrefix: ""
  workingDirectory: ""
  location: ""
  mdmFrontendUrl: ""
  rpMdmMetricNamespace: ""
  rpMdmMonitoringAccount: ""
  clusterMdmMetricNamespace: ""
  clusterMdmMonitoringAccount: ""
  rpImage: ""
  rpImagePullJSONSPN: ""
  azureFpClientId: ""
  encryptionKey: ""
  azureDevOpsJSONSPN: ""
  mdsdNamespace: ""
  mdsdMonitoringAccount: ""
  mdsdMonitoringEnviroment: ""
  mdsdConfigVersion: ""
  vmssDomainNameLabel: ""
  vmssName: ""
  rpMode: ""
  pullSecret: ""
  sshPublicKey: ""
steps:
  - script: |
      cd ${{ parameters.workingDirectory }}

      set -eu

      COMMIT=$(git log --format=%h -n 1 HEAD)

      echo ${{ parameters.rpImagePullJSONSPN }} | base64 -d -w 0 > pull-spn.json
      pull_spn_client_id=$(cat pull-spn.json | jq -r '.clientId')
      pull_spn_client_secret=$(cat pull-spn.json | jq -r '.clientSecret')
      export RP_IMAGE_AUTH=$(echo "$pull_spn_client_id:$pull_spn_client_secret" | base64 -w 0)
      export PULL_SECRET=$(echo ${{ parameters.pullSecret }} | sed 's/"/\\"/g')

      export DOMAIN_NAME=${{ parameters.domainName }}
      export PARENT_DOMAIN_NAME=${{ parameters.parentDomainName }}
      export AZURE_FP_CLIENT_ID=${{ parameters.azureFpClientId }}
      export COSMOSDB_ACCOUNT=${{ parameters.databaseAccountName }}
      export MDM_FRONTEND=${{ parameters.mdmFrontendUrl }}
      export RP_MDM_NAMESPACE=${{ parameters.rpMdmMetricNamespace }}
      export RP_MDM_ACCOUNT=${{ parameters.rpMdmMonitoringAccount }}
      export CLUSTER_MDM_NAMESPACE=${{ parameters.clusterMdmMetricNamespace }}
      export CLUSTER_MDM_ACCOUNT=${{ parameters.clusterMdmMonitoringAccount }}
      export MDSD_NAMESPACE=${{ parameters.mdsdNamespace }}
      export MDSD_ACCOUNT=${{ parameters.mdsdMonitoringAccount }}
      export MDSD_ENVIROMENT=${{ parameters.mdsdMonitoringEnviroment }}
      export MDSD_CONFIG_VERSION=${{ parameters.mdsdConfigVersion }}
      export RP_IMAGE=${{ parameters.rpImage }}
      export ENCRYPTION_KEY=${{ parameters.encryptionKey }}
      export VMSS_DOMAIN_NAME_LABEL=${{ parameters.vmssDomainNameLabel}}
      export VMSS_NAME=$COMMIT
      RESOURCEGROUP_PREFIX=${{ parameters.rgPrefix }}
      LOCATION=${{ parameters.location }}
      RESOURCEGROUP="$RESOURCEGROUP_PREFIX-$LOCATION"
      export COSMOSDB_ACCOUNT="$RESOURCEGROUP"
      export KEYVAULT_PREFIX="$RESOURCEGROUP"
      export RP_MODE=${{ parameters.rpMode }}
      export SSH_PUBLIC_KEY="${{ parameters.sshPublicKey }}"
      
      ./hack/deploy/prepare-int-parameters.sh
    displayName: "ðŸŒ± Prepare parameters"
