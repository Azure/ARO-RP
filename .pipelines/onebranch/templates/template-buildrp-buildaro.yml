steps:
  - task: Bash@3
    displayName: ‚öôÔ∏è Make ARO
    inputs:
      targetType: inline
      script: |
        export GOPATH=$(Agent.TempDirectory)
        export TAG=$(git describe --exact-match 2>/dev/null)
        export COMMIT=$(git rev-parse --short=7 HEAD)$([[ $(git status --porcelain) = "" ]] || echo -dirty)
        if [ -z "$TAG" ];
        then
          if [ "$is_official_release" = "true" ]
          then
            git describe --exact-match
            echo "Ensure there is an annotated tag (git tag -a) for git commit ${COMMIT}"
            exit 1
          fi
          export VERSION=${COMMIT}
        else
          export VERSION=${TAG}
        fi
        echo "Version: ${VERSION}"
        echo "##vso[task.setvariable variable=releasetag;isOutput=true]${VERSION}"
        mkdir -p $(Agent.TempDirectory)/src/github.com/Azure/
        cp -rd $(Build.SourcesDirectory) $(Agent.TempDirectory)/src/github.com/Azure/ARO-RP
        cd $(Agent.TempDirectory)/src/github.com/Azure/ARO-RP
        make aro
        mkdir -p $(ob_outputDirectory)
        cp aro $(ob_outputDirectory)/aro
      workingDirectory: $(Build.SourcesDirectory)
    name: buildaro
  - task: Bash@3
    displayName: üïµÔ∏è Validate FIPS
    inputs:
      targetType: inline
      script: |
        export GOPATH=$(Agent.TempDirectory)
        make validate-fips
      workingDirectory: $(Agent.TempDirectory)/src/github.com/Azure/ARO-RP
