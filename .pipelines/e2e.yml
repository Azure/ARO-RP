trigger: none
pr: none

resources:
  pipelines:
  - pipeline: e2e
    source: CI
    trigger: true

# Azure DevOps Pipeline running e2e tests
variables:
- template: vars.yml

# Run the test suite and collect must-gather
jobs:
- job: E2E
  timeoutInMinutes: 180
  pool:
    name: ARO-CI
    demands: go-1.17
  steps:
  - template: ./templates/template-checkout.yml

  - template: ./templates/template-az-cli-login.yml
    parameters:
      azureDevOpsJSONSPN: $(aro-v4-e2e-devops-spn)

  - template: ./templates/template-push-images-to-acr.yml
    parameters:
      rpImageACR: $(RP_IMAGE_ACR)
      buildCommand: publish-image-aro

  - script: |
      export CI=true
      . ./hack/e2e/run-rp-and-e2e.sh

      run_vpn
      deploy_e2e_db

      run_portal
      validate_portal_running

      run_rp
      validate_rp_running

      register_sub

      make test-e2e
    displayName: Execute Tests

  - script: |
      export CI=true
      . ./hack/e2e/run-rp-and-e2e.sh

      hack/get-admin-kubeconfig.sh /subscriptions/$AZURE_SUBSCRIPTION_ID/resourceGroups/$CLUSTER/providers/Microsoft.RedHatOpenShift/openShiftClusters/$CLUSTER >admin.kubeconfig
      export KUBECONFIG=admin.kubeconfig

      wget https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/$(OpenShiftVersion)/openshift-client-linux-$(OpenShiftVersion).tar.gz
      tar xf openshift-client-linux-$(OpenShiftVersion).tar.gz
      ./oc adm must-gather
      tar cf must-gather.tar.gz must-gather.local.*
    displayName: Collect must-gather
    condition: failed()

  - publish: must-gather.tar.gz
    artifact: must-gather
    displayName: Append must-gather to Pipeline
    condition: failed()

  - task: PublishTestResults@2
    displayName: ðŸ“Š Publish tests results
    inputs:
      testResultsFiles: $(System.DefaultWorkingDirectory)/**/e2e-report.xml
    condition: succeededOrFailed()

  - task: CopyFiles@2
    condition: succeededOrFailed()
    inputs:
      contents: $(Build.SourcesDirectory)/*.png
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: Screenshots

  - script: |
      export CI=true
      . ./hack/e2e/run-rp-and-e2e.sh

      delete_e2e_cluster
      clean_e2e_db
      kill_rp
      kill_portal
      kill_vpn
    displayName: Cleanup
    condition: always()

  - template: ./templates/template-az-cli-logout.yml
