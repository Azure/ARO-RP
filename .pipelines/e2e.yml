trigger: none
pr: none

resources:
  pipelines:
  - pipeline: e2e
    source: CI
    trigger: true

# Azure DevOps Pipeline running e2e tests
variables:
- template: vars.yml
jobs:
- job: E2E
  timeoutInMinutes: 180
  pool:
    name: ARO-CI
    demands: go-1.17
  steps:
  - template: ./templates/template-checkout.yml

  - template: ./templates/template-az-cli-login.yml
    parameters:
      azureDevOpsJSONSPN: $(aro-v4-e2e-devops-spn)

  - template: ./templates/template-push-images-to-acr.yml
    parameters:
      rpImageACR: $(RP_IMAGE_ACR)
      buildCommand: publish-image-aro

  - task: Docker@2
    displayName: Build E2E Image
    inputs:
      repository: e2e
      tags: $(Build.BuildId)
      arguments: '--platform=linux/amd64 --no-cache --build-agrs AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID} SECRET_SA_ACCOUNT_NAME=${SECRET_SA_ACCOUNT_NAME}'
      command: build
      Dockerfile: Dockerfile.e2e

  - script: |
      docker run --platform=linux/amd64 -t --rm e2e:$(Build.BuildId) run_vpn && \
                                                                      deploy_e2e_db && \
                                                                      run_portal && \
                                                                      validate_portal_running && \
                                                                      run_rp && \
                                                                      validate_rp_running && \
                                                                      register_sub && \
                                                                      make test-e2e && \
                                                                      az logout && \
                                                                      rm -rf ~/.azure
    displayName: Execute Tests

  - task: PublishTestResults@2
    displayName: ðŸ“Š Publish tests results
    inputs:
      testResultsFiles: $(System.DefaultWorkingDirectory)/**/e2e-report.xml
    condition: succeededOrFailed()

  - task: CopyFiles@2
    condition: succeededOrFailed()
    inputs:
      contents: $(Build.SourcesDirectory)/*.png
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: Screenshots

  - template: ./templates/template-az-cli-logout.yml
