# Azure DevOps Pipeline running basic checks
trigger:
  - master

variables:
  - template: vars.yaml

jobs:
  - job: Python_Unit_Tests
    pool:
      name: ARO-CI
    steps:
      - template: ./templates/template-checkout.yaml
      - script: |
          set -xe
          make test-python
        displayName: Run Python Unit Tests

  - job: Golang_Basic_Checks
    pool:
      name: ARO-CI
    steps:
      - template: ./templates/template-checkout.yaml

      - script: |
          set -xe
          make generate
          [[ -z "$(git status -s)" ]]
        displayName: Run codegen check

      - script: |
          set -xe
          make lint-go
        displayName: Run Golang Linters

      - script: |
          set -xe
          make test-go
        displayName: Run Golang Unit Tests

      - script: |
          go run ./vendor/github.com/jstemmer/go-junit-report/go-junit-report.go < uts.txt > report.xml
        displayName: Process Reports
        condition: succeededOrFailed()

      - task: PublishTestResults@2
        displayName: Publish tests results
        inputs:
          testResultsFiles: $(System.DefaultWorkingDirectory)/**/report.xml
        condition: succeededOrFailed()

      - script: |
          set -xe
          make test-go-coverage
        displayName: Run coverage test

      - script: |
          go run ./vendor/github.com/axw/gocov/gocov/*.go convert cover.out > coverage.json
          go run ./vendor/github.com/AlekSi/gocov-xml/gocov-xml.go < coverage.json > coverage.xml
        displayName: Process Reports
        condition: succeededOrFailed()

      - task: PublishCodeCoverageResults@1
        displayName: Publish code coverage
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: $(System.DefaultWorkingDirectory)/**/coverage.xml
          failIfCoverageEmpty: false
        condition: succeededOrFailed()
