# Azure DevOps Pipeline running CI
trigger:
- master

variables:
- template: vars.yml

jobs:
- job: Python_Unit_Tests
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      Python36:
        python.version: '3.6'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(python.version)
  - template: ./templates/template-setup-golang-env.yml
    parameters:
      gobin: ${{ variables.GOBIN }}
      gopath: ${{ variables.GOPATH }}
      goroot: ${{ variables.GOROOT }}
      modulePath: ${{ variables.modulePath }}
  - script: |
      set -x
      sudo ln -s $USEPYTHONVERSION_PYTHONLOCATION/bin/python$(python.version) /usr/bin/python$(python.version)
      pip install virtualenv
      make test-python
    displayName: 'üß™Run Python Unit Tests : $(python.version)'
    workingDirectory: ${{ variables.modulePath }}

- job: Golang_Unit_Tests
  pool:
    vmImage: ubuntu-latest

  steps:
  - template: ./templates/template-setup-golang-env.yml
    parameters:
      gobin: ${{ variables.GOBIN }}
      gopath: ${{ variables.GOPATH }}
      goroot: ${{ variables.GOROOT }}
      modulePath: ${{ variables.modulePath }}
  - script: |
      set -xe
      make test-go
      [[ -z "$(git status -s)" ]]
    workingDirectory: ${{ variables.modulePath }}
    displayName: üß™Run Golang Unit Tests

  - script: |
      go run ./vendor/github.com/jstemmer/go-junit-report/go-junit-report.go < uts.txt > report.xml
      go run ./vendor/github.com/axw/gocov/gocov/*.go convert cover.out > coverage.json
      go run ./vendor/github.com/AlekSi/gocov-xml/gocov-xml.go < coverage.json > coverage.xml
    workingDirectory: ${{ variables.modulePath }}
    displayName: ‚öôÔ∏è Process Reports
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: üìä Publish tests results
    inputs:
      testResultsFiles: $(System.DefaultWorkingDirectory)/**/report.xml
    condition: succeededOrFailed()

  - task: PublishCodeCoverageResults@1
    displayName: üìà Publish code coverage
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(System.DefaultWorkingDirectory)/**/coverage.xml
      failIfCoverageEmpty: false
    condition: succeededOrFailed()
