# Azure DevOps Pipeline running CI
trigger:
  - master

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.13' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/Azure/ARO-RP' # Path to the module's code
  
jobs:
- job: 'Python_Unit_Tests'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
  - template: ./templates/template-setup-golang-env.yml
    parameters:
      GOBIN: $(GOBIN)
      GOROOT: $(GOROOT)
      GOPATH: $(GOPATH)
      modulePath: $(modulePath)
  - script: |
      export
      set -x
      pip install virtualenv
      make test-python
    displayName: 'ðŸ§ªRun Python Unit Tests : $(python.version)'
    workingDirectory: '$(modulePath)'

- job: 'Golang_Unit_Tests'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - template: ./templates/template-setup-golang-env.yml
    parameters:
      GOBIN: $(GOBIN)
      GOROOT: $(GOROOT)
      GOPATH: $(GOPATH)
      modulePath: $(modulePath)
  - script: |
      set -x
      make test-go
      [[ -z "$(git status -s)" ]]
      go-junit-report < uts.txt > report.xml
      gocov convert cover.out > coverage.json
      gocov-xml < coverage.json > coverage.xml
      mkdir coverage
      gocov-html < coverage.json > coverage/index.html
    workingDirectory: '$(modulePath)'
    displayName: 'ðŸ§ªRun Golang Unit Tests'