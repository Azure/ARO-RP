# Azure DevOps Pipeline running CI

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - docs/*
  tags:
    include:
      - v2*

variables:
  - template: vars.yml
  - name: REGISTRY
    value: registry.access.redhat.com
  - name: LOCAL_ARO_RP_IMAGE
    value: "arosvcdev.azurecr.io/aro"
  - name: LOCAL_ARO_AZEXT_IMAGE
    value: "arosvcdev.azurecr.io/azext-aro"
  - name: LOCAL_VPN_IMAGE
    value: "arosvcdev.azurecr.io/vpn"
  - name: TAG
    value: $(Build.BuildId)
  - name: VERSION
    value: $(Build.BuildId)

jobs:
  - job: Build_Test_And_Push_Az_ARO_Extension
    pool:
      name: 1es-aro-ci-pool
    steps:
      - template: ./templates/template-checkout.yml

      # Build and test the Az ARO Extension
      - script: |
          set -xe
          DOCKER_BUILD_CI_ARGS="--load" make ci-azext-aro VERSION=$(VERSION)
        displayName: ðŸ›  Build & Test Az ARO Extension

      # Push the image to ACR
      - template: ./templates/template-acr-push.yml
        parameters:
          acrFQDN: 'arosvcdev.azurecr.io'
          repository: 'azext-aro'
          pushLatest: true

  - job: Build_And_Test_RP_And_Portal
    pool:
      name: 1es-aro-ci-pool
    steps:
      - template: ./templates/template-checkout.yml

      # Build and test RP and Portal
      - script: |
          set -xe
          DOCKER_BUILD_CI_ARGS="--load" make ci-rp VERSION=$(VERSION)
        displayName: ðŸ›  Build & Test RP and Portal

      # Publish test results
      - task: PublishTestResults@2
        displayName: ðŸ“Š Publish tests results
        inputs:
          testResultsFiles: $(System.DefaultWorkingDirectory)/report.xml
        condition: succeededOrFailed()

      # Publish code coverage results
      - task: PublishCodeCoverageResults@2
        displayName: ðŸ“ˆ Publish code coverage
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage.xml
          failIfCoverageEmpty: false
        condition: succeededOrFailed()

      # Push the image to ACR
      - template: ./templates/template-acr-push.yml
        parameters:
          acrFQDN: 'arosvcdev.azurecr.io'
          repository: 'aro'
          pushLatest: true
