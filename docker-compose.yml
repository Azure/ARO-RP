services:
  vpn:
    image: ${LOCAL_VPN_IMAGE}:${VERSION}
    build:
      context: .
      dockerfile: Dockerfile.vpn
    container_name: vpn
    volumes:
      - ${PWD}/secrets:/secrets:z
    privileged: true
    devices:
      - '/dev/net/tun:/dev/net/tun:rwm'
    entrypoint: "openvpn"
    command: ["/secrets/vpn-eastus.ovpn"]
    networks:
      - aro-dev
    ports:
      - 8443:8443
      - 8444:8444
      - 2222:2222
    healthcheck:
      test: ["CMD", "pidof", "openvpn"]
      start_period: 20s
      interval: 20s
      timeout: 3s
      retries: 3

  selenium:
    image: selenium/standalone-edge:4.10.0-20230607
    container_name: selenium
    networks:
      - aro-dev
    ports:
      - "4444:4444"
    healthcheck:
      test: ["CMD", "curl", "-sS", "-f", "http://selenium:4444"]
      interval: 30s
      timeout: 10s
      retries: 3

  rp:
    image: ${LOCAL_ARO_RP_IMAGE}:${VERSION}
    build:
      context: .
      dockerfile: Dockerfile.ci-rp
      args:
        - REGISTRY=${REGISTRY}
        - ARO_VERSION=${VERSION}
      ulimits:
        nofile:
          soft: 4096
          hard: 4096
    container_name: aro-rp
    depends_on:
      vpn:
        condition: service_healthy
    command: ["rp"]
    network_mode: service:vpn
    volumes:
      - ${PWD}/secrets:/app/secrets:z
    #secrets:
    #  - source: proxy-client-key-rp
    #    target: /app/secrets/proxy-client.key   
    #  - source: proxy-client-crt-rp
    #    target: /app/secrets/proxy-client.crt
    #  - source: proxy-crt-rp
    #    target: /app/secrets/proxy.crt
    #  - source: hive-kubeconfig
    #    target: /app/secrets/aks.kubeconfig
    environment:
      # inherit from host
      - ADMIN_OBJECT_ID
      - ARO_IMAGE
      - AZURE_ARM_CLIENT_ID
      - AZURE_CLIENT_ID
      - AZURE_CLIENT_SECRET
      - AZURE_ENVIRONMENT
      - AZURE_FP_CLIENT_ID
      - AZURE_FP_SERVICE_PRINCIPAL_ID
      - AZURE_GATEWAY_CLIENT_ID
      - AZURE_GATEWAY_CLIENT_SECRET
      - AZURE_GATEWAY_SERVICE_PRINCIPAL_ID
      - AZURE_PORTAL_ACCESS_GROUP_IDS
      - AZURE_PORTAL_CLIENT_ID
      - AZURE_RP_CLIENT_ID
      - AZURE_RP_CLIENT_SECRET
      - AZURE_SERVICE_PRINCIPAL_ID
      - AZURE_SUBSCRIPTION_ID
      - AZURE_TENANT_ID
      - DATABASE_ACCOUNT_NAME
      - DATABASE_NAME
      - DOMAIN_NAME
      - KEYVAULT_PREFIX
      - LOCATION
      - MOCK_MSI_CERT
      - MOCK_MSI_CLIENT_ID
      - MOCK_MSI_TENANT_ID
      - OIDC_STORAGE_ACCOUNT_NAME
      - PARENT_DOMAIN_NAME
      - PARENT_DOMAIN_RESOURCEGROUP
      - PROXY_HOSTNAME
      - PULL_SECRET
      - RESOURCEGROUP
      - SECRET_SA_ACCOUNT_NAME
      - STORAGE_ACCOUNT_DOMAIN
      - ARO_ADOPT_BY_HIVE=true
      - ARO_CHECKOUT_PATH=/app
      - ARO_INSTALL_VIA_HIVE=true
      - HIVE_KUBE_CONFIG_PATH=/app/secrets/aks.kubeconfig
      - KUBECONFIG=/app/secrets/aks.kubeconfig
      - RP_MODE
    #ports:
    #  - "8443:8443"
    healthcheck:
      test: ["CMD", "curl", "-k", "-sS", "https://aro-rp:8443/healthz/ready"]
      interval: 60s
      timeout: 30s
      retries: 5
    restart: on-failure:3

  portal:
    image: ${LOCAL_ARO_RP_IMAGE}:${VERSION}
    container_name: aro-portal
    network_mode: service:vpn
    depends_on:
      rp:
        condition: service_started
      vpn:
        condition: service_healthy
    environment:
      - RP_MODE
      - AZURE_SUBSCRIPTION_ID
      - AZURE_TENANT_ID
      - LOCATION
      - RESOURCEGROUP
      - AZURE_PORTAL_CLIENT_ID
      - AZURE_PORTAL_ELEVATED_GROUP_IDS
      - AZURE_PORTAL_ACCESS_GROUP_IDS
      - AZURE_RP_CLIENT_SECRET
      - AZURE_RP_CLIENT_ID
      - KEYVAULT_PREFIX
      - DATABASE_ACCOUNT_NAME
      - DATABASE_NAME
      - NO_NPM=1
    #ports:
    #  - "8444:8444"
    #  - "2222:2222"
    secrets:
      - source: proxy-client-key
        target: /app/secrets/proxy-client.key
      - source: proxy-client-crt
        target: /app/secrets/proxy-client.crt
      - source: proxy-crt
        target: /app/secrets/proxy.crt
    command: ["portal"]
    healthcheck:
      test: ["CMD", "curl", "-k", "-sS", "https://aro-portal:8444/healthz/ready"]
      interval: 60s
      timeout: 20s
      retries: 5
    restart: on-failure:3

  run-e2e:
    image: ${LOCAL_ARO_E2E_IMAGE}:${VERSION}
    build:
      context: .
      dockerfile: Dockerfile.aro-e2e
      args:
        - REGISTRY=${REGISTRY}
        - ARO_VERSION=${VERSION}
      ulimits:
        nofile:
          soft: 4096
          hard: 4096
    container_name: run-e2e
    network_mode: service:vpn
    depends_on:
     vpn:
        condition: service_healthy
     rp:
        condition: service_healthy
     portal:
        condition: service_healthy
     selenium:
        condition: service_healthy
    environment:
      - CI=true
      - RP_MODE
      - LOCATION
      - CLUSTER=keobrien-e2e-test
      - AZURE_SUBSCRIPTION_ID
      - AZURE_FP_CLIENT_ID
      - AZURE_FP_SERVICE_PRINCIPAL_ID
      - AZURE_TENANT_ID
      - AZURE_RP_CLIENT_ID
      - AZURE_RP_CLIENT_SECRET
      - AZURE_CLIENT_ID
      - AZURE_CLIENT_SECRET
      - DATABASE_ACCOUNT_NAME
      - DATABASE_NAME
      - RESOURCEGROUP=keobrien-e2e-test
      - PROXY_HOSTNAME
      - RP_BASE_URL=https://aro-rp:8443
      - E2E_LABEL
      - ARO_SELENIUM_HOSTNAME=selenium
      - PORTAL_HOSTNAME=https://aro-portal:8444
    entrypoint: "/usr/local/bin/e2e.test"
    command: ["-test.v", "--ginkgo.v", "--ginkgo.timeout=180m", "--ginkgo.flake-attempts=2", "--ginkgo.junit-report=/tmp/e2e-report.xml", "--ginkgo.label-filter=${E2E_LABEL}"]

secrets:
  proxy-client-key:
    file: ./secrets/proxy-client.key
  proxy-client-crt:
    file: ./secrets/proxy-client.crt
  proxy-crt:
    file: ./secrets/proxy.crt
  hive-kubeconfig:
    file: ./aks.kubeconfig

networks:
  aro-dev: